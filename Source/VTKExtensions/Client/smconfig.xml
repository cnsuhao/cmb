<ServerManagerConfiguration>

  <ProxyGroup name="implicit_functions">
    <Proxy name="ImplicitSelectionLoop" class="vtkImplicitSelectionLoop">
      <ProxyProperty name="Loop" command="SetLoop">
        <ProxyGroupDomain name="group">
          <Group name="points"/>
        </ProxyGroupDomain>
      </ProxyProperty>
      <DoubleVectorProperty
         name="Normal"
         command="SetNormal"
         number_of_elements="3"
         default_values="0.0 0.0 1.0" >
        <DoubleRangeDomain name="range"/>
      </DoubleVectorProperty>
      <IntVectorProperty name="AutomaticNormalGeneration"
                         command="SetAutomaticNormalGeneration"
                         number_of_elements="1"
                         default_values="0">
        <BooleanDomain/>
      </IntVectorProperty>
    </Proxy>
  </ProxyGroup>

  <ProxyGroup name="sources">

    <!-- ==================================================================== -->
    <SourceProxy name="cmbIDSelectionSource" class="vtkPVSelectionSource"
      base_proxygroup="sources" base_proxyname="SelectionSourceBase">
     <Documentation>
        IDSelectionSource is a source producing a ID based selection. This
        cannot be used for selecting composite datasets.
     </Documentation>

     <IdTypeVectorProperty
        name="IDs"
        command="AddID"
        clean_command="RemoveAllIDs"
        repeat_command="1"
        number_of_elements_per_command="2"
        number_of_elements="2"
        default_values="0 0">
        <Documentation>
          The list of IDs that will be added to the selection produced by the
          selection source. This takes pairs of values as
          (process number, id).
        </Documentation>
     </IdTypeVectorProperty>

     <Property name="RemoveAllIDs" command="RemoveAllIDs" />

          <!-- End of IDSelectionSource -->
    </SourceProxy>

    <SourceProxy name="ContourGroup" class="vtkCMBContourGroupFilter"
      label="Contour Grouping Filter">
      <Documentation
        long_help="Generate a multiblock data with contour groups."
        short_help="Group contours as a multiblock.">
        vtkCMBContourGroupFilter is a filter to output a vtkMultiBlockDataSet to a file with each block
        as a group of contours appended as a polydata, and each cell (polyline)
        in the polydata represents a contour
      </Documentation>
      <IntVectorProperty
        name="ActiveGroupIndex"
        label="Set Active Contour Group Index"
        command="SetActiveGroupIndex"
        number_of_elements="1"
        default_values="-1" >
        <Documentation>
          Sets which contour group will be modified by the other functions
        </Documentation>
      </IntVectorProperty>

      <ProxyProperty name="Contour"
        command="AddContour"
        repeatable="1"
        remove_command="RemoveContour"
        label="Clip Function">
        <ProxyGroupDomain name="groups">
          <Group name="implicit_functions"/>
        </ProxyGroupDomain>
        <Documentation>
          Set the parameters of the clip function.
        </Documentation>
      </ProxyProperty>

      <Property name="RemoveAllContours" command="RemoveAllContours" />

      <IntVectorProperty
        name="GroupInvert"
        label="Turn the Invert flag On/Off for the group"
        command="SetGroupInvert"
        number_of_elements="1"
        default_values="1" >
        <Documentation>
          Invert flag for the group
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
        name="ProjectionNormal"
        label="Contour Projection Normal"
        command="SetContourProjectionNormal"
        number_of_elements="2"
        default_values="0 2" >
        <Documentation>
          Contour Projection Normal
        </Documentation>
      </IntVectorProperty>
      <!-- End of vtkCMBContourGroupFilter -->
    </SourceProxy>

    <!-- ==================================================================== -->
    <SourceProxy name="GAMBITReader"
       class="vtkGAMBITReader"
       label="GAMBIT Mesh Reader">
      <Documentation
        short_help="Read a GAMBIT mesh file."
        long_help="Read a GAMBIT unstructured grid.">
      </Documentation>

      <StringVectorProperty name="FileName"
         command="SetFileName"
         number_of_elements="1"
         animateabl="0">
        <FileListDomain name="files"/>
        <Documentation>
          This property specifies the file name for the reader.
        </Documentation>
      </StringVectorProperty>
      <Hints>
        <ReaderFactory extensions="neu"
                       file_description="GAMBIT Files" />
      </Hints>
    </SourceProxy>

    <SourceProxy name="CMBMeshReader"
       class="vtkCMBMeshReader"
       label="CMB Mesh Reader">
      <Documentation
        short_help="Read a CMB mesh file."
        long_help="Read a CMB ADH, PT123, WASH123D or XMS mesh file.">
      </Documentation>

      <StringVectorProperty name="FileName"
         command="SetFileName"
         number_of_elements="1"
         animateabl="0">
        <FileListDomain name="files"/>
        <Documentation>
          This property specifies the file name for the reader.
        </Documentation>
      </StringVectorProperty>

      <IntVectorProperty name="MeshDimension"
         command="GetMeshDimension"
         number_of_elements="1"
         default_values="3"
         information_only="1">
        <SimpleIntInformationHelper/>
      </IntVectorProperty>

      <IntVectorProperty name="CreateMeshElementIdArray"
         label="Create Mesh Element ID array"
         command="SetCreateMeshElementIdArray"
         number_of_elements="1"
         default_values="0"
         animateabl="0">
        <BooleanDomain name="bool"/>
        <Documentation>
          This property specifies whether to generate the Mesh Element ID array from the file format's one-based element indices.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty name="CreateMeshNodeIdArray"
         label="Create Mesh Node ID array"
         command="SetCreateMeshNodeIdArray"
         number_of_elements="1"
         default_values="0"
         animateabl="0">
        <BooleanDomain name="bool"/>
        <Documentation>
          This property specifies whether to generate the Mesh Node ID array from the file format's one-based node indices.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty name="CreateMeshMaterialIdArray"
         label="Create Mesh Material ID/Region array"
         command="SetCreateMeshMaterialIdArray"
         number_of_elements="1"
         default_values="1"
         animateabl="0">
        <BooleanDomain name="bool"/>
        <Documentation>
          This property specifies whether to generate the Mesh Material ID or Region array (values are defaulted to 1 if file does not include information).
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty name="RenameMaterialAsRegion"
         label="Name of Material/Region array"
         command="SetRenameMaterialAsRegion"
         number_of_elements="1"
         default_values="1"
         animateabl="0">
        <EnumerationDomain name="enum">
          <Entry value="0" text="Mesh Material ID"/>
          <Entry value="1" text="Region"/>
        </EnumerationDomain>
        <Documentation>
          This property specifies the name for the generated Mesh Material ID/Region array.
        </Documentation>
      </IntVectorProperty>
      <Hints>
        <ReaderFactory extensions="1dm 2dm 3dm"
                       file_description="CMB Edge, Surface and Volume Mesh Files" />
      </Hints>
    </SourceProxy>

    <SourceProxy name="OSDLReader"
      class="vtkOSDLReader"
      label="OSDL reader">
      <Documentation
        short_help="Read a SceneGen OSDL file."
        long_help="Read a SceneGen OSDL file.  This is for backward compatibility">
      </Documentation>
      <StringVectorProperty
        name="FileName"
        command="SetFileName"
        animateable="0"
        number_of_elements="1">
        <FileListDomain name="files"/>
        <Documentation>
          This property specifies the file name for the reader.
        </Documentation>
      </StringVectorProperty>
      <Hints>
        <ReaderFactory extensions="osd.txt"
                       file_description="SceneGen OSDL Files" />
      </Hints>
    </SourceProxy>

    <SourceProxy name="StringReader"
      class="vtkStringReader"
      label="SceneGen reader">
      <Documentation
        short_help="Read a SceneGen file."
        long_help="Read a SceneGen file.">
      </Documentation>
      <StringVectorProperty
        name="FileName"
        command="SetFileName"
        animateable="0"
        number_of_elements="1">
        <FileListDomain name="files"/>
        <Documentation>
          This property specifies the file name for the reader.
        </Documentation>
      </StringVectorProperty>
      <Hints>
        <ReaderFactory extensions="sg"
                       file_description="SceneGen Files" />
        <ReaderFactory extensions="crf sbt sbs sbi simb.xml"
                       file_description="SimBuilder Files" />

<!--
        <ReaderFactory extensions="sg sbt sbs sbi simb.xml"
                       file_description="SceneGen and SimBuilder Files" />
-->
      </Hints>
    </SourceProxy>
    <SourceProxy name="StringWriter"
      class="vtkStringWriter"
      label="String Writer">
      <Documentation
        long_help="Write a string of data to disk.">
      </Documentation>
      <StringVectorProperty
        name="FileName"
        command="SetFileName"
        animateable="0"
        number_of_elements="1">
        <FileListDomain name="files"/>
        <Documentation>
          This property specifies the file name for the reader.
        </Documentation>
      </StringVectorProperty>

      <StringVectorProperty
        name="Text"
        command="SetText"
        animateable="0"
        number_of_elements="1">
      </StringVectorProperty>

    </SourceProxy>

    <SourceProxy name="CmbSceneV2WriterHelper"
      class="vtkCMBSceneV2WriterHelper"
      label="CmbSceneV2WriterHelper">
      <Documentation
        long_help="helps construct the scene gen file. Packages the scene, and writes it">
      </Documentation>
      <StringVectorProperty
        name="FileName"
        command="SetFileName"
        animateable="0"
        number_of_elements="1">
        <FileListDomain name="files"/>
        <Documentation>
          This property specifies the file name for the reader.
        </Documentation>
      </StringVectorProperty>

      <StringVectorProperty
        name="Text"
        command="SetText"
        animateable="0"
        number_of_elements="1">
       <Documentation>
         Set the contents of the file to write out.
       </Documentation>
      </StringVectorProperty>

      <IntVectorProperty
        name="Mode"
        command="SetMode"
        number_of_elements="1"
        default_values="0" >
       <Documentation>
         Set what operation you want the helper to do.
       </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
        name="PackageScene"
        command="SetPackageScene"
        number_of_elements="1"
        default_values="0" >
       <Documentation>
         Set if you want to package the scene.
       </Documentation>
      </IntVectorProperty>

      <StringVectorProperty name="AddObjectFileNameInfo"
        number_of_elements_per_command="1"
        repeat_command="1"
        information_only="1">
      </StringVectorProperty>

      <StringVectorProperty
        name="AddObjectFileName"
        command="AddObjectFileName"
        clean_command="RemoveAllObjectFileNames"
        repeat_command="1"
        number_of_elements_per_command="1"
        information_property="AddObjectFileNameInfo">
      </StringVectorProperty>
    </SourceProxy>

    <SourceProxy name="CMBGeometry2DReader"
      class="vtkCMBGeometry2DReader"
      label="CMB 2D Geometry reader">
      <Documentation
        short_help="Read an CMB 2D Geometry file."
        long_help="Read an CMB 2D Geometry file (currently only shapefiles).">
      </Documentation>

      <StringVectorProperty
        name="FileName"
        command="SetFileName"
        animateable="0"
        number_of_elements="1">
        <FileListDomain name="files"/>
        <Documentation>
          This property specifies the file name for the reader.
        </Documentation>
      </StringVectorProperty>

      <IntVectorProperty
        name="BoundaryStyle"
        command="SetBoundaryStyle"
        animateable="0"
        default_values="0"
        number_of_elements="1">
        <EnumerationDomain name="enum" >
          <Entry value="0" text="No boundary polygon" />
          <Entry value="1" text="Relative margin" />
          <Entry value="2" text="Absolute margin" />
          <Entry value="3" text="Absolute bounds" />
          <Entry value="4" text="Imported polygon" />
        </EnumerationDomain>
        <Documentation>
          This property specifies how the clipping polygon (if any) is specified.
        </Documentation>
      </IntVectorProperty>

      <StringVectorProperty
        name="BoundaryFile"
        command="SetBoundaryFile"
        animateable="0"
        default_values=""
        number_of_elements="1">
        <Documentation>
          This property specifies the name of a file containing a clipping polygon.
        </Documentation>
      </StringVectorProperty>

      <StringVectorProperty
        name="RelativeMarginString"
        command="SetRelativeMarginString"
        animateable="0"
        default_values="0.05"
        number_of_elements="1">
        <Documentation>
          This property specifies a relative margin (relative to the length of the
          bounding box diagonal) for a rectangular clipping polygon.
        </Documentation>
      </StringVectorProperty>

      <StringVectorProperty
        name="AbsoluteMarginString"
        command="SetAbsoluteMarginString"
        animateable="0"
        default_values="0.0"
        number_of_elements="1">
        <Documentation>
          This property specifies an absolute margin (in world coordinates)
          for a rectangular clipping polygon.
        </Documentation>
      </StringVectorProperty>

      <StringVectorProperty
        name="AbsoluteBoundsString"
        command="SetAbsoluteBoundsString"
        animateable="0"
        default_values="0."
        number_of_elements="1">
        <Documentation>
          This property specifies absolute bounds (in world coordinates)
          for a rectangular clipping polygon as a comma-separated list of
          coordinates in the following order: left, right, bottom, top.
        </Documentation>
      </StringVectorProperty>
    </SourceProxy>

    <SourceProxy name="CMBGeometryReader"
      class="vtkCMBGeometryReader"
      label="CMB Geometry reader">
      <Documentation
        short_help="Read an CMB Geometry file."
        long_help="Read an CMB Geometry file (several different file formats).">
      </Documentation>

      <StringVectorProperty
        name="FileName"
        command="SetFileName"
        animateable="0"
        number_of_elements="1">
        <FileListDomain name="files"/>
        <Documentation>
          This property specifies the file name for the reader.
        </Documentation>
      </StringVectorProperty>

      <IntVectorProperty
        name="PrepNonClosedSurfaceForModelCreation"
        command="SetPrepNonClosedSurfaceForModelCreation"
        number_of_elements="1"
        default_values="0" >
        <BooleanDomain name="bool"/>
      </IntVectorProperty>

      <IntVectorProperty
        name="HasBoundaryEdges"
        command="GetHasBoundaryEdges"
        number_of_elements="1"
        default_values="0"
        information_only="1">
        <SimpleIntInformationHelper/>
        <BooleanDomain name="bool"/>
      </IntVectorProperty>

      <IntVectorProperty
        name="RegionIdentifiersModified"
        command="GetRegionIdentifiersModified"
        number_of_elements="1"
        default_values="0"
        information_only="1">
        <SimpleIntInformationHelper/>
        <BooleanDomain name="bool"/>
      </IntVectorProperty>
      <Hints>
        <ReaderFactory extensions="2dm 3dm bin bin.pts fac obj poly smesh pts sol stl tin"
                       file_description="CMB Point, Edge and Surface Geometry Files" />
      </Hints>
    </SourceProxy>

    <SourceProxy name="CmbMapReader"
      class="vtkCMBMapReader"
      label="SMS Map Reader">
      <Documentation
        short_help="Read a SMS Map file"
        long_help="Read a SMS Map into vtkPolyData">
      </Documentation>
      <StringVectorProperty
        name="FileName"
        command="SetFileName"
        animateable="0"
        number_of_elements="1">
        <FileListDomain name="files"/>
        <Documentation>
          This property specifies the file name for the reader.
        </Documentation>
      </StringVectorProperty>
      <IntVectorProperty
        name="NumArcs"
        label="Number of Arcs"
        command="GetNumArcs"
        number_of_elements="1"
        default_values="0"
        information_only="1"
        >
        <SimpleIntInformationHelper/>
      </IntVectorProperty>
      <IntVectorProperty
        name="ArcIds"
        label="Arc Ids"
        command="GetArcIds"
        default_values="0"
        repeatable="1"
        information_only="1"
        >
        <IntArrayInformationHelper/>
      </IntVectorProperty>
      <Hints>
        <ReaderFactory extensions="map"
                       file_description="SMS Map Files" />
      </Hints>
    </SourceProxy>

    <SourceProxy name="CmbICMReader"
      class="vtkCMBICMReader"
      label="CMB ICM Reader">
      <Documentation
        short_help="Read a ICM file"
        long_help="Read a ICM into vtkUnstructuredGrid">
      </Documentation>
      <DoubleVectorProperty name="TimestepValues"
                           repeatable="1"
                           information_only="1">
       <TimeStepsInformationHelper/>
      </DoubleVectorProperty>
      <StringVectorProperty
        name="AFileName"
        label="FileName"
        command="SetFileName"
        animateable="0"
        default_values=""
        number_of_elements="1">
        <FileListDomain name="files"/>
        <Documentation>
          This property specifies the file name for the reader.
        </Documentation>
      </StringVectorProperty>

      <StringVectorProperty
        name="DataFileName"
        label="DataFileName"
        command="SetDataFileName"
        animateable="0"
        number_of_elements="1"
        default_values="" >
        <FileListDomain name="files"/>
        <Documentation>
          This property specifies the data file name for the reader.
        </Documentation>
      </StringVectorProperty>

      <IntVectorProperty
        name="DataIsLatLong"
        command="SetDataIsLatLong"
        number_of_elements="1"
        default_values="0" >
        <BooleanDomain name="bool"/>
      </IntVectorProperty>

      <IntVectorProperty
        name="DataIsPositiveEast"
        command="SetDataIsPositiveEast"
        number_of_elements="1"
        default_values="1" >
        <BooleanDomain name="bool"/>
      </IntVectorProperty>
      <Hints>
        <ReaderFactory extensions="dat"
                       file_description="ICM Files" />
      </Hints>
    </SourceProxy>

    <SourceProxy name="CmbPt123Reader"
      class="vtkCMBPt123Reader"
      label="Cmb Pt 123 Reader">
      <Documentation
        short_help="Read pt123 output"
        long_help="Read pt123 output into a vtkMultiBlockDataSet">
      </Documentation>
      <DoubleVectorProperty name="TimestepValues"
                           repeatable="1"
                           information_only="1">
       <TimeStepsInformationHelper/>
      </DoubleVectorProperty>
      <StringVectorProperty
        name="FileName"
        label="FileName"
        command="SetFileName"
        animateable="0"
        default_values=""
        number_of_elements="1">
        <FileListDomain name="files"/>
        <Documentation>
          This property specifies the file name for the reader.
        </Documentation>
      </StringVectorProperty>
      <Hints>
        <ReaderFactory extensions="sup"
                       file_description="PT123 Output" />
      </Hints>
    </SourceProxy>

    <SourceProxy name="GMSSolidReader"
      class="vtkGMSSolidReader"
      label="GMS Solid reader">
      <Documentation
        short_help="Read a dataset in GMS Solid format"
        long_help="Read a GMS Solid file.">
      </Documentation>
      <StringVectorProperty
        name="FileName"
        command="SetFileName"
        animateable="0"
        number_of_elements="1">
        <FileListDomain name="files"/>
        <Documentation>
          This property specifies the file name for the reader.
        </Documentation>
      </StringVectorProperty>

    </SourceProxy>

    <SourceProxy name="GMSTINReader"
      class="vtkGMSTINReader"
      label="GMS TIN reader">
      <Documentation
        short_help="Read a dataset in GMS TIN format"
        long_help="Read a GMS TIN file.">
      </Documentation>
      <StringVectorProperty
        name="FileName"
        command="SetFileName"
        animateable="0"
        number_of_elements="1">
        <FileListDomain name="files"/>
        <Documentation>
          This property specifies the file name for the reader.
        </Documentation>
      </StringVectorProperty>
      <Hints>
        <ReaderFactory extensions="tin"
                       file_description="GMS TIN Files" />
      </Hints>
    </SourceProxy>

    <SourceProxy name="CUBITReader"
      class="vtkCUBITReader"
      label="CUBIT facet reader">
      <Documentation
        short_help="Read a CUBIT facet file"
        long_help="Read a dataset in CUBIT facet format">
      </Documentation>
      <StringVectorProperty
        name="FileName"
        command="SetFileName"
        animateable="0"
        number_of_elements="1">
        <FileListDomain name="files"/>
        <Documentation>
          This property specifies the file name for the reader.
        </Documentation>
      </StringVectorProperty>
      <Hints>
        <ReaderFactory extensions="fac"
                       file_description="CUBIT Files" />
      </Hints>
    </SourceProxy>

    <SourceProxy name="OmicronModelInputReader"
      class="vtkOmicronModelInputReader"
      label="Omicron Model Input reader">
      <Documentation
        short_help="Read an Omocron model input file">
        long_help="Read a file of format for Omicron model executable"
      </Documentation>
      <StringVectorProperty
        name="FileName"
        command="SetFileName"
        animateable="0"
        number_of_elements="1">
        <FileListDomain name="files"/>
        <Documentation>
          This property specifies the file name for the reader.
        </Documentation>
      </StringVectorProperty>
      <Hints>
        <ReaderFactory extensions="dat"
                       file_description="Omicron Model Input" />
      </Hints>
    </SourceProxy>

    <SourceProxy name="LASReader"
      class="vtkLASReader"
      label="LAS reader">
      <Documentation
        short_help="Read LAS input file">
        long_help="Read a file of format LAS for LIDAR object"
      </Documentation>

      <StringVectorProperty
        name="FileName"
        command="SetFileName"
        animateable="0"
        number_of_elements="1">
        <FileListDomain name="files"/>
        <Documentation>
          This property specifies the file name for the reader.
        </Documentation>
      </StringVectorProperty>

      <IntVectorProperty
        name="AbortExecute"
        command="SetAbortExecute"
        number_of_elements="1"
        default_values="0" >
        <BooleanDomain name="bool"/>
        <Documentation>
          vtkAlgorithm::SetAbortExecute()
        </Documentation>
      </IntVectorProperty>

      <Property
        name="ClearTransforms"
        command="ClearTransforms">
      </Property>

      <DoubleVectorProperty
        name = "Origin"
        label = "change the origin"
        command = "SetOrigin"
        argument_is_array="1"
        default_values='0 0 0'
        number_of_elements="3">
        <Documentation>
          subtracts off the value.
        </Documentation>
      </DoubleVectorProperty>


      <DoubleVectorProperty
        name="Transform"
        label="Piece Transformation"
        command="SetTransform"
        argument_is_array="1"
        default_values='0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1'
        number_of_elements="17">
        <Documentation>
          Transformation matrix for transforming points after they are read in.  Row major.
        </Documentation>
      </DoubleVectorProperty>

      <IntVectorProperty name="TransformOutputData"
        command="SetTransformOutputData"
        number_of_elements="1"
        default_values="0" >
        <BooleanDomain name="bool"/>
      </IntVectorProperty>

      <IntVectorProperty name="LimitReadToBounds"
        command="SetLimitReadToBounds"
        number_of_elements="1"
        default_values="0" >
        <BooleanDomain name="bool"/>
      </IntVectorProperty>

      <DoubleVectorProperty
        name="ReadBounds"
        command="SetReadBounds"
        number_of_elements="6"
        default_values="0.0 0.0 0.0 0.0 0.0 0.0" >
      </DoubleVectorProperty>

      <DoubleVectorProperty
        name="DataBounds"
        command="GetDataBounds"
        information_only="1">
        <SimpleDoubleInformationHelper/>
      </DoubleVectorProperty>

      <IntVectorProperty name="ConvertFromLatLongToXYZ"
        command="SetConvertFromLatLongToXYZ"
        number_of_elements="1"
        default_values="0" >
        <BooleanDomain name="bool"/>
      </IntVectorProperty>

      <IntVectorProperty name="OutputDataTypeIsDouble"
        command="SetOutputDataTypeIsDouble"
        number_of_elements="1"
        default_values="0" >
        <BooleanDomain name="bool"/>
      </IntVectorProperty>

      <IntVectorProperty name="ScanMode"
        command="SetScanMode"
        number_of_elements="1"
        default_values="0" >
        <BooleanDomain name="bool"/>
      </IntVectorProperty>

      <IntVectorProperty name="RequestedClassificationsForRead"
        command="AddRequestedClassificationForRead"
        clean_command="RemoveAllRequestedReadClassifications"
        repeat_command="1"
        number_of_elements_per_command="2">
      </IntVectorProperty>

      <IntVectorProperty name="RequestedPiecesForRead"
        command="AddRequestedClassificationForRead"
        clean_command="RemoveAllRequestedReadClassifications"
        repeat_command="1"
        number_of_elements_per_command="2">
      </IntVectorProperty>
      <Hints>
        <ReaderFactory extensions="las"
                       file_description="LAS Files" />
      </Hints>
    </SourceProxy>

    <SourceProxy name="CmbBorFileReader"
      class="vtkCMBBorFileReader"
      label="Borehole files reader">
      <Documentation
        short_help="Read borhole files">
        long_help="Read borhole (.bor) input files"
      </Documentation>

      <StringVectorProperty
        name="FileName"
        command="SetFileName"
        animateable="0"
        number_of_elements="1">
        <FileListDomain name="files"/>
        <Documentation>
          This property specifies the file name for the reader.
        </Documentation>
      </StringVectorProperty>
      <IntVectorProperty name="NumberOfBoreholes"
        command="GetNumberOfBoreholes"
        repeat_command="0"
        number_of_elements="1"
        information_only="1"
        default_values="0">
        <SimpleIntInformationHelper/>
      </IntVectorProperty>
      <IntVectorProperty name="NumberOfCrossSections"
        command="GetNumberOfCrossSections"
        repeat_command="0"
        number_of_elements="1"
        information_only="1"
        default_values="0">
        <SimpleIntInformationHelper/>
      </IntVectorProperty>
      <Hints>
        <ReaderFactory extensions="bor"
                       file_description="Borehole Files" />
      </Hints>
    </SourceProxy>

    <SourceProxy name="LIDARReader"
      class="vtkLIDARReader"
      label="LIDAR reader">
      <Documentation
        short_help="Read LIDAR input file">
        long_help="Read a file of format (pts bin.pts or bin) for LIDAR object"
      </Documentation>

      <DoubleVectorProperty
        name = "Origin"
        label = "change the origin"
        command = "SetOrigin"
        argument_is_array="1"
        default_values='0 0 0'
        number_of_elements="3">
        <Documentation>
          subtracts off the value.
        </Documentation>
      </DoubleVectorProperty>

      <StringVectorProperty
        name="FileName"
        command="SetFileName"
        animateable="0"
        number_of_elements="1">
        <FileListDomain name="files"/>
        <Documentation>
          This property specifies the file name for the reader.
        </Documentation>
      </StringVectorProperty>

      <IntVectorProperty name="LimitToMaxNumberOfPoints"
        command="SetLimitToMaxNumberOfPoints"
        number_of_elements="1"
        default_values="0" >
        <BooleanDomain name="bool"/>
      </IntVectorProperty>

      <IdTypeVectorProperty name="MaxNumberOfPoints"
        command="SetMaxNumberOfPoints"
        number_of_elements="1"
        default_values="1000000" >
      </IdTypeVectorProperty>


      <IdTypeVectorProperty name="GetMaxNumberOfPoints"
        command="GetMaxNumberOfPoints"
        repeat_command="0"
        number_of_elements="1"
        information_only="1"
        default_values="0">
        <SimpleIdTypeInformationHelper/>
      </IdTypeVectorProperty>

      <IntVectorProperty
        name="PieceIndex"
        command="SetPieceIndex"
        number_of_elements="1"
        label="Piece Index"
        default_values="-1">
        <Documentation>
          The index of the piece to set/get values for.
        </Documentation>
      </IntVectorProperty>

      <DoubleVectorProperty
        name="Transform"
        label="Piece Transformation"
        command="SetTransform"
        argument_is_array="1"
        default_values='1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1'
        number_of_elements="16">
        <Documentation>
          Transformation matrix for transforming points after they are read in.  Row major.
        </Documentation>
      </DoubleVectorProperty>

      <IntVectorProperty name="TransformOutputData"
        command="SetTransformOutputData"
        number_of_elements="1"
        default_values="0" >
        <BooleanDomain name="bool"/>
      </IntVectorProperty>

      <IntVectorProperty name="LimitReadToBounds"
        command="SetLimitReadToBounds"
        number_of_elements="1"
        default_values="0" >
        <BooleanDomain name="bool"/>
      </IntVectorProperty>

      <DoubleVectorProperty
        name="ReadBounds"
        command="SetReadBounds"
        number_of_elements="6"
        default_values="0.0 0.0 0.0 0.0 0.0 0.0" >
      </DoubleVectorProperty>

      <DoubleVectorProperty
        name="DataBounds"
        command="GetDataBounds"
        information_only="1">
        <SimpleDoubleInformationHelper/>
      </DoubleVectorProperty>

      <IntVectorProperty name="ConvertFromLatLongToXYZ"
        command="SetConvertFromLatLongToXYZ"
        number_of_elements="1"
        default_values="0" >
        <BooleanDomain name="bool"/>
      </IntVectorProperty>

      <IntVectorProperty name="OutputDataTypeIsDouble"
        command="SetOutputDataTypeIsDouble"
        number_of_elements="1"
        default_values="0" >
        <BooleanDomain name="bool"/>
      </IntVectorProperty>

      <IntVectorProperty name="RequestedPiecesForRead"
        command="AddRequestedPieceForRead"
        clean_command="RemoveAllRequestedReadPieces"
        repeat_command="1"
        number_of_elements_per_command="2">
      </IntVectorProperty>

      <IntVectorProperty name="KnownNumberOfPieces"
        command="GetKnownNumberOfPieces"
        repeat_command="0"
        number_of_elements="1"
        information_only="1"
        default_values="0">
        <SimpleIntInformationHelper/>
      </IntVectorProperty>
      <IdTypeVectorProperty name="RealNumberOfOutputPoints"
        command="GetRealNumberOfOutputPoints"
        repeat_command="0"
        number_of_elements="1"
        information_only="1"
        default_values="0">
        <SimpleIdTypeInformationHelper/>
      </IdTypeVectorProperty>
      <IdTypeVectorProperty name="NumberOfPointsInPiece"
        command="GetNumberOfPointsInPiece"
        repeat_command="0"
        number_of_elements="1"
        information_only="1"
        default_values="0">
        <SimpleIdTypeInformationHelper/>
      </IdTypeVectorProperty>
      <IdTypeVectorProperty name="TotalNumberOfPoints"
        command="GetTotalNumberOfPoints"
        repeat_command="0"
        number_of_elements="1"
        information_only="1"
        default_values="0">
        <SimpleIdTypeInformationHelper/>
      </IdTypeVectorProperty>

      <IntVectorProperty
        name="AbortExecute"
        command="SetAbortExecute"
        number_of_elements="1"
        default_values="0" >
        <BooleanDomain name="bool"/>
        <Documentation>
          vtkAlgorithm::SetAbortExecute()
        </Documentation>
      </IntVectorProperty>

      <Property
        name="ClearTransform"
        command="ClearTransform">
      </Property>
      <Hints>
        <ReaderFactory extensions="pts bin.pts bin"
                       file_description="LIDAR Files" />
      </Hints>
    </SourceProxy>

    <SourceProxy name="GDALRasterReader"
                 class="vtkGDALRasterReader"
                 label="Read Supported GDAL Raster Formats">
      <Documentation
        short_help="Read GDAL Raster input file">
        long_help="Read a file of format (dem)"
      </Documentation>

      <Property name="GatherDimensions" command="GatherDimensions">
      </Property>

      <IdTypeVectorProperty name="Dimensions"
                            command="GetRasterDimensions"
                            repeat_command="0"
                            number_of_elements="2"
                            information_only="1"
                            default_values="-1 -1">
          <SimpleIdTypeInformationHelper/>
      </IdTypeVectorProperty>

      <StringVectorProperty name="FileName"
                            command="SetFileName"
                            animateable="0"
                            number_of_elements="1">
        <FileListDomain name="files"/>
        <Documentation>
            This property specifies the file name for the reader.
        </Documentation>
      </StringVectorProperty>

      <DoubleVectorProperty name="InvalidValue"
                            command="GetInvalidValue"
                            number_of_elements="1"
                            information_only="1"
                            default_values="0">
      </DoubleVectorProperty>

      <Hints>
        <ReaderFactory extensions="dem"
                       file_description="GDAL Raster Files" />
      </Hints>
    </SourceProxy>

    <SourceProxy name="GDALRasterPolydataWrapper"
                 class="vtkGDALRasterPolydataWrapper"
                 label="Read Supported GDAL Raster Formats and converts them to point clouds">
      <Documentation
        short_help="Read GDAL Raster input file and converts them to point clouds">
        long_help="Read a file of format (dem) and converts them to point clouds"
      </Documentation>

      <StringVectorProperty name="FileName"
                            command="SetFileName"
                            animateable="0"
                            number_of_elements="1">
         <FileListDomain name="files"/>
         <Documentation>
           This property specifies the file name for the reader.
         </Documentation>
       </StringVectorProperty>

       <IntVectorProperty
          name="AbortExecute"
          command="SetAbortExecute"
          number_of_elements="1"
          default_values="0" >
          <BooleanDomain name="bool"/>
          <Documentation>
            vtkAlgorithm::SetAbortExecute()
          </Documentation>
       </IntVectorProperty>

       <DoubleVectorProperty name="InvalidValue"
                             command="GetInvalidValue"
                             number_of_elements="1"
                             information_only="1"
                             default_values="0">
       </DoubleVectorProperty>

      <IntVectorProperty name="Zone"
        command="GetZone"
        number_of_elements="1"
        information_only="1"
        default_values="-1">
      </IntVectorProperty>

      <IntVectorProperty name="IsNorth"
        command="GetIsNorth"
        number_of_elements="1"
        information_only="1"
        default_values="0">
      </IntVectorProperty>

       <IntVectorProperty name="OnRatio"
                          command="SetOnRatio"
                          repeat_command="0"
                          number_of_elements="1"
                          default_values="1">
          <IntRangeDomain name="range" min="1"/>
       </IntVectorProperty>

       <IdTypeVectorProperty name="RealNumberOfOutputPoints"
                             command="GetRealNumberOfOutputPoints"
                             repeat_command="0"
                             number_of_elements="1"
                             information_only="1"
                             default_values="0">
           <SimpleIdTypeInformationHelper/>
       </IdTypeVectorProperty>

       <IdTypeVectorProperty name="TotalNumberOfPoints"
                             label="Number of Points"
                             command="GetTotalNumberOfPoints"
                             number_of_elements="1"
                             information_only="1"
                             default_values="0">
           <SimpleIdTypeInformationHelper/>
       </IdTypeVectorProperty>

       <IntVectorProperty name="LimitToMaxNumberOfPoints"
         command="SetLimitToMaxNumberOfPoints"
         number_of_elements="1"
         default_values="0" >
         <BooleanDomain name="bool"/>
       </IntVectorProperty>

      <IntVectorProperty name="TransformOutputData"
        command="SetTransformOutputData"
        number_of_elements="1"
        default_values="0" >
        <BooleanDomain name="bool"/>
      </IntVectorProperty>

      <DoubleVectorProperty
        name="Transform"
        label="Piece Transformation"
        command="SetTransform"
        argument_is_array="1"
        default_values='1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1'
        number_of_elements="16">
        <Documentation>
          Transformation matrix for transforming points after they are read in.  Row major.
        </Documentation>
      </DoubleVectorProperty>

      <Property
        name="ClearTransform"
        command="ClearTransform">
      </Property>

      <IntVectorProperty name="LimitReadToBounds"
        command="SetLimitReadToBounds"
        number_of_elements="1"
        default_values="0" >
        <BooleanDomain name="bool"/>
      </IntVectorProperty>

      <DoubleVectorProperty
        name="ReadBounds"
        command="SetReadBounds"
        number_of_elements="6"
        default_values="0.0 0.0 0.0 0.0 0.0 0.0" >
      </DoubleVectorProperty>

       <IdTypeVectorProperty name="MaxNumberOfPoints"
         command="SetMaxNumberOfPoints"
         number_of_elements="1"
         default_values="1000000" >
       </IdTypeVectorProperty>

       <IdTypeVectorProperty name="GetMaxNumberOfPoints"
         command="GetMaxNumberOfPoints"
         repeat_command="0"
         number_of_elements="1"
         information_only="1"
         default_values="0">
         <SimpleIdTypeInformationHelper/>
       </IdTypeVectorProperty>

       <DoubleVectorProperty
         name="DataBounds"
         command="GetDataBounds"
         information_only="1">
         <SimpleDoubleInformationHelper/>
       </DoubleVectorProperty>

       <Hints>
         <ReaderFactory extensions="dem"
          file_description="GDAL Raster Files" />
         </Hints>
    </SourceProxy>

    <SourceProxy name="RawDEMReader"
      class="vtkRawDEMReader"
      label="Raw DEM reader">
      <Documentation
        short_help="Read Raw DEM input file">
        long_help="Read a file of format (hdr/FLT)"
      </Documentation>

      <Property name="GatherDimensions" command="GatherDimensions">
      </Property>

      <DoubleVectorProperty
        name = "Origin"
        label = "change the origin"
        command = "SetOrigin"
        argument_is_array="1"
        default_values='0 0 0'
        number_of_elements="3">
        <Documentation>
          subtracts off the value.
        </Documentation>
      </DoubleVectorProperty>

      <IdTypeVectorProperty name="Dimensions"
        command="GetDimensions"
        repeat_command="0"
        number_of_elements="2"
        information_only="1"
        default_values="-1 -1">
        <SimpleIdTypeInformationHelper/>
      </IdTypeVectorProperty>

      <StringVectorProperty
        name="FileName"
        command="SetFileName"
        animateable="0"
        number_of_elements="1">
        <FileListDomain name="files"/>
        <Documentation>
          This property specifies the file name for the reader.
        </Documentation>
      </StringVectorProperty>

      <IntVectorProperty name="ConvertFromLatLongToXYZ"
        command="SetConvertFromLatLongToXYZ"
        number_of_elements="1"
        default_values="1" >
        <BooleanDomain name="bool"/>
      </IntVectorProperty>

      <IntVectorProperty name="OutputImageData"
        command="SetOutputImageData"
        number_of_elements="1"
        default_values="1" >
        <BooleanDomain name="bool"/>
      </IntVectorProperty>

      <IntVectorProperty name="ReadSetOfFiles"
        command="SetReadSetOfFiles"
        number_of_elements="1"
        default_values="0" >
        <BooleanDomain name="bool"/>
      </IntVectorProperty>

      <IntVectorProperty name="OnRatio"
        command="SetOnRatio"
        repeat_command="0"
        number_of_elements="1"
        default_values="1">
        <IntRangeDomain name="range" min="1"/>
      </IntVectorProperty>

      <IdTypeVectorProperty
        name="RowReadExtents"
        label="Row Read Extents"
        command="SetRowReadExtents"
        argument_is_array="1"
        default_values='-1 -1'
        number_of_elements="2">
        <Documentation>
        </Documentation>
      </IdTypeVectorProperty>

      <IdTypeVectorProperty
        name="ColumnReadExtents"
        label="Column Read Extents"
        command="SetColumnReadExtents"
        argument_is_array="1"
        default_values='-1 -1'
        number_of_elements="2">
        <Documentation>
        </Documentation>
      </IdTypeVectorProperty>

      <IntVectorProperty name="LimitToMaxNumberOfPoints"
        command="SetLimitToMaxNumberOfPoints"
        number_of_elements="1"
        default_values="0" >
        <BooleanDomain name="bool"/>
      </IntVectorProperty>

      <IdTypeVectorProperty name="MaxNumberOfPoints"
        command="SetMaxNumberOfPoints"
        number_of_elements="1"
        default_values="1000000" >
      </IdTypeVectorProperty>

      <IdTypeVectorProperty name="GetMaxNumberOfPoints"
        command="GetMaxNumberOfPoints"
        repeat_command="0"
        number_of_elements="1"
        information_only="1"
        default_values="0">
        <SimpleIdTypeInformationHelper/>
      </IdTypeVectorProperty>

      <IntVectorProperty name="TransformForZUp"
        command="SetTransformForZUp"
        number_of_elements="1"
        default_values="1" >
        <BooleanDomain name="bool"/>
      </IntVectorProperty>

      <IntVectorProperty name="RemoveCurvature"
        command="SetRemoveCurvature"
        number_of_elements="1"
        default_values="1" >
        <BooleanDomain name="bool"/>
      </IntVectorProperty>

      <IntVectorProperty name="LimitReadToBounds"
        command="SetLimitReadToBounds"
        number_of_elements="1"
        default_values="0" >
        <BooleanDomain name="bool"/>
      </IntVectorProperty>

      <DoubleVectorProperty
        name="ReadBounds"
        command="SetReadBounds"
        number_of_elements="6"
        default_values="0.0 0.0 0.0 0.0 0.0 0.0" >
      </DoubleVectorProperty>

      <DoubleVectorProperty
        name="ZRotationAngle"
        command="SetZRotationAngle"
        number_of_elements="1"
        default_values="0.0" >
      </DoubleVectorProperty>

      <DoubleVectorProperty
        name="GetZRotationAngle"
        command="GetZRotationAngle"
        information_only="1">
        <SimpleDoubleInformationHelper/>
      </DoubleVectorProperty>

      <DoubleVectorProperty
        name="TransformForZOrigin"
        command="SetTransformForZOrigin"
        number_of_elements="2"
        default_values="-500 -500" >
      </DoubleVectorProperty>

      <DoubleVectorProperty
        name="DataBounds"
        command="GetDataBounds"
        information_only="1">
        <SimpleDoubleInformationHelper/>
      </DoubleVectorProperty>

      <IntVectorProperty name="GetOnRatio"
        command="GetOnRatio"
        repeat_command="0"
        number_of_elements="1"
        information_only="1"
        default_values="1">
        <SimpleIntInformationHelper/>
      </IntVectorProperty>
      <IdTypeVectorProperty name="RealNumberOfOutputPoints"
        command="GetRealNumberOfOutputPoints"
        repeat_command="0"
        number_of_elements="1"
        information_only="1"
        default_values="0">
        <SimpleIdTypeInformationHelper/>
      </IdTypeVectorProperty>
      <IdTypeVectorProperty name="TotalNumberOfPoints"
        command="GetTotalNumberOfPoints"
        repeat_command="0"
        number_of_elements="1"
        information_only="1"
        default_values="0">
        <SimpleIdTypeInformationHelper/>
      </IdTypeVectorProperty>

      <IntVectorProperty name="TransformOutputData"
        command="SetTransformOutputData"
        number_of_elements="1"
        default_values="0" >
        <BooleanDomain name="bool"/>
      </IntVectorProperty>

      <DoubleVectorProperty
        name="Transform"
        label="Piece Transformation"
        command="SetTransform"
        argument_is_array="1"
        default_values='1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1'
        number_of_elements="16">
        <Documentation>
          Transformation matrix for transforming points after they are read in.  Row major.
        </Documentation>
      </DoubleVectorProperty>

      <IntVectorProperty name="OutputDataTypeIsDouble"
        command="SetOutputDataTypeIsDouble"
        number_of_elements="1"
        default_values="0" >
        <BooleanDomain name="bool"/>
      </IntVectorProperty>

      <IntVectorProperty
        name="AbortExecute"
        command="SetAbortExecute"
        number_of_elements="1"
        default_values="0" >
        <BooleanDomain name="bool"/>
        <Documentation>
          vtkAlgorithm::SetAbortExecute()
        </Documentation>
      </IntVectorProperty>

      <Property
        name="ClearTransform"
        command="ClearTransform">
      </Property>
      <Hints>
        <ReaderFactory extensions="hdr FLT ftw"
                       file_description="Raw DEM Files" />
      </Hints>
  </SourceProxy>

   <!-- ==================================================================== -->
   <SourceProxy name="SphericalPointSource" class="vtkCMBSphericalPointSource" label="Spherical Point Source">
      <Documentation
         long_help="Create a 3D Sphere or 2D Disk of Points given a center and radius."
         short_help="Create a 3D Sphere or 2D Disk of Points">
The Spherical Point source can be used to add a set of points to the 3D scene.
      </Documentation>

      <DoubleVectorProperty
         name="Center"
         command="SetCenter"
         number_of_elements="3"
         animateable="1"
         default_values="0.0 0.0 0.0" >
        <DoubleRangeDomain name="range"/>
        <Documentation>
          This property specifies the 3D coordinates for the center of the sphere.
        </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
         name="Radius"
         command="SetRadius"
         number_of_elements="1"
         animateable="1"
         default_values="0.5" >
        <DoubleRangeDomain name="range" min="0"/>
        <Documentation>
          This property specifies the radius of the sphere.
        </Documentation>
      </DoubleVectorProperty>

      <IntVectorProperty
         name="ThetaResolution"
         command="SetThetaResolution"
         number_of_elements="1"
         default_values="8" >
        <IntRangeDomain name="range" min="1" max="1024" />
        <Documentation>
          The value of this property represents the number of evaluations in Theta.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
         name="RResolution"
         command="SetRResolution"
         number_of_elements="1"
         default_values="8" >
        <IntRangeDomain name="range" min="1" max="1024" />
        <Documentation>
          The value of this property represents the number of evaluations in R.  If greater than 1 there will be a single point at the center.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
         name="PhiResolution"
         command="SetPhiResolution"
         number_of_elements="1"
         default_values="8" >
        <IntRangeDomain name="range" min="3" max="1024" />
        <Documentation>
          The value of this property represents the number of evaulations in Phi (assuming Ignore Phi is not true.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty name="IgnorePhi"
        command="SetIgnorePhi"
        number_of_elements="1"
        default_values="0" >
        <BooleanDomain name="bool"/>
      </IntVectorProperty>
   <!-- End Sphere -->
   </SourceProxy>

    <MeshSourceProxy name="GMSMeshSource"
      class="vtkGMSMeshSource">
       <!-- End of GMSMeshSource -->
    </MeshSourceProxy>

   <SceneContourSourceProxy name="SceneContourSource"
      class="vtkSceneContourSource">
    <Property
      name="MarkedForDeletion"
      command="MarkedForDeletion">
    </Property>

    <Property
      name="UnMarkedForDeletion"
      command="UnMarkedForDeletion">
    </Property>

    <IntVectorProperty
        name="ClosedLoop"
        command="SetClosedLoop"
        number_of_elements="1"
        immediate_update="1"
        information_property="ClosedLoopInfo"
        default_values="0" >
      </IntVectorProperty>

      <IntVectorProperty
        name="ClosedLoopInfo"
        command="GetClosedLoop"
        number_of_elements="1"
        information_only="1"
        default_values="0">
        <SimpleIntInformationHelper/>
      </IntVectorProperty>

      <IdTypeVectorProperty
        name="InstanceId"
        command="GetInstanceId"
        number_of_elements="1"
        information_only="1"
        default_values="-1">
        <SimpleIdTypeInformationHelper/>
      </IdTypeVectorProperty>

      <PropertyGroup panel_widget="ContourWidget" label="Contour">
      </PropertyGroup>
      <Hints>
      </Hints>

    </SceneContourSourceProxy>

    <CMBGlyphPointSourceProxy name="CmbGlyphPointSource"
      class="vtkCMBGlyphPointSource">
    </CMBGlyphPointSourceProxy>

    <DataSourceProxy name="HydroModelPolySource"
      class="vtkHydroModelPolySource">
      <!-- End of HydroModelPolySource -->
    </DataSourceProxy>

    <DataSourceProxy name="HydroModelMultiBlockSource"
      class="vtkHydroModelMultiBlockSource">
      <!-- End of HydroModelMultiBlockSource -->
    </DataSourceProxy>

    <DataSourceProxy name="HydroModelSelectionSource"
      class="vtkHydroModelSelectionSource">

      <IdTypeVectorProperty
        name="IDs"
        command="AddID"
        clean_command="RemoveAllIDs"
        repeat_command="1"
        number_of_elements_per_command="2"
        number_of_elements="2"
        default_values="0 0">
        <Documentation>
          The list of IDs that will be added to the selection produced by the
          selection source. This takes pairs of values as
          (process number, id).
        </Documentation>
      </IdTypeVectorProperty>
      <IntVectorProperty name="FieldType"
         command="GetSelectionFieldType"
         number_of_elements="1"
         information_only="1"
         default_values="0" >
        <SimpleIntInformationHelper/>
      </IntVectorProperty>

      <IntVectorProperty
        name="InsideOut"
        label="Turn the Invert flag On/Off"
        command="InvertSelection"
        number_of_elements="1"
        default_values="0" >
        <Documentation>
        </Documentation>
      </IntVectorProperty>

      <!-- End of HydroModelSelectionSource -->
    </DataSourceProxy>

    <SourceProxy name="ModelLineSource" class="vtkModelLineSource" label="ModelLine">
      <Documentation
        long_help="This source creates a line between two points. The resolution indicates how many segments are in the line."
        short_help="Create a line between two points">
        The Line source can be used to interactively (using a 3D widget) or manually (using the entries on the user interface) add a line to the 3D scene. The output of the Line source is polygonal data.
      </Documentation>
      <DoubleVectorProperty
        name="Point1"
        command="SetPoint1"
        number_of_elements="3"
        animateable="1"
        default_values="-0.5 0.0 0.0" >
        <DoubleRangeDomain name="range" />
        <Documentation>
          This property controls the coordinates of the first endpoint of the line.
        </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
        name="Point2"
        command="SetPoint2"
        number_of_elements="3"
        animateable="1"
        default_values="0.5 0.0 0.0" >
        <DoubleRangeDomain name="range" />
        <Documentation>
          This property controls the coordinates of the second endpoint of the line.
        </Documentation>
      </DoubleVectorProperty>

      <IntVectorProperty
        name="Resolution"
        command="SetResolution"
        number_of_elements="1"
        default_values="6" >
        <IntRangeDomain name="range" min="1" />
        <Documentation>
          This property specifies the number of pieces into which to divide the line.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty name="BuildVertex"
        command="SetBuildVertex"
        number_of_elements="1"
        default_values="1" >
        <BooleanDomain name="bool"/>
      </IntVectorProperty>

      <!-- End ModelLine -->
    </SourceProxy>

   <!-- ==================================================================== -->
   <SourceProxy name="CmbScalarLineSource" class="vtkCMBScalarLineSource" label="CmbScalarLine">
      <Documentation
         long_help="This source creates a line between two points with scalar data associated with each point."
         short_help="Create a line between two points along with scalar data">
The Line source can be used to interactively (using a 3D widget) or manually (using the entries on the user interface) add a line to the 3D scene. The output of the Line source is polygonal data.
      </Documentation>
      <DoubleVectorProperty
         name="Point1"
         command="SetPoint1"
         number_of_elements="3"
         animateable="1"
         default_values="0.0 0.0 0.0" >
         <DoubleRangeDomain name="range" />
         <Documentation>
           This property controls the coordinates of the first endpoint of the line.
         </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
         name="Point2"
         command="SetPoint2"
         number_of_elements="3"
         animateable="1"
         default_values="0.0 0.0 1.0" >
         <DoubleRangeDomain name="range" />
         <Documentation>
           This property controls the coordinates of the second endpoint of the line.
         </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
         name="Scalar1"
         command="SetScalar1"
         number_of_elements="1"
         default_values="1" >
        <Documentation>
          This property specifies scalar associated with point 1.
        </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
         name="Scalar2"
         command="SetScalar2"
         number_of_elements="1"
         default_values="1" >
        <Documentation>
          This property specifies scalar associated with point 2.
        </Documentation>
      </DoubleVectorProperty>

      <PropertyGroup panel_widget="LineSource" label="Line">
        <Property function="Point1WorldPosition" name="Point1" />
        <Property function="Point2WorldPosition" name="Point2" />
      </PropertyGroup>
      <Hints>
      </Hints>
   <!-- End Line -->
   </SourceProxy>

   <!-- ==================================================================== -->
   <SourceProxy name="CmbConeSource" class="vtkCMBConeSource" label="CmbCone">
      <Documentation
        short_help="3D cone of a given radius and height"
        long_help="Create a 3D cone of a given radius and height.">
The Cone source can be used to add a polygonal cone to the 3D scene. The output of the Cone source is polygonal data.
      </Documentation>
      <IntVectorProperty
         name="Resolution"
         command="SetResolution"
         number_of_elements="1"
         animateable="1"
         default_values="6" >
        <IntRangeDomain name="range" min="0" max="512" />
        <Documentation>
          This property indicates the number of divisions around the cone. The higher this number, the closer the polygonal approximation will come to representing a cone, and the more polygons it will contain.
        </Documentation>
      </IntVectorProperty>

      <DoubleVectorProperty
         name="BaseRadius"
         command="SetBaseRadius"
         number_of_elements="1"
         animateable="1"
         default_values="0.5" >
        <DoubleRangeDomain name="range" min="0"/>
        <Documentation>
          This property specifies the radius of the base of the cone.
        </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
         name="TopRadius"
         command="SetTopRadius"
         number_of_elements="1"
         animateable="1"
         default_values="0.0" >
        <DoubleRangeDomain name="range" min="0"/>
        <Documentation>
          This property specifies the radius of the top of the cone.
        </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
         name="Height"
         command="SetHeight"
         number_of_elements="1"
         animateable="1"
         default_values="1.0" >
        <DoubleRangeDomain name="range" min="0" />
        <Documentation>
          This property specifies the height of the cone.
        </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
         name="BaseCenter"
         command="SetBaseCenter"
         number_of_elements="3"
         animateable="1"
         default_values="0.0 0.0 0.0" >
        <DoubleRangeDomain name="range" />
         <Documentation>
           This property specifies the center of the cone's base.
         </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
         name="Direction"
         command="SetDirection"
         number_of_elements="3"
         animateable="1"
         default_values="1.0 0.0 0.0" >
        <DoubleRangeDomain name="range"/>
        <Documentation>
          Set the orientation vector of the cone.  The vector does not have to be normalized.  The cone will point in the direction specified.
        </Documentation>
      </DoubleVectorProperty>

     <IntVectorProperty
        name="Capping"
        command="SetCapping"
        number_of_elements="1"
        animateable="1"
        default_values="1" >
       <BooleanDomain name="bool"/>
       <Documentation>
         If this property is set to 1, the base of the cone will be capped with  filled polygon(s). Otherwise, the base of the cone will be open.
       </Documentation>
     </IntVectorProperty>
   <!-- End CmbCone -->
   </SourceProxy>
   <!-- ==================================================================== -->
   <SourceProxy name="CMBNetworkImageSource"
      class="vtkNetworkImageSource" post_push="UpdateImage" processes="client|renderserver">
      <StringVectorProperty name="FileName"
       command="SetFileName"
       number_of_elements="1">
        <FileListDomain name="files"/>
        <Documentation>
          Set the name of image file to load.
        </Documentation>
      </StringVectorProperty>

      <!-- End of NetworkImageSource -->
   </SourceProxy>

    <SourceProxy name="GDALReader"
      class="vtkGDALVectorReader"
      label="Shape File Reader">
      <Documentation
        short_help="Read a Shape file"
        long_help="Read a Shape file into vtkMultiBlockDataSet">
      </Documentation>
      <StringVectorProperty
        name="FileName"
        command="SetFileName"
        animateable="0"
        number_of_elements="1">
        <FileListDomain name="files"/>
        <Documentation>
          This property specifies the file name for the reader.
        </Documentation>
      </StringVectorProperty>

    <IntVectorProperty
         name="NumberOfLayers"
         command="GetNumberOfLayers"
         number_of_elements="1"
         information_only="1"
         default_values="0" >
        <SimpleIntInformationHelper/>
      </IntVectorProperty>

    <IntVectorProperty
         name="ActiveLayer"
         command="SetActiveLayer"
         number_of_elements="1"
         default_values="0" >
      </IntVectorProperty>

      <IntVectorProperty
          name="ActiveLayerType"
          command="GetActiveLayerType"
          number_of_elements="1"
          information_only="1"
          default_values="0" >
        <SimpleIntInformationHelper/>
      </IntVectorProperty>

      <IntVectorProperty
          name="AppendFeatures"
          command="SetAppendFeatures"
          number_of_elements="1"
          default_values="1" >
          <BooleanDomain name="bool"/>
          <Documentation>
            Determines whether features are appended to a single vtkPolyData.
            Turning the option on is useful when a shapefile has a number of
            features which could otherwise lead to a huge multiblock structure.
          </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
          name="ActiveLayerFeatureCount"
          command="GetActiveLayerFeatureCount"
          number_of_elements="1"
          information_only="1"
          default_values="0" >
        <SimpleIntInformationHelper/>
      </IntVectorProperty>
      <Hints>
        <ReaderFactory extensions="shp"
                       file_description="Shape Files" />
      </Hints>
    </SourceProxy>

  </ProxyGroup>

  <ProxyGroup name="filters">
    <SourceProxy name="CmbConeCellClassifier" class="vtkCMBConeCellClassifier"
                 label="CMB Cone Classifier">
      <Documentation
         long_help="This reclassifies cell data based on a conical region and the filter's classification mode (fully inside, partially inside, or intersect)."
         short_help="Reclassifies cell data based on a cone.">

      </Documentation>
      <DoubleVectorProperty
        name="SetBaseCenter"
        label="Base Center"
        command="SetBaseCenter"
        number_of_elements="3"
        default_values="0 0 0" >
        <SimpleDoubleInformationHelper/>
        <Documentation>
          Base Center of Cone.
        </Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty
        name="SetAxisDirection"
        label="Axis Direction"
        command="SetAxisDirection"
        number_of_elements="3"
        default_values="0 0 1" >
        <SimpleDoubleInformationHelper/>
        <Documentation>
          Axis Direction of Cone.
        </Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty name="SetBaseRadius"
        command="SetBaseRadius"
        label="Base Radius"
        repeat_command="0"
        number_of_elements="1"
        default_values="0.5">
        <DoubleRangeDomain name="range" min="0"/>
        <Documentation>
          Cone's Radius at the base
        </Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty name="SetTopRadius"
        command="SetTopRadius"
        label="Top Radius"
        repeat_command="0"
        number_of_elements="1"
        default_values="0.0">
        <DoubleRangeDomain name="range" min="0"/>
        <Documentation>
          Cone's Radius at the top
        </Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty name="SetHeight"
        command="SetHeight"
        label="Height"
        repeat_command="0"
        number_of_elements="1"
        default_values="1.0">
        <DoubleRangeDomain name="range" min="0.0000001"/>
        <Documentation>
          Cone's Height
        </Documentation>
      </DoubleVectorProperty>
      <InputProperty
          name="Input"
          command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkUnstructuredGrid"/>
        </DataTypeDomain>
        <InputArrayDomain name="input_array"
           attribute_type="cell"
           number_of_components="1"
           optional="1"/>
      </InputProperty>
      <StringVectorProperty name="SelectRegionIdsToBeChanged"
         command="SetInputArrayToProcess"
         number_of_elements="5"
         element_types="0 0 0 0 2"
         label="Material/Region IDs">
        <ArrayListDomain name="array_list"
           attribute_type="Scalars"
           data_type="VTK_INT">
          <RequiredProperties>
            <Property name="Input" function="Input"/>
          </RequiredProperties>
        </ArrayListDomain>
        <FieldDataDomain name="field_list">
          <RequiredProperties>
            <Property name="Input" function="Input"/>
          </RequiredProperties>
        </FieldDataDomain>
        <Documentation>
          Select the array which contains material/region values.
        </Documentation>
      </StringVectorProperty>
      <IntVectorProperty
          name="ClassificationMode"
          command="SetClassificationMode"
          number_of_elements="1"
          default_values="0" >
        <EnumerationDomain name="enum" >
          <Entry value="0" text="Partially Inside" />
          <Entry value="1" text="Fully Inside" />
          <Entry value="2" text="Intersect" />
        </EnumerationDomain>
        <Documentation>
          This property specifies how many points of the cell need to be inside/outside the cone to be considered selected.
        </Documentation>
      </IntVectorProperty>
      <IntVectorProperty
        name="SetOriginalCellValue"
        label="Original Cell Value"
        command="SetOriginalCellValue"
        number_of_elements="1"
        default_values="0" >
        <SimpleIntInformationHelper/>
        <Documentation>
          Value to be replaced.
        </Documentation>
      </IntVectorProperty>
      <IntVectorProperty
        name="SetNewCellValue"
        label="New Cell Value"
        command="SetNewCellValue"
        number_of_elements="1"
        default_values="1" >
        <SimpleIntInformationHelper/>
        <Documentation>
          Replacement Value.
        </Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty
        name="SetTranslation"
        label="Translation"
        command="SetTranslation"
        number_of_elements="3"
        default_values="0 0 0" >
        <SimpleDoubleInformationHelper/>
        <Documentation>
          Translation of Cone.
        </Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty
        name="SetOrientation"
        label="Orientation"
        command="SetOrientation"
        number_of_elements="3"
        default_values="0 0 0" >
        <SimpleDoubleInformationHelper/>
        <Documentation>
          Orientation of Cone.
        </Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty
        name="SetScaling"
        label="Scaling"
        command="SetScaling"
        number_of_elements="3"
        default_values="1 1 1" >
        <SimpleDoubleInformationHelper/>
        <Documentation>
          Scaling of Cone.
        </Documentation>
      </DoubleVectorProperty>

    </SourceProxy>
    <SourceProxy name="CmbSmoothMeshFilter" class="vtkCMBSmoothMeshFilter"
                 label="Smooth">
      <Documentation
         long_help="This filter smooths the polygonal surface of a mesh by iteratively moving points toward their neighbors."
         short_help="Smooth a polygonal surface without adding more points.">
        The Smooth filter operates on a polygonal data set by iteratively adjusting the position of the points using Laplacian smoothing. (Because this filter only adjusts point positions, the output data set is also polygonal.) This results in better-shaped cells and more evenly distributed points.

        The Convergence slider limits the maximum motion of any point. It is expressed as a fraction of the length of the diagonal of the bounding box of the data set. If the maximum point motion during a smoothing iteration is less than the Convergence value, the smoothing operation terminates.
      </Documentation>
      <InputProperty
         name="Input"
         command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataSet"/>
        </DataTypeDomain>
        <Documentation>
          This property specifies the input to the Smooth filter.
        </Documentation>
      </InputProperty>
      <InputProperty name="Selection"
          command="SetSelectionConnection"
          clean_command="RemoveAllSelectionsInputs">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkSelection"/>
        </DataTypeDomain>
        <Documentation>
          The input that provides the selection object.
        </Documentation>
        <Hints>
          <SelectionInput />
        </Hints>
      </InputProperty>

      <InputProperty name="SurfaceInput"
          command="SetSurfaceConnection"
          clean_command="RemoveAllSurfaceInputs">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkPolyData"/>
        </DataTypeDomain>
        <Documentation>
          The input that provides the mesh surface object.
        </Documentation>
      </InputProperty>

      <IntVectorProperty
         name="NumberOfIterations"
         command="SetNumberOfIterations"
         number_of_elements="1"
         animateable="1"
         default_values="20"
         label="Number of Iterations">
        <IntRangeDomain name="range" min="0"/>
        <Documentation>
          This property sets the maximum number of smoothing iterations to perform. More iterations produce better smoothing.
        </Documentation>
      </IntVectorProperty>

      <DoubleVectorProperty
         name="Convergence"
         command="SetConvergence"
         number_of_elements="1"
         default_values="0.0" >
        <DoubleRangeDomain name="range" min="0" max="1" />
        <Documentation>
          The value of this property limits the maximum motion of any point. It is expressed as a fraction of the length of the diagonal of the bounding box of the input dataset. If the maximum point motion during a smoothing iteration is less than the value of this property, the smoothing operation terminates.
        </Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty
         name="RelaxationFactor"
         command="SetRelaxationFactor"
         number_of_elements="1"
         default_values="0.01"
         label="Relaxation Factor">
        <DoubleRangeDomain name="range" min="0" max="1" />
        <Documentation>
          Specify the relaxation factor for Laplacian smoothing. As in all
          iterative methods, the stability of the process is sensitive to
          this parameter. In general, small relaxation factors and large
          numbers of iterations are more stable than larger relaxation
          factors and smaller numbers of iterations.
        </Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty
         name="FeatureEdgeSmoothing"
         command="SetFeatureEdgeSmoothing"
         number_of_elements="1"
         default_values="0"
         label="Feature Edge Smoothing">
        <BooleanDomain name="bool"/>
        <Documentation>
          Turn on/off smoothing along sharp interior edges.
          This property sets the maximum number of smoothing iterations to perform. More iterations produce better smoothing.
        </Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty
         name="FeatureAngle"
         command="SetFeatureAngle"
         number_of_elements="1"
         default_values="45.0"
         label="Feature Angle">
        <DoubleRangeDomain name="range" min="0" max="180" />
        <Documentation>
          Specify the edge angle to control smoothing along edges (either interior or boundary).
        </Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty
         name="EdgeAngle"
         command="SetEdgeAngle"
         number_of_elements="1"
         default_values="15.0"
         label="Edge Angle">
        <DoubleRangeDomain name="range" min="0" max="180" />
        <Documentation>
          Specify the edge angle to control smoothing along edges (either interior or boundary).
        </Documentation>
      </DoubleVectorProperty>

      <IntVectorProperty
         name="BoundarySmoothing"
         command="SetBoundarySmoothing"
         number_of_elements="1"
         default_values="1"
         label="Boundary Smoothing">
        <BooleanDomain name="bool"/>
        <Documentation>
          Turn on/off the smoothing of vertices on the boundary of the mesh.
        </Documentation>
      </IntVectorProperty>

      <Hints>
        <Property name="Selection" show="0"/>
        <Property name="SurfaceInput" show="0"/>
      </Hints>

      <!-- End SmoothPolyDataFilter -->
    </SourceProxy>

    <SourceProxy name="cmbStructedToMesh"
                 class="vtkDEMToMesh"
                 label="Takes a structured image data and creates polydata">
      <Documentation
        short_help="creates Polydata from image data."
        long_help="creates Polydata from image data.">
      </Documentation>
      <InputProperty
          name="Input"
          command="SetInputConnection">
          <ProxyGroupDomain name="groups">
            <Group name="sources"/>
            <Group name="filters"/>
          </ProxyGroupDomain>
          <DataTypeDomain name="input_type">
            <DataType value="vtkDataSet"/>
          </DataTypeDomain>
          <Documentation>
            Set the input to the vtkDEMToMesh filter.
          </Documentation>
      </InputProperty>
      <IntVectorProperty
        name="UseScalerForZ"
        label="Cache Refine Results To Disk"
        command="SetUseScalerForZ"
        number_of_elements="1"
        default_values="0" >
        <Documentation>
          controls coping elevation to z value.
        </Documentation>
      </IntVectorProperty>
    </SourceProxy>

    <SourceProxy name="CmbExtractContours"
      class="vtkCMBExtractContours"
      label="Cmb Contour data extractor">
      <Documentation
        short_help="Extract Contours from Polydata."
        long_help="Extract Contours from Polydata.">
      </Documentation>
      <InputProperty
         name="Input"
         command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkPolyData"/>
        </DataTypeDomain>
        <Documentation>
          Set the input to the CmbExtractContours filter.
        </Documentation>
      </InputProperty>

      <IdTypeVectorProperty name="ContourIndex"
       command="SetContourIndex"
       number_of_elements="1"
       default_values="0">
      </IdTypeVectorProperty>

      <IdTypeVectorProperty
        name="NumberOfContoursInfo"
        command="GetNumberOfContours"
        number_of_elements="1"
        information_only="1"
        default_values="1">
        <SimpleIdTypeInformationHelper/>
      </IdTypeVectorProperty>

      <IdTypeVectorProperty name="NumberOfContours"
       command="SetNumberOfContours"
       number_of_elements="1"
       immediate_update="1"
       information_property="NumberOfContoursInfo"
       default_values="1">
      </IdTypeVectorProperty>
    </SourceProxy>

   <SourceProxy name="CMBStreamTracer" class="vtkCMBStreamTracer"
    label="CMB Stream Tracer">
    <Documentation
       long_help="Integrate streamlines in a vector field."
       short_help="Integrate streamlines in a vector field.">
The CMB Stream Tracer filter generates streamlines in a vector field from a collection of seed points. Production of streamlines terminates if a streamline crosses the exterior boundary of the input dataset. Other reasons for termination are listed for the MaximumNumberOfSteps, TerminalSpeed, and MaximumPropagation properties. This filter operates on any type of dataset, provided it has point-centered vectors. The output is polygonal data containing polylines.
    </Documentation>
    <InputProperty
       name="Input"
       command="AddInputConnection"
       label="Input Mesh"
       clean_command="RemoveAllInputs">
          <ProxyGroupDomain name="groups">
            <Group name="sources"/>
            <Group name="filters"/>
          </ProxyGroupDomain>
          <DataTypeDomain name="input_type" composite_data_supported="1">
            <DataType value="vtkDataSet"/>
          </DataTypeDomain>
          <InputArrayDomain name="input_array" attribute_type="point"/>
          <Documentation>
            This property specifies the input to the Stream Tracer filter.
          </Documentation>
     </InputProperty>

     <InputProperty
        name="Source"
        command="SetSourceConnection"
        label="Agent Source">
       <ProxyGroupDomain name="groups">
         <Group name="sources"/>
         <Group name="filters"/>
       </ProxyGroupDomain>
       <DataTypeDomain name="input_type" composite_data_supported="1">
         <DataType value="vtkDataSet"/>
       </DataTypeDomain>
       <Documentation>
         This property specifies the seeds to the Stream Tracer filter.
       </Documentation>
     </InputProperty>
<!--
     <InputProperty
        name="Source"
        command="SetSourceConnection"
        label="Seed Type">
           <ProxyGroupDomain name="groups">
             <Group name="sources"/>
           </ProxyGroupDomain>
           <ProxyListDomain name="proxy_list">
              <Proxy group="extended_sources" name="PointSource" />
              <Proxy group="extended_sources" name="HighResLineSource" />
           </ProxyListDomain>
           <Documentation>
             The value of this property determines how the seeds for the streamlines will be generated.
           </Documentation>
      </InputProperty>

     <IntVectorProperty
       name="NumberOfPoints"
       number_of_elements="1"
       default_values="100"
       information_only="1"/>

     <IntVectorProperty
       name="InterpolatorType"
       command="SetInterpolatorType"
       number_of_elements="1"
       default_values="0" >
       <EnumerationDomain name="enum">
         <Entry value="0" text="Interpolator with Point Locator"/>
         <Entry value="1" text="Interpolator with Cell Locator"/>
       </EnumerationDomain>
       <Documentation>
         This property determines which interpolator to use for evaluating the velocity vector field. The first is faster though the second is more robust in locating cells during streamline integration.
       </Documentation>
     </IntVectorProperty>

     <IntVectorProperty
       name="IntegratorType"
       command="SetIntegratorType"
       number_of_elements="1"
       default_values="2" >
       <EnumerationDomain name="enum">
         <Entry value="0" text="Runge-Kutta 2"/>
         <Entry value="1" text="Runge-Kutta 4"/>
         <Entry value="2" text="Runge-Kutta 4-5"/>
       </EnumerationDomain>
       <Documentation>
         This property determines which integrator (with increasing accuracy) to use for creating streamlines.
       </Documentation>
     </IntVectorProperty>

     <DoubleVectorProperty
       name="SensorDefaultRelativeOffset"
       label="Test Location Relative Offset"
       command="SetSensorDefaultRelativeOffset"
       number_of_elements="1"
       default_values="0.0" >
       <Documentation>
         The default Relative offset of all test locations
       </Documentation>
     </DoubleVectorProperty>
-->
     <StringVectorProperty
       name="SelectInputVectors"
       command="SetInputArrayToProcess"
       number_of_elements="5"
       element_types="0 0 0 0 2"
       animateable="0"
       label="Vectors">
           <ArrayListDomain name="array_list" attribute_type="Vectors">
             <RequiredProperties>
                <Property name="Input" function="Input"/>
             </RequiredProperties>
           </ArrayListDomain>
           <Documentation>
             This property contains the name of the vector array from which to generate streamlines.
           </Documentation>
     </StringVectorProperty>

     <IntVectorProperty
       name="IntegrationDirection"
       command="SetIntegrationDirection"
       number_of_elements="1"
       default_values="2" >
       <EnumerationDomain name="enum">
         <Entry value="0" text="FORWARD"/>
         <Entry value="1" text="BACKWARD"/>
         <Entry value="2" text="BOTH"/>
       </EnumerationDomain>
       <Documentation>
         This property determines in which direction(s) a streamline is generated.
       </Documentation>
     </IntVectorProperty>

     <IntVectorProperty
       name="IntegrationStepUnit"
       label="Integration Step Unit"
       command="SetIntegrationStepUnit"
       number_of_elements="1"
       default_values="2" >
       <EnumerationDomain name="enum">
         <Entry value="1" text="Length"/>
         <Entry value="2" text="Cell Length"/>
       </EnumerationDomain>
       <Documentation>
           This property specifies the unit for Minimum/Initial/Maximum integration step size. The Length unit refers to the arc length that a particle travels/advects within a single step. The Cell Length unit represents the step size as a number of cells.
       </Documentation>
     </IntVectorProperty>

     <DoubleVectorProperty
       name="InitialIntegrationStep"
       label="Initial Step Length"
       command="SetInitialIntegrationStep"
       number_of_elements="1"
       default_values="0.2" >
       <DoubleRangeDomain name="range"/>
       <Documentation>
         This property specifies the initial integration step size. For non-adaptive integrators (Runge-Kutta 2 and Runge-Kutta 4), it is fixed (always equal to this initial value) throughout the integration. For an adaptive integrator (Runge-Kutta 4-5), the actual step size varies such that the numerical error is less than a specified threshold.
       </Documentation>
     </DoubleVectorProperty>

     <DoubleVectorProperty
       name="MinimumIntegrationStep"
       label="Minimum Step Length"
       command="SetMinimumIntegrationStep"
       number_of_elements="1"
       default_values="0.01" >
       <DoubleRangeDomain name="range"/>
       <Documentation>
         When using the Runge-Kutta 4-5 ingrator, this property specifies the minimum integration step size.
       </Documentation>
     </DoubleVectorProperty>

     <DoubleVectorProperty
       name="MaximumIntegrationStep"
       label="Maximum Step Length"
       command="SetMaximumIntegrationStep"
       number_of_elements="1"
       default_values="0.5" >
       <DoubleRangeDomain name="range"/>
       <Documentation>
         When using the Runge-Kutta 4-5 ingrator, this property specifies the maximum integration step size.
       </Documentation>
     </DoubleVectorProperty>

     <IntVectorProperty
       name="MaximumNumberOfSteps"
       label="Maximum Steps"
       command="SetMaximumNumberOfSteps"
       number_of_elements="1"
       default_values="2000" >
       <IntRangeDomain name="range"/>
       <Documentation>
         This property specifies the maximum number of steps, beyond which streamline integration is terminated.
       </Documentation>
     </IntVectorProperty>

     <DoubleVectorProperty
       name="MaximumPropagation"
       label="Maximum Streamline Length"
       command="SetMaximumPropagation"
       number_of_elements="1"
       default_values="1.0" >
       <BoundsDomain name="bounds" mode="scaled_extent" scale_factor="1.0">
         <RequiredProperties>
            <Property name="Input" function="Input"/>
         </RequiredProperties>
       </BoundsDomain>
       <Documentation>
         This property specifies the maximum streamline length (i.e., physical arc length), beyond which line integration is terminated.
       </Documentation>
     </DoubleVectorProperty>

     <DoubleVectorProperty
       name="TerminalSpeed"
       label="Terminal Speed"
       command="SetTerminalSpeed"
       number_of_elements="1"
       default_values="0.000000000001" >
       <DoubleRangeDomain name="range"/>
       <Documentation>
         This property specifies the terminal speed, below which particle advection/integration is terminated.
       </Documentation>
     </DoubleVectorProperty>

     <DoubleVectorProperty
       name="MaximumError"
       command="SetMaximumError"
       number_of_elements="1"
       default_values="0.000001" >
       <DoubleRangeDomain name="range"/>
       <Documentation>
         This property specifies the maximum error (for Runge-Kutta 4-5) tolerated throughout streamline integration. The Runge-Kutta 4-5 integrator tries to adjust the step size such that the estimated error is less than this threshold.
       </Documentation>
     </DoubleVectorProperty>

     <IntVectorProperty
       name="NumberOfTestLocations"
       label="Number Of Test Locations"
       command="SetNumberOfTestLocations"
       number_of_elements="1"
       default_values="1" >
       <IntRangeDomain name="range" min="1"/>
       <Documentation>
         This property specifies the number of test locations.
       </Documentation>
     </IntVectorProperty>

     <Hints>
       <Visibility replace_input="2" />
     </Hints>

   <!-- End CMBStreamTracer -->
   </SourceProxy>

    <SourceProxy name="LIDARElevationFilter" class="vtkLIDARElevationFilter" label="LIDARElevation">
      <Documentation
         long_help="Create point attribute array by projecting points onto an elevation vector."
         short_help="Create a point array representing elevation.">
        The Elevation filter generates point scalar values for an input dataset along a specified direction vector.

        The Input menu allows the user to select the data set to which this filter will be applied. Use the Scalar range entry boxes to specify the minimum and maximum scalar value to be generated. The Low Point and High Point define a line onto which each point of the data set is projected. The minimum scalar value is associated with the Low Point, and the maximum scalar value is associated with the High Point. The scalar value for each point in the data set is determined by the location along the line to which that point projects.
      </Documentation>
      <InputProperty
         name="Input"
         command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataSet"/>
        </DataTypeDomain>
        <Documentation>
          This property specifies the input dataset to the Elevation filter.
        </Documentation>
      </InputProperty>

      <DoubleVectorProperty
        name="Transform"
        label="Transformation"
        command="SetTransform"
        argument_is_array="1"
        default_values='1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1'
        number_of_elements="16">
        <Documentation>
          Transformation matrix to apply to points before assigning a scalar value.
        </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
         name="ScalarRange"
         command="SetScalarRange"
         number_of_elements="2"
         default_values="0 1" >
        <DoubleRangeDomain name="range"/>
        <Documentation>
          This property determines the range into which scalars will be mapped.
        </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
         name="LowPoint"
         label="Low Point"
         command="SetLowPoint"
         number_of_elements="3"
         animateable="1"
         default_values="0 0 0" >
        <BoundsDomain name="range" mode="normal" default_mode="min" >
          <RequiredProperties>
            <Property name="Input" function="Input" />
          </RequiredProperties>
        </BoundsDomain>
        <Documentation>
          This property defines one end of the direction vector (small scalar values).
        </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
         name="HighPoint"
         label="High Point"
         command="SetHighPoint"
         number_of_elements="3"
         animateable="1"
         default_values="0 0 1" >
        <BoundsDomain name="range" mode="normal" default_mode="max" >
          <RequiredProperties>
            <Property name="Input" function="Input" />
          </RequiredProperties>
        </BoundsDomain>
        <Documentation>
          This property defines the other end of the direction vector (large scalar values).
        </Documentation>
      </DoubleVectorProperty>

      <IntVectorProperty
        name="CreateElevation"
        command="SetCreateElevation"
        number_of_elements="1"
        default_values="1" >
        <BooleanDomain name="bool"/>
      </IntVectorProperty>

      <PropertyGroup panel_widget="Line" label="Elevation Widget">
        <Property function="Point1WorldPosition" name="LowPoint" />
        <Property function="Point2WorldPosition" name="HighPoint" />
      </PropertyGroup>
      <Hints>
      </Hints>
      <!-- End LIDARElevationFilter -->
    </SourceProxy>

    <!-- ==================================================================== -->
   <SourceProxy name="CmbClassifyPointsFilter" class="vtkCMBClassifyPointsFilter"
    label="CMB Classify Points">
    <Documentation
       long_help="Classify a set of points with respects to a set of Volumetric Cells."
       short_help="Classify a set of points with respects to a set of Volumetric Cells.">
Given an input of points and a Data Set containing volumetric cells, this filters remove
all points that do not exist inside of a cell.  To those points that survive the filter
associates the containing cell ID to the point.
    </Documentation>
    <InputProperty
       name="VolumeData"
       command="SetSolidConnection">
          <ProxyGroupDomain name="groups">
            <Group name="sources"/>
            <Group name="filters"/>
          </ProxyGroupDomain>
          <DataTypeDomain name="input_type">
            <DataType value="vtkDataSet"/>
          </DataTypeDomain>
          <InputArrayDomain name="input_array"/>
          <Documentation>
            This property specifies the dataset that contains volumetric cells.
          </Documentation>
     </InputProperty>

     <InputProperty
        name="Source"
        command="SetInputConnection">
           <ProxyGroupDomain name="groups">
             <Group name="sources"/>
             <Group name="filters"/>
           </ProxyGroupDomain>
          <DataTypeDomain name="input_type">
            <DataType value="vtkDataSet"/>
          </DataTypeDomain>
           <Documentation>
             This property specifies the dataset whose points are to be classified.
           </Documentation>
      </InputProperty>
      <Hints>
        <Visibility replace_input="0" />
      </Hints>
   <!-- End CmbClassifyPointsFilter -->
   </SourceProxy>

   <!-- ==================================================================== -->
   <SourceProxy name="TerrainExtract" class="vtkTerrainExtractionFilter"
      label="Terrain Extraction Filter">

      <InputProperty
         name="Input"
         command="SetInputConnection"
         clean_command="RemoveAllInputs">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkPolyData"/>
        </DataTypeDomain>
        <Documentation>
          Set the input to the Terrain Extraction filter.
        </Documentation>
      </InputProperty>

      <StringVectorProperty
        name="OutputPath"
        command="SetOutputPath"
        animateable="0"
        number_of_elements="1">
        <FileListDomain name="files"/>
        <Documentation>
          Directory for temporary files.
        </Documentation>
      </StringVectorProperty>

      <StringVectorProperty
        name="OutputBaseFileName"
        command="SetOutputBaseFileName"
        animateable="0"
        number_of_elements="1">
        <FileListDomain name="files"/>
        <Documentation>
          Base filename for output (without extension).
        </Documentation>
      </StringVectorProperty>

      <IntVectorProperty
        name="OutputPtsFormat"
        command="SetOutputPtsFormat"
         number_of_elements="1"
         default_values="0" >
        <EnumerationDomain name="enum">
          <Entry value="0" text="XML PolyData"/>
          <Entry value="1" text="ASCII Pts"/>
          <Entry value="2" text="Binary Pts"/>
        </EnumerationDomain>
        <Documentation>
          Controls the which of the three output formats to use.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
         name="ExecuteMode"
         command="SetExecuteMode"
         number_of_elements="1"
         default_values="0" >
        <EnumerationDomain name="enum">
          <Entry value="0" text="Setup Refine"/>
          <Entry value="1" text="Execute Refine"/>
          <Entry value="2" text="Execute Extract"/>
        </EnumerationDomain>
        <Documentation>
          Controls the which of the two modes/steps to execute.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
        name="NumberOfLevels"
        repeat_command="0"
        label="Number Of Levels"
        command="GetNumberOfLevels"
        number_of_elements="1"
        information_only="1"
        default_values="0" >
        <SimpleIntInformationHelper/>
      </IntVectorProperty>

      <IntVectorProperty
         name="MinExtractLevel"
         label="Minimum Extract Level"
         command="SetMinExtractLevel"
         number_of_elements="1"
         default_values="0" >
        <IntRangeDomain name="range" min="0" />
        <Documentation>
          The minimum extraction level.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
         name="MaxExtractLevel"
         label="Maximum Extract Level"
         command="SetMaxExtractLevel"
         number_of_elements="1"
         default_values="1" >
        <DoubleRangeDomain name="range" min="0"/>
        <Documentation>
          The maximum extraction level.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
        name="AbortExecute"
        command="SetAbortExecute"
        number_of_elements="1"
        default_values="0" >
        <BooleanDomain name="bool"/>
        <Documentation>
          vtkAlgorithm::SetAbortExecute()
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
         name="RefineVisualizationOutputMode"
         label="Refine Visualization Output Mode"
         command="SetRefineVisualizationOutputMode"
         number_of_elements="1"
         default_values="1" >
        <EnumerationDomain name="enum">
          <Entry value="0" text="Disk"/>
          <Entry value="1" text="Output Port"/>
          <Entry value="2" text="Off"/>
        </EnumerationDomain>
        <Documentation>
          Control if (and how) refine visualization output is generated.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
         name="WriteExtractionResultsToDisk"
         label="Write Extraction Results to Disk"
         command="SetWriteExtractionResultsToDisk"
         number_of_elements="1"
         default_values="0" >
        <BooleanDomain name="bool"/>
        <Documentation>
          Indicate whether to write Extract phase results to disk.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
         name="CacheRefineResultsToDisk"
         label="Cache Refine Results To Disk"
         command="SetCacheRefineResultsToDisk"
         number_of_elements="1"
         default_values="0" >
        <BooleanDomain name="bool"/>
        <Documentation>
          Indicate whether to cache Refine phase results to disk.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
         name="ComputeDataTransform"
         label="Compute the transform during Setup Refine Stage"
         command="SetComputeDataTransform"
         number_of_elements="1"
         default_values="1">
        <Documentation>
          Indicate whether to compute the internal transform during Setup Refine stage
        </Documentation>
      </IntVectorProperty>

      <DoubleVectorProperty
        name="SetDataTransform"
        label="Set Data Transform"
        command="SetDataTransform"
        argument_is_array="1"
        default_values='1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1'
        number_of_elements="16">
        <Documentation>
          Transformation matrix to apply to points before and after (inverse) extraction calculation
        </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
           name="GetDataTransform"
           label="Get Data Transform"
           command="GetDataTransform"
           number_of_elements="16"
           information_only="1"
           default_values='1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1'>
        <SimpleDoubleInformationHelper/>
      </DoubleVectorProperty>

      <IntVectorProperty
         name="SetComputeInitialScale"
         label="Compute The Initial Scale During Setup Refine Stage"
         command="SetComputeInitialScale"
         number_of_elements="1"
         default_values="0">
        <Documentation>
          Indicate whether to compute the initial scale during Setup Refine stage
        </Documentation>
      </IntVectorProperty>

      <DoubleVectorProperty name="GetComputeInitialScale"
       label="GetComputeInitialScale"
           command="GetComputeInitialScale"
           number_of_elements="1"
           information_only="1"
           default_values="0">
        <SimpleDoubleInformationHelper/>
      </DoubleVectorProperty>

      <DoubleVectorProperty
         name="SetInitialScale"
         label="Resolution of the points in the extraction grid"
         command="SetInitialScale"
         number_of_elements="1"
         default_values="0">
        <Documentation>
          Resolution of the points in the extraction grid
        </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
         name="SetMaskSize"
         label="Mask Size of the refine stage"
         command="SetMaskSize"
         number_of_elements="1"
         default_values="1">
        <DoubleRangeDomain name="range" min="0" max="1" />
        <Documentation>
          Resolution of the mask size
        </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty name="GetInitialScale"
      command="GetInitialScale"
          number_of_elements="1"
          information_only="1"
          default_values="0">
        <SimpleDoubleInformationHelper/>
      </DoubleVectorProperty>

      <DoubleVectorProperty
           name="InputBounds"
           label="Input Bounds"
           command="GetInputBounds"
           number_of_elements="6"
           information_only="1"
           default_values="0.0 0.0 0.0 0.0 0.0 0.0" >
        <SimpleDoubleInformationHelper/>
      </DoubleVectorProperty>

      <StringVectorProperty
          name="IntermediateResultsPath"
          command="SetIntermediateResultsPath"
          animateable="0"
          number_of_elements="1">
        <FileListDomain name="files"/>
        <Documentation>
          Directory for refine files.
        </Documentation>
      </StringVectorProperty>

      <IntVectorProperty
         name="DetermineIntensityAndColor"
         label="Determine Intensity and Color for Output from Input"
         command="SetDetermineIntensityAndColor"
         number_of_elements="1"
         default_values="1" >
        <BooleanDomain name="bool"/>
        <Documentation>
          Indicate whether to use memory and time resources to find nearest point in input to extract color and intensity info (if present).
        </Documentation>
      </IntVectorProperty>

      <!-- End of TerrainExtract -->
    </SourceProxy>

    <SourceProxy name="ImageTextureCrop" class="vtkImageTextureCrop" label="Image Texture Crop">
      <InputProperty
         name="Input"
         command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkImageData"/>
        </DataTypeDomain>
        <Documentation>
          This property specifies the image input to the filter.
        </Documentation>
      </InputProperty>

      <InputProperty
         name="TextureCanvas"
         command="SetTextureCanvasConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataSet"/>
        </DataTypeDomain>
        <Documentation>
          This property specifies the poly data the image is to be textured onto.
        </Documentation>
      </InputProperty>

      <!-- End ImageTextureSample -->
    </SourceProxy>

    <SourceProxy name="TINStitcher" class="vtkTINStitcher"
      label="TIN Stitcher">

      <InputProperty
         name="Input"
         command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkPolyData"/>
          <DataType value="vtkUnstructuredGrid"/>
        </DataTypeDomain>
        <Documentation>
          Set the input to the TIN stitcher.
        </Documentation>
      </InputProperty>

      <InputProperty
         name="Input2"
         command="Set2ndInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkPolyData"/>
          <DataType value="vtkUnstructuredGrid"/>
        </DataTypeDomain>
        <Documentation>
          Set the 2nd input to the TIN stitcher (required).
        </Documentation>
      </InputProperty>

      <IntVectorProperty
         name="UseQuads"
         label="Use Quads (if Type I)"
         command="SetUseQuads"
         number_of_elements="1"
         default_values="1" >
        <BooleanDomain name="bool"/>
        <Documentation>
          Indicate whether or not to use quads if Type I TIN.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
         name="AllowInteriorPointInsertion"
         label="Allow Interior Point Insertion"
         command="SetAllowInteriorPointInsertion"
         number_of_elements="1"
         default_values="1" >
        <BooleanDomain name="bool"/>
        <Documentation>
          Indicate whether or not to allow Triangle to insert points on interior to (try to) meet angle criteria.
        </Documentation>
      </IntVectorProperty>

      <DoubleVectorProperty
         name="MinimumAngle"
         label="Minimum Angle"
         command="SetMinimumAngle"
         number_of_elements="1"
         default_values="25.0" >
        <DoubleRangeDomain name="range" min="0" max="34" />
        <Documentation>
          The minimum (target) angle sent to Triangle.
        </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
         name="Tolerance"
         label="Tolerance"
         command="SetTolerance"
         number_of_elements="1"
         default_values="1e-6" >
        <Documentation>
          Tolerance value used to compute maximum distance for equality/line calculations.
        </Documentation>
      </DoubleVectorProperty>

      <IntVectorProperty
        name="TIN Type"
        command="SetUserSpecifiedTINType"
        number_of_elements="1"
        default_values="0">
        <EnumerationDomain name="enum">
          <Entry value="0" text="Auto Detect" />
          <Entry value="1" text="Type I" />
        </EnumerationDomain>
      </IntVectorProperty>

      <!-- End of TINStitcher -->
    </SourceProxy>

    <SourceProxy name="MultiLayerTINStitcher" class="vtkMultiLayerTINStitcher"
      label="Multi-Layer TIN Stitcher">

      <InputProperty
        name="Input"
        command="AddInputConnection"
        clean_command="RemoveAllInputs"
        multiple_input="1">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkPolyData"/>
          <DataType value="vtkUnstructuredGrid"/>
        </DataTypeDomain>
        <Documentation>
          Add input to multi-layer TIN stitcher.
        </Documentation>
      </InputProperty>

      <DoubleVectorProperty
         name="MinimumAngle"
         label="Minimum Angle"
         command="SetMinimumAngle"
         number_of_elements="1"
         default_values="25.0" >
        <DoubleRangeDomain name="range" min="0" max="34" />
        <Documentation>
          The minimum (target) angle sent to Triangle.
        </Documentation>
      </DoubleVectorProperty>

      <IntVectorProperty
         name="UseQuads"
         label="Use Quads (if Type I)"
         command="SetUseQuads"
         number_of_elements="1"
         default_values="1" >
        <BooleanDomain name="bool"/>
        <Documentation>
          Indicate whether or not to use quads if Type I TIN.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
         name="AllowInteriorPointInsertion"
         label="Allow Interior Point Insertion"
         command="SetAllowInteriorPointInsertion"
         number_of_elements="1"
         default_values="1" >
        <BooleanDomain name="bool"/>
        <Documentation>
          Indicate whether or not to allow Triangle to insert points on interior to (try to) meet angle criteria.
        </Documentation>
      </IntVectorProperty>

      <DoubleVectorProperty
         name="Tolerance"
         label="Tolerance"
         command="SetTolerance"
         number_of_elements="1"
         default_values="1e-6" >
        <Documentation>
          Tolerance value used to compute maximum distance for equality/line calculations.
        </Documentation>
      </DoubleVectorProperty>

      <IntVectorProperty
        name="TIN Type"
        command="SetUserSpecifiedTINType"
        number_of_elements="1"
        default_values="0">
        <EnumerationDomain name="enum">
          <Entry value="0" text="Auto Detect" />
          <Entry value="1" text="Type I" />
        </EnumerationDomain>
      </IntVectorProperty>

      <!-- End of MultiLayerTINStitcher -->
    </SourceProxy>

    <SourceProxy name="PointThresholdFilter" class="vtkPointThresholdFilter" label="Point Threshold Fitler">
      <Documentation
        short_help="Filters Poly Data on RGB and XYZ"
        long_help="Allows for 6 clip planes to be defined and min and max RGB values. The results can be inverted">
      </Documentation>
      <InputProperty
        name="Input"
        command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkPolyData"/>
        </DataTypeDomain>
      </InputProperty>
      <Property name="RemoveAllFilters" command="RemoveAllFilters" />

      <IntVectorProperty
        name="SetActiveFilterIndex"
        label="Set Active Filter Index"
        command="SetActiveFilterIndex"
        number_of_elements="1"
        default_values="-1" >
        <Documentation>
          Sets which filter will be modified by the other functions
        </Documentation>
      </IntVectorProperty>

      <Property
        name="AddFilter"
        command="AddFilter">
      </Property>

      <Property
        name="RemoveFilter"
        command="RemoveFilter">
      </Property>

      <IntVectorProperty
        name="NumberOfThresholdSets"
        repeat_command="0"
        label="Number Of Threshold Sets"
        command="GetNumberOfThresholdSets"
        number_of_elements="1"
        information_only="1"
        default_values="0" >
        <SimpleIntInformationHelper/>
      </IntVectorProperty>

      <IntVectorProperty
        name="NumberOfActiveThresholdSets"
        label="Number Of Threshold Sets"
        command="GetNumberOfActiveThresholdSets"
        number_of_elements="1"
        information_only="1"
        default_values="0">
        <SimpleIntInformationHelper/>
      </IntVectorProperty>

      <DoubleVectorProperty
        name="Transform"
        label="Piece Transformation"
        command="SetTransform"
        argument_is_array="1"
        default_values='1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1'
        number_of_elements="16">
        <Documentation>
          Transformation matrix for transforming points after they are read in.  Row major.
        </Documentation>
      </DoubleVectorProperty>

      <IntVectorProperty name="TransformOutputData"
        command="SetTransformOutputData"
        number_of_elements="1"
        default_values="0" >
        <BooleanDomain name="bool"/>
      </IntVectorProperty>

      <IntVectorProperty
        name="GetMinR"
        repeat_command="0"
        label="Minimum R Value"
        command="GetMinR"
        number_of_elements="1"
        information_only="1"
        default_values="0" >
        <SimpleIntInformationHelper/>
      </IntVectorProperty>

      <IntVectorProperty
        name="GetMinG"
        repeat_command="0"
        label="Minimum G Value"
        command="GetMinG"
        number_of_elements="1"
        information_only="1"
        default_values="0" >
        <SimpleIntInformationHelper/>
      </IntVectorProperty>

      <IntVectorProperty
        name="GetMinB"
        repeat_command="0"
        label="Minimum B Value"
        command="GetMinB"
        number_of_elements="1"
        information_only="1"
        default_values="0" >
        <SimpleIntInformationHelper/>
      </IntVectorProperty>

      <IntVectorProperty
        name="SetMinRGB"
        label="Minimum RGB Values"
        command="SetMinRGB"
        number_of_elements="3"
        default_values="0 0 0" >
        <SimpleIntInformationHelper/>
        <Documentation>
          Minimum RGB values.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
        name="GetMaxR"
        repeat_command="0"
        label="Maximum R Value"
        command="GetMaxR"
        number_of_elements="1"
        default_values="255"
        information_only="1">
        <SimpleIntInformationHelper/>
      </IntVectorProperty>

      <IntVectorProperty
        name="GetMaxG"
        repeat_command="0"
        label="Maximum G Value"
        command="GetMaxG"
        number_of_elements="1"
        default_values="255"
        information_only="1">
        <SimpleIntInformationHelper/>
      </IntVectorProperty>

      <IntVectorProperty
        name="GetMaxB"
        repeat_command="0"
        label="Maximum B Value"
        command="GetMaxB"
        number_of_elements="1"
        default_values="255"
        information_only="1">
        <SimpleIntInformationHelper/>
      </IntVectorProperty>

      <IntVectorProperty
        name="SetMaxRGB"
        label="Maximum RGB Values"
        command="SetMaxRGB"
        number_of_elements="3"
        default_values="255 255 255" >
        <Documentation>
          Maximum RGB values.
        </Documentation>
      </IntVectorProperty>

      <DoubleVectorProperty
        name="SetMinX"
        label="Minimum X Value"
        command="SetMinX"
        number_of_elements="1"
        default_values="0" >
        <Documentation>
          Minimum X value.
        </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
        name="SetMinY"
        label="Minimum Y Value"
        command="SetMinY"
        number_of_elements="1"
        default_values="0" >
        <Documentation>
          Minimum Y value.
        </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
        name="SetMinZ"
        label="Minimum Z Value"
        command="SetMinZ"
        number_of_elements="1"
        default_values="0" >
        <Documentation>
          Minimum Z value.
        </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
        name="SetMaxX"
        label="Maximum X Value"
        command="SetMaxX"
        number_of_elements="1"
        default_values="0" >
        <Documentation>
          Maximum X value.
        </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
        name="SetMaxY"
        label="Maximum Y Value"
        command="SetMaxY"
        number_of_elements="1"
        default_values="0" >
        <Documentation>
          Maximum Y value.
        </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
        name="SetMaxZ"
        label="Maximum Z Value"
        command="SetMaxZ"
        number_of_elements="1"
        default_values="0" >
        <Documentation>
          Maximum Z value.
        </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
        name="GetMinX"
        repeat_command="0"
        label="Minimum X Value"
        command="GetMinX"
        number_of_elements="1"
        default_values="0"
        information_only="1">
        <SimpleDoubleInformationHelper/>
        <Documentation>
          Minimum X value.
        </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
        name="GetMinY"
        repeat_command="0"
        label="Minimum Y Value"
        command="GetMinY"
        number_of_elements="1"
        default_values="0"
        information_only="1">
        <SimpleDoubleInformationHelper/>
        <Documentation>
          Minimum Y value.
        </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
        name="GetMinZ"
        repeat_command="0"
        label="Minimum Z Value"
        command="GetMinZ"
        number_of_elements="1"
        default_values="0"
        information_only="1">
        <SimpleDoubleInformationHelper/>
        <Documentation>
          Minimum Z value.
        </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
        name="GetMaxX"
        repeat_command="0"
        label="Maximum X Value"
        command="GetMaxX"
        number_of_elements="1"
        default_values="0"
        information_only="1">
        <SimpleDoubleInformationHelper/>
        <Documentation>
          Maximum X value.
        </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
        name="GetMaxY"
        repeat_command="0"
        label="Maximum Y Value"
        command="GetMaxY"
        number_of_elements="1"
        default_values="0"
        information_only="1">
        <SimpleDoubleInformationHelper/>
        <Documentation>
          Maximum Y value.
        </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
        name="GetMaxZ"
        repeat_command="0"
        label="Maximum Z Value"
        command="GetMaxZ"
        number_of_elements="1"
        default_values="0"
        information_only="1">
        <SimpleDoubleInformationHelper/>
        <Documentation>
          Maximum Z value.
        </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
        name="SetUseMinX"
        label="Filter on Minimum X Value"
        command="SetUseMinX"
        number_of_elements="1"
        default_values="0" >
        <BooleanDomain name="bool"/>
        <Documentation>
          Filter on Minimum X value.
        </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
        name="SetUseMinY"
        label="Filter on Minimum Y Value"
        command="SetUseMinY"
        number_of_elements="1"
        default_values="0" >
        <BooleanDomain name="bool"/>
        <Documentation>
          Filter on Minimum Y value.
        </Documentation>
      </DoubleVectorProperty>

      <IntVectorProperty
        name="SetUseFilter"
        label="Turn the filter On/Off"
        command="SetUseFilter"
        number_of_elements="2"
        default_values="0 0" >
        <Documentation>
          Turn Filter On/Off
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
        name="UseFilterForAll"
        command="SetUseFilter"
        repeat_command="1"
        use_index="1"
        number_of_elements_per_command="1"
        default_values="0">
      </IntVectorProperty>

      <DoubleVectorProperty
        name="SetUseMinZ"
        label="Filter on Minimum Z Value"
        command="SetUseMinZ"
        number_of_elements="1"
        default_values="0" >
        <BooleanDomain name="bool"/>
        <Documentation>
          Filter on Minimum Z value.
        </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
        name="SetUseMaxX"
        label="Filter on Maximum X Value"
        command="SetUseMaxX"
        number_of_elements="1"
        default_values="0" >
        <BooleanDomain name="bool"/>
        <Documentation>
          Filter on Maximum X value.
        </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
        name="SetUseMaxY"
        label="Filter on Maximum Y Value"
        command="SetUseMaxY"
        number_of_elements="1"
        default_values="0" >
        <BooleanDomain name="bool"/>
        <Documentation>
          Filter on Maximum Y value.
        </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
        name="SetUseMaxZ"
        label="Filter on Maximum Z Value"
        command="SetUseMaxZ"
        number_of_elements="1"
        default_values="0" >
        <BooleanDomain name="bool"/>
        <Documentation>
          Filter on Maximum Z value.
        </Documentation>
      </DoubleVectorProperty>

      <IntVectorProperty
        name="GetUseMinX"
        repeat_command="0"
        label="Filter on Minimum X Value"
        command="GetUseMinX"
        number_of_elements="1"
        default_values="0"
        information_only="1">
        <SimpleIntInformationHelper/>
        <BooleanDomain name="bool"/>
        <Documentation>
          Filter on Minimum X value.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
        name="GetUseFilter"
        repeat_command="0"
        label="Is the Filter On/Off"
        command="GetUseFilter"
        number_of_elements="1"
        default_values="0"
        information_only="1">
        <SimpleIntInformationHelper/>
        <BooleanDomain name="bool"/>
        <Documentation>
          Is the Filter On/Off
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
        name="GetUseMinY"
        repeat_command="0"
        label="Filter on Minimum Y Value"
        command="GetUseMinY"
        number_of_elements="1"
        default_values="0"
        information_only="1">
        <SimpleIntInformationHelper/>
        <BooleanDomain name="bool"/>
        <Documentation>
          Filter on Minimum Y value.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
        name="GetUseMinZ"
        repeat_command="0"
        label="Filter on Minimum Z Value"
        command="GetUseMinZ"
        number_of_elements="1"
        default_values="0"
        information_only="1">
        <SimpleIntInformationHelper/>
        <BooleanDomain name="bool"/>
        <Documentation>
          Filter on Minimum Z value.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
        name="GetUseMaxX"
        repeat_command="0"
        label="Filter on Maximum X Value"
        command="GetUseMaxX"
        number_of_elements="1"
        default_values="0"
        information_only="1">
        <SimpleIntInformationHelper/>
        <BooleanDomain name="bool"/>
        <Documentation>
          Filter on Maximum X value.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
        name="GetUseMaxY"
        repeat_command="0"
        label="Filter on Maximum Y Value"
        command="GetUseMaxY"
        number_of_elements="1"
        default_values="0"
        information_only="1">
        <SimpleIntInformationHelper/>
        <BooleanDomain name="bool"/>
        <Documentation>
          Filter on Maximum Y value.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
        name="GetUseMaxZ"
        repeat_command="0"
        label="Filter on Maximum Z Value"
        command="GetUseMaxZ"
        number_of_elements="1"
        default_values="0"
        information_only="1">
        <SimpleIntInformationHelper/>
        <BooleanDomain name="bool"/>
        <Documentation>
          Filter on Maximum Z value.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
        name="SetInvert"
        label="Invert Results"
        command="SetInvert"
        number_of_elements="1"
        default_values="0" >
        <BooleanDomain name="bool"/>
        <Documentation>
          If true invert results.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
        name="GetInvert"
        repeat_command="0"
        label="Invert Results"
        command="GetInvert"
        number_of_elements="1"
        default_values="0"
        information_only="1">
        <SimpleIntInformationHelper/>
        <BooleanDomain name="bool"/>
        <Documentation>
          If true invert results.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
        name="SetUseMinRGB"
        label="Set Use Minumum Color Bounds"
        command="SetUseMinRGB"
        number_of_elements="1"
        default_values="0" >
        <BooleanDomain name="bool"/>
        <Documentation>
          Bound colors greater than minumum.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
        name="GetUseMinRGB"
        repeat_command="0"
        label="Get Use Maximum Color Bounds"
        command="GetUseMinRGB"
        number_of_elements="1"
        default_values="0"
        information_only="1">
        <SimpleIntInformationHelper/>
        <BooleanDomain name="bool"/>
        <Documentation>
          Bound colors greater than minumum.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
        name="SetUseMaxRGB"
        label="Set Use Maximum Color Bounds"
        command="SetUseMaxRGB"
        number_of_elements="1"
        default_values="0" >
        <BooleanDomain name="bool"/>
        <Documentation>
          Bound colors less than maximum.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
        name="GetUseMaxRGB"
        repeat_command="0"
        label="Get Use Maximum Color Bounds"
        command="GetUseMaxRGB"
        number_of_elements="1"
        default_values="0"
        information_only="1">
        <SimpleIntInformationHelper/>
        <BooleanDomain name="bool"/>
        <Documentation>
          Bound colors less than maximum.
        </Documentation>
      </IntVectorProperty>
      <!-- End PointThreshold -->
    </SourceProxy>

    <SourceProxy name="CmbTriangleMesher"
      class="vtkCMBTriangleMesher"
      label="Triangle Mesher">
      <Documentation
        short_help="Meshes a polydata structure"
        long_help="Meshes a polydata structure with PolyId1, PolyId2, and HoleId cell data arrays">
      </Documentation>
      <IntVectorProperty
        name="SetUseUniqueAreas"
        label="Use Unique Areas"
        command="SetUseUniqueAreas"
        number_of_elements="1"
        default_values="0" >
        <BooleanDomain name="bool"/>
        <Documentation>
          If on while meshing each polygon will add points
          based on it's own area instead of the whole area
        </Documentation>
      </IntVectorProperty>
      <IntVectorProperty
        name="SetPreserveBoundaries"
        label="Preserve Boundaries"
        command="SetPreserveBoundaries"
        number_of_elements="1"
        default_values="1" >
        <BooleanDomain name="bool"/>
        <Documentation>
          If true the mesher can not add points to the
          boundaries of the polygons.
        </Documentation>
      </IntVectorProperty>
      <IntVectorProperty
        name="SetPreserveEdgesAndNodes"
        label="Preserve Edges And Nodes"
        command="SetPreserveEdgesAndNodes"
        number_of_elements="1"
        default_values="1" >
        <BooleanDomain name="bool"/>
        <Documentation>
          If true the mesher will keep edge information
          in VTK_LINES and Cell Data ArcSetId
        </Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty
        name="SetMaxArea"
        label="Max Area"
        command="SetMaxArea"
        number_of_elements="1"
        default_values=".125" >
        <Documentation>
          Sets the maximum are to be used with the
          maximum area mode
        </Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty name="MaxAreaMode"
        command="SetMaxAreaMode"
        number_of_elements="1"
        default_values="3">
        <EnumerationDomain name="enum">
          <Entry value="0" text="NoMaxArea" />
          <Entry value="1" text="AbsoluteArea" />
          <Entry value="2" text="RelativeToBounds" />
          <Entry value="3" text="RelativeToBoundsAndSegments" />
        </EnumerationDomain>
      </IntVectorProperty>
      <IntVectorProperty
        name="SetUseMinAngle"
        label="Use Minimum Angle"
        command="SetUseMinAngle"
        number_of_elements="1"
        default_values="0" >
        <BooleanDomain name="bool"/>
        <Documentation>
          Enables or disables the use of a minimum angle
          constraint when meshing with Triangle
        </Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty
        name="SetMinAngle"
        label="Min Angle"
        command="SetMinAngle"
        number_of_elements="1"
        default_values="20" >
        <Documentation>
          Sets the minimum angle that triangle will mesh with
        </Documentation>
      </DoubleVectorProperty>
      <InputProperty
          name="Input"
          command="SetInputConnection">
          <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
          <DataTypeDomain name="input_type">
            <DataType value="vtkPolyData"/>
          </DataTypeDomain>
        </InputProperty>
      <!-- End CmbTriangleMesher -->
    </SourceProxy>

    <SourceProxy name="CmbTriangleMultiBlockMesher"
      class="vtkCMBTriangleMultiBlockMesher"
      label="Triangle Multiblock Mesher">
      <Documentation
        short_help="Meshes a polydata structure"
        long_help="Meshes a polydata structure and separates faces into seperate blocks">
      </Documentation>
      <IntVectorProperty
        name="SetUseUniqueAreas"
        label="Use Unique Areas"
        command="SetUseUniqueAreas"
        number_of_elements="1"
        default_values="0" >
        <BooleanDomain name="bool"/>
        <Documentation>
          If on while meshing each polygon will add points
          based on it's own area instead of the whole area
        </Documentation>
      </IntVectorProperty>
      <IntVectorProperty
        name="SetPreserveBoundaries"
        label="Preserve Boundaries"
        command="SetPreserveBoundaries"
        number_of_elements="1"
        default_values="1" >
        <BooleanDomain name="bool"/>
        <Documentation>
          If true the mesher can not add points to the
          boundaries of the polygons.
        </Documentation>
      </IntVectorProperty>
      <IntVectorProperty
        name="SetPreserveEdges"
        label="Preserve Edges"
        command="SetPreserveEdges"
        number_of_elements="1"
        default_values="1" >
        <BooleanDomain name="bool"/>
        <Documentation>
          If true the mesher will keep edge information
          in VTK_LINES and Cell Data ArcSetId
        </Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty
        name="SetMaxArea"
        label="Max Area"
        command="SetMaxArea"
        number_of_elements="1"
        default_values=".125" >
        <Documentation>
          Sets the maximum are to be used with the
          maximum area mode
        </Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty name="MaxAreaMode"
        command="SetMaxAreaMode"
        number_of_elements="1"
        default_values="3">
        <EnumerationDomain name="enum">
          <Entry value="0" text="NoMaxArea" />
          <Entry value="1" text="AbsoluteArea" />
          <Entry value="2" text="RelativeToBounds" />
          <Entry value="3" text="RelativeToBoundsAndSegments" />
        </EnumerationDomain>
      </IntVectorProperty>
      <IntVectorProperty
        name="SetUseMinAngle"
        label="Use Minimum Angle"
        command="SetUseMinAngle"
        number_of_elements="1"
        default_values="0" >
        <BooleanDomain name="bool"/>
        <Documentation>
          Enables or disables the use of a minimum angle
          constraint when meshing with Triangle
        </Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty
        name="SetMinAngle"
        label="Min Angle"
        command="SetMinAngle"
        number_of_elements="1"
        default_values="20" >
        <Documentation>
          Sets the minimum angle that triangle will mesh with
        </Documentation>
      </DoubleVectorProperty>
      <InputProperty
          name="Input"
          command="SetInputConnection">
          <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
          <DataTypeDomain name="input_type">
            <DataType value="vtkPolyData"/>
          </DataTypeDomain>
        </InputProperty>
      <!-- End CmbTriangleMultiBlockMesher -->
    </SourceProxy>

    <SourceProxy name="CmbADHReader"
      class="vtkCMBADHReader"
      label="ADH Reader">
      <Documentation
        short_help="Reads an adh file"
        long_help="Reads an adh file and puts data on a PointSet">
      </Documentation>
      <DoubleVectorProperty name="TimestepValues"
        repeatable="1"
        information_only="1">
        <TimeStepsInformationHelper/>
      </DoubleVectorProperty>
      <StringVectorProperty
        name="SolutionFileName"
        command="SetFileName"
        animateable="0"
        number_of_elements="1">
        <Documentation>
          This property specifies the data file name (*.dat) for the reader.
        </Documentation>
        <FileListDomain name="files"/>
      </StringVectorProperty>
      <StringVectorProperty
        name="Array Name Prefix"
        command="SetPrefix"
        animateable="0"
        number_of_elements="1">
        <Documentation>
          This property specifies the prefix string that will be prepended to the filename to create the data array name.
        </Documentation>
      </StringVectorProperty>
      <StringVectorProperty
        name="Array Name Suffix"
        command="SetSuffix"
        animateable="0"
        number_of_elements="1">
        <Documentation>
          This property specifies the suffix string that will be appended to the filename to create the data array name.
        </Documentation>
      </StringVectorProperty>
      <InputProperty
          name="Input"
          command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
          <DataTypeDomain name="input_type">
            <DataType value="vtkPointSet"/>
          </DataTypeDomain>
        </InputProperty>
      <!-- End CmbADHReader -->
      <Hints>
        <Property name="SolutionFileName" show="1"/>
        <ShowInMenu category="CMB"/>
      </Hints>
    </SourceProxy>

    <SourceProxy name="CmbExtractMapContour"
      class="vtkCMBExtractMapContour"
      label="Map Contour Extractor">
      <Documentation
        short_help="Extracts a contour(s) from a map file"
        long_help="Extracts a contour(s) from a map file">
      </Documentation>
      <IntVectorProperty
        name="ExtractSingleContour"
        label="Tells which contour to extract"
        command="ExtractSingleContour"
        default_values="0"
        number_of_elements="1" >
      </IntVectorProperty>
      <InputProperty
          name="Input"
          command="SetInputConnection">
          <ProxyGroupDomain name="groups">
            <Group name="sources"/>
            <Group name="filters"/>
          </ProxyGroupDomain>
          <DataTypeDomain name="input_type">
            <DataType value="vtkPolyData"/>
          </DataTypeDomain>
        </InputProperty>
      <!-- End CmbExtractMapContour -->
    </SourceProxy>

    <SourceProxy name="MergeFaces" class="vtkMergeFacesFilter"
      label="Merge Faces">
      <InputProperty name="Input"
        command="SetInputConnection">
      </InputProperty>
      <ProxyGroupDomain name="groups">
        <Group name="sources"/>
        <Group name="filters"/>
      </ProxyGroupDomain>
      <DataTypeDomain name="input_type">
        <DataType value="vtkMultiBlockDataSet"/>
      </DataTypeDomain>

      <IdTypeVectorProperty name="MergePairs"
        command="Merge"
        clean_command="RemoveAllMergedFaces"
        repeat_command="1"
        number_of_elements_per_command="2">
      </IdTypeVectorProperty>
      <!-- End of MergeFaces -->
    </SourceProxy>

    <SourceProxy name="FacesConnectivity" class="vtkFacesConnectivityFilter"
      label="Connect Faces">
      <InputProperty
        name="Input"
        command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkMultiBlockDataSet"/>
        </DataTypeDomain>
        <Documentation>
          This property specifies the input to the Connectivity filter.
        </Documentation>
      </InputProperty>

      <IntVectorProperty
        name="FaceID"
        command="SetFaceID"
        number_of_elements="1"
        label="Face ID"
        default_values="0">
        <Documentation>
          The index of the leaf block to extract from a multiblock dataset
        </Documentation>
      </IntVectorProperty>

      <DoubleVectorProperty
        name="FeatureAngle"
        label="Feature Angle"
        command="SetFeatureAngle"
        number_of_elements="1"
        default_values="70.0" >
        <Documentation>
          The feature angle that the connectivity filter is using to split model faces.
        </Documentation>
      </DoubleVectorProperty>

      <!-- End of FacesConnectivity -->
    </SourceProxy>

    <SourceProxy name="CreateModelFaces" class="vtkCreateModelFacesFilter"
      label="Create Model Faces">
      <InputProperty name="Input"
        command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkMultiBlockDataSet"/>
        </DataTypeDomain>
      </InputProperty>

      <InputProperty name="Selection"
        command="SetSelectionConnection"
        clean_command="RemoveAllSelectionsInputs">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkSelection"/>
        </DataTypeDomain>
        <Documentation>
          The input that provides the selection object.
        </Documentation>
      </InputProperty>

      <IdTypeVectorProperty name="FaceCellId"
        command="AddFaceCellId"
        clean_command="RemoveAllFaceCellIds"
        repeat_command="1"
        number_of_elements_per_command="2">
      </IdTypeVectorProperty>
      <IntVectorProperty name="SetExistingBCS"
        command="SetExistingBCS" number_of_elements="1" default_values="-1">
      </IntVectorProperty>
      <IntVectorProperty name="SetCreateNewBCS"
        command="SetCreateNewBCS" number_of_elements="1" default_values="1">
      </IntVectorProperty>
      <IntVectorProperty name="GetSystemNewBCSId"
        command="GetNewBCSId"
        repeat_command="0"
        number_of_elements="1"
        information_only="1"
        default_values="-1">
        <SimpleIntInformationHelper/>
      </IntVectorProperty>

      <IntVectorProperty name="NumberOfBCSFaces"
        command="GetNumberOfBCSFaces"
        repeat_command="0"
        number_of_elements="1"
        information_only="1"
        argument_is_array="1"
        default_values="0">
        <SimpleIntInformationHelper/>
      </IntVectorProperty>

      <IntVectorProperty
        name="BCSModelFacesIDs"
        label="BCS model faces"
        command="GetBCSModelFacesIDs"
        number_of_elements="1"
        information_only="1"
        default_values="-1" >
        <IntArrayInformationHelper/>
      </IntVectorProperty>

      <!-- End of CreateModelFaces -->
    </SourceProxy>

    <SourceProxy name="OmicronMeshInput" class="vtkOmicronMeshInputFilter"
      label="Omicron Mesh Input Filter">
      <InputProperty name="Input"
        command="SetInputConnection">
      </InputProperty>
      <!-- End of OmicronMeshInput -->
    </SourceProxy>

    <SourceProxy name="CreateBCS" class="vtkCreateBCSFilter"
      label="Create a BCS">
      <InputProperty name="Input"
        command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
      </InputProperty>
      <DataTypeDomain name="input_type">
        <DataType value="vtkMultiBlockDataSet"/>
      </DataTypeDomain>

      <IntVectorProperty name="AddModelFace"
        command="AddModelFaceId"
        clean_command="RemoveAllModelFaceIds"
        repeat_command="1"
        number_of_elements_per_command="1">
      </IntVectorProperty>
      <IntVectorProperty name="SetBCSId"
        command="SetBCSId"
        repeat_command="0"
        number_of_elements="1"
        default_values="-1">
      </IntVectorProperty>
      <StringVectorProperty name="SetBCSName"
        command="SetBCSName"
        animatable="0"
        number_of_elements="1"
        default_values="generic BCS">
      </StringVectorProperty>
      <IntVectorProperty name="GetSystemBCSId"
        command="GetSystemBCSId"
        repeat_command="0"
        number_of_elements="1"
        information_only="1"
        default_values="-1">
        <SimpleIntInformationHelper/>
      </IntVectorProperty>
      <!-- End of CreateBCS -->
    </SourceProxy>

    <SourceProxy name="CreateMaterial" class="vtkCreateMaterialFilter"
      label="Create a material">
      <InputProperty name="Input"
        command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
      </InputProperty>
      <DataTypeDomain name="input_type">
        <DataType value="vtkMultiBlockDataSet"/>
      </DataTypeDomain>

      <IntVectorProperty name="SetMaterialId"
        command="SetMaterialId"
        repeat_command="0"
        number_of_elements="1"
        default_values="-1">
      </IntVectorProperty>
      <StringVectorProperty name="SetMaterialName"
        command="SetMaterialName"
        animatable="0"
        number_of_elements="1"
        default_values="generic material">
      </StringVectorProperty>
      <IntVectorProperty name="GetSystemMaterialId"
        command="GetSystemMaterialId"
        repeat_command="0"
        number_of_elements="1"
        information_only="1"
        default_values="-1">
        <SimpleIntInformationHelper/>
      </IntVectorProperty>
      <!-- End of CreateMaterial -->
    </SourceProxy>

    <SourceProxy name="ModifyBCS" class="vtkModifyBCSFilter"
      label="Modify which model faces a BCS is associated with">
      <InputProperty name="Input"
        command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
      </InputProperty>
      <DataTypeDomain name="input_type">
        <DataType value="vtkMultiBlockDataSet"/>
      </DataTypeDomain>

      <StringVectorProperty name="AddModifiedBCSColor"
        command="AddModifiedBCSColor"
        clean_command="RemoveAllModifiedBCSColors"
        repeat_command="1"
        number_of_elements_per_command="5"
        element_types="0 1 1 1 1">
      </StringVectorProperty>
      <IntVectorProperty name="AddModifiedBCSId"
        command="AddModifiedBCSId"
        clean_command="RemoveAllModifiedBCSIds"
        repeat_command="1"
        number_of_elements_per_command="2">
      </IntVectorProperty>
      <StringVectorProperty name="AddModifiedBCSName"
        command="AddModifiedBCSName"
        clean_command="RemoveAllModifiedBCSNames"
        repeat_command="1"
        number_of_elements_per_command="2"
        element_types="0 2">
      </StringVectorProperty>

      <IntVectorProperty name="AddModelFace"
        command="AddModelFaceToBCS"
        clean_command="RemoveAllBCSModelFacePairs"
        repeat_command="1"
        number_of_elements_per_command="2">
      </IntVectorProperty>

      <IntVectorProperty name="RemoveModelFace"
        command="RemoveModelFaceFromBCS"
        clean_command="RemoveAllBCSModelFacePairs"
        repeat_command="1"
        number_of_elements_per_command="2">
      </IntVectorProperty>
      <!-- End of ModifyBCS -->
    </SourceProxy>

    <SourceProxy name="ModifyMaterial" class="vtkModifyMaterialFilter"
      label="Modify the GUI user data of a material.">
      <InputProperty name="Input"
        command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
      </InputProperty>
      <DataTypeDomain name="input_type">
        <DataType value="vtkMultiBlockDataSet"/>
      </DataTypeDomain>

      <StringVectorProperty name="AddModifiedMaterialColor"
        command="AddModifiedMaterialColor"
        clean_command="RemoveAllModifiedMaterialColors"
        repeat_command="1"
        number_of_elements_per_command="5"
        element_types="0 1 1 1 1">
      </StringVectorProperty>
      <IntVectorProperty name="AddModifiedMaterialId"
        command="AddModifiedMaterialId"
        clean_command="RemoveAllModifiedMaterialIds"
        repeat_command="1"
        number_of_elements_per_command="2">
      </IntVectorProperty>
      <StringVectorProperty name="AddModifiedMaterialName"
        command="AddModifiedMaterialName"
        clean_command="RemoveAllModifiedMaterialNames"
        repeat_command="1"
        number_of_elements_per_command="2"
        element_types="0 2">
      </StringVectorProperty>

      <!-- End of ModifyMaterial -->
    </SourceProxy>

    <SourceProxy name="ModifyShell" class="vtkModifyShellFilter"
      label="Modify a shell.">
      <InputProperty name="Input"
        command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
      </InputProperty>
      <DataTypeDomain name="input_type">
        <DataType value="vtkMultiBlockDataSet"/>
      </DataTypeDomain>

      <StringVectorProperty name="AddModifiedShellColor"
        command="AddModifiedShellColor"
        clean_command="RemoveAllModifiedShellColors"
        repeat_command="1"
        number_of_elements_per_command="5"
        element_types="0 1 1 1 1">
      </StringVectorProperty>
      <IntVectorProperty name="AddModifiedShelllId"
        command="AddModifiedShellId"
        clean_command="RemoveAllModifiedShellIds"
        repeat_command="1"
        number_of_elements_per_command="2">
      </IntVectorProperty>
      <StringVectorProperty name="AddModifiedShellName"
        command="AddModifiedShellName"
        clean_command="RemoveAllModifiedShellNames"
        repeat_command="1"
        number_of_elements_per_command="2"
        element_types="0 2">
      </StringVectorProperty>

      <IntVectorProperty name="AddShellMaterialPair"
        command="AddShellMaterialPair"
        clean_command="RemoveAllShellMaterialPairs"
        repeat_command="1"
        number_of_elements_per_command="2">
      </IntVectorProperty>
      <!-- End of ModifyShell -->
    </SourceProxy>

    <SourceProxy name="ModifyModelFace" class="vtkModifyModelFaceFilter"
      label="Modify the GUI user data of a ModelFace.">
      <InputProperty name="Input"
        command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
      </InputProperty>
      <DataTypeDomain name="input_type">
        <DataType value="vtkMultiBlockDataSet"/>
      </DataTypeDomain>

      <StringVectorProperty name="AddModifiedModelFaceColor"
        command="AddModifiedModelFaceColor"
        clean_command="RemoveAllModifiedModelFaceColors"
        repeat_command="1"
        number_of_elements_per_command="5"
        element_types="0 1 1 1 1">
      </StringVectorProperty>

      <StringVectorProperty name="AddModifiedModelFaceName"
        command="AddModifiedModelFaceName"
        clean_command="RemoveAllModifiedModelFaceNames"
        repeat_command="1"
        number_of_elements_per_command="2"
        element_types="0 2">
      </StringVectorProperty>

      <IntVectorProperty name="AddModifiedModelFaceUse1"
        command="AddModifiedModelFaceUse1"
        clean_command="RemoveAllModifiedModelFaceUses"
        repeat_command="1"
        number_of_elements_per_command="2">
      </IntVectorProperty>
      <!-- End of ModifyModelFace -->
    </SourceProxy>

    <SourceProxy name="RemoveBCS" class="vtkRemoveBCSFilter"
      label="Remove a BCS">
      <InputProperty name="Input"
        command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
      </InputProperty>
      <DataTypeDomain name="input_type">
        <DataType value="vtkMultiBlockDataSet"/>
      </DataTypeDomain>

      <IntVectorProperty name="SetBCS"
        command="SetBCSId"
        repeat_command="0"
        number_of_elements="1"
        default_values="-1">
      </IntVectorProperty>
      <!-- End of RemoveBCS -->
    </SourceProxy>

    <SourceProxy name="RemoveMaterial" class="vtkRemoveMaterialFilter"
      label="Remove a Material">
      <InputProperty name="Input"
        command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
      </InputProperty>
      <DataTypeDomain name="input_type">
        <DataType value="vtkMultiBlockDataSet"/>
      </DataTypeDomain>

      <IntVectorProperty name="SetMaterial"
        command="SetMaterialId"
        repeat_command="0"
        number_of_elements="1"
        default_values="-1">
      </IntVectorProperty>
      <!-- End of RemoveMaterial -->
    </SourceProxy>

    <SourceProxy name="SeedGrow" class="vtkSeedGrowFilter"
      label="Given a seed cell and an angle, grow a region as polydata output">
      <InputProperty name="Input"
        command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
      </InputProperty>
      <DataTypeDomain name="input_type">
        <DataType value="vtkMultiBlockDataSet"/>
      </DataTypeDomain>

      <InputProperty name="Selection"
        command="SetSelectionConnection"
        clean_command="RemoveAllSelectionsInputs">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkSelection"/>
        </DataTypeDomain>
        <Documentation>
          The input that provides the selection object.
        </Documentation>
      </InputProperty>

      <IdTypeVectorProperty
        name="FaceCellId"
        command="SetFaceCellId"
        number_of_elements="2"
        label="Cell and Model Face ID"
        default_values="0 0">
        <Documentation>
          The cellId of the picked cell in the model face as the seed to grow.
        </Documentation>
      </IdTypeVectorProperty>

      <DoubleVectorProperty
        name="FeatureAngle"
        label="Feature Angle"
        command="SetFeatureAngle"
        number_of_elements="1"
        default_values="70.0" >
        <Documentation>
          The feature angle that will be used to split model faces.
        </Documentation>
      </DoubleVectorProperty>

      <IdTypeVectorProperty name="GrowFaceIds"
        command="SetGrowFaceIds"
        clean_command="RemoveAllGrowFaceIds"
        number_of_elements="2"
        argument_is_array="1"
        default_values="0 -1"
        label="Face Ids">
        <Documentation>
          All the model face Ids that will be grown upon.
        </Documentation>
      </IdTypeVectorProperty>

      <IntVectorProperty name="GrowMode"
        command="SetGrowMode"
        number_of_elements="1"
        default_values="0">
        <EnumerationDomain name="enum">
          <Entry value="0" text="NORMAL" />
          <Entry value="1" text="MERGE" />
          <Entry value="2" text="REMOVE" />
        </EnumerationDomain>
      </IntVectorProperty>

      <!-- End of SeedGrow -->
    </SourceProxy>

    <SourceProxy name="TriangulateConcavePolygons" class="vtkTriangulateConcavePolysFilter"
      label="triangulate concave polygons">
      <InputProperty
        name="Input"
        command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkPolyData"/>
        </DataTypeDomain>
      </InputProperty>
      <!-- End of AddCellData -->
    </SourceProxy>

    <SourceProxy name="AddMeshDataArray" class="vtkAddMeshDataArrayFilter"
      label="Add Mesh Data Array Filter">
      <InputProperty
        name="Input"
        command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataSet"/>
        </DataTypeDomain>
        <Documentation>
          This property specifies the input to the AddMeshDataArray filter.
        </Documentation>
      </InputProperty>
      <!-- End of AddMeshDataArray -->
    </SourceProxy>

    <SourceProxy name="AddCellData" class="vtkAddCellDataFilter"
      label="Add CellData Filter">
      <InputProperty
        name="Input"
        command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataSet"/>
        </DataTypeDomain>
        <Documentation>
          This property specifies the input to the AddCellData filter.
        </Documentation>
      </InputProperty>
      <!-- End of AddCellData -->
    </SourceProxy>

    <SourceProxy name="AddPointData" class="vtkAddPointDataFilter"
      label="Add PointData Filter">
      <InputProperty
        name="Input"
        command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type" composite_data_supported="1">
          <DataType value="vtkMultiBlockDataSet"/>
        </DataTypeDomain>
        <Documentation>
          This property specifies the input to the AddPointData filter.
        </Documentation>
      </InputProperty>
      <!-- End of AddPointData -->
    </SourceProxy>

    <SourceProxy name="HydroModelCreator"
      class="vtkHydroModelCreator"
      label="Hydro Model Creator">
      <Documentation
        short_help="Separate a polydata input to a multiblock dataset."
        long_help="Filter to output a vtkMultiBlockDataSet with the classification info from the incoming vtkPolyData in other vtkPolyDatas.">
      </Documentation>
      <InputProperty
        name="Input"
        command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataSet"/>
        </DataTypeDomain>
        <Documentation>
          This property specifies the input to the HydroModelCreator filter.
        </Documentation>
      </InputProperty>

    </SourceProxy>

    <SourceProxy name="LoadBCSs" class="vtkLoadBCSsFilter"
      label="Load Model Faces">
      <InputProperty
        name="Input"
        command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataSet"/>
        </DataTypeDomain>
        <Documentation>
          This property specifies the input to the LoadModelFaces filter.
        </Documentation>
      </InputProperty>
      <StringVectorProperty
        name="FileName"
        command="SetFileName"
        animateable="0"
        number_of_elements="1">
        <FileListDomain name="files"/>
        <Documentation>
          This property specifies the file name of the model faces file.
        </Documentation>
      </StringVectorProperty>
      <!-- End of LoadModelFaces -->
    </SourceProxy>


    <SourceProxy name="ExtractModelFaceBlock" class="vtkExtractModelFaceBlock"
      label="Extract Model Face Block">
      <Documentation
        long_help="This filter extracts a block (as polydata) from a multiblock dataset."
        short_help="Extract a model face block.">
        This filter extracts a block (as polydata) from a multiblock dataset.
      </Documentation>
      <InputProperty
        name="Input"
        command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type" composite_data_supported="1">
          <DataType value="vtkMultiBlockDataSet"/>
        </DataTypeDomain>
        <Documentation>
          This property specifies the input to the Extract model face Block filter.
        </Documentation>
      </InputProperty>

      <IntVectorProperty
        name="FaceId"
        command="SetFaceId"
        number_of_elements="1"
        label="Face Id"
        default_values="-1">
        <Documentation>
          The index of the model block to extract from a multiblock dataset
        </Documentation>
      </IntVectorProperty>
      <!-- End ExtractModelFaceBlock -->
    </SourceProxy>

    <SourceProxy name="ExtractLeafBlock" class="vtkExtractLeafBlock"
      label="Extract Leaf Block">
      <Documentation
        long_help="This filter extracts a block (as polydata) from a multiblock dataset."
        short_help="Extract a leaf block.">
        This filter extracts a block (as polydata) from a multiblock dataset.
      </Documentation>
      <InputProperty
        name="Input"
        command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type" composite_data_supported="1">
          <DataType value="vtkMultiBlockDataSet"/>
        </DataTypeDomain>
        <Documentation>
          This property specifies the input to the Extract Leaf Block filter.
        </Documentation>
      </InputProperty>

      <IntVectorProperty
        name="BlockIndex"
        command="SetBlockIndex"
        number_of_elements="1"
        label="Block Index"
        default_values="0">
        <Documentation>
          The index of the leaf block to extract from a multiblock dataset
        </Documentation>
      </IntVectorProperty>
      <!-- End ExtractBlock -->
    </SourceProxy>

    <SourceProxy name="ExtractMultiBlock" class="vtkExtractMultiBlockBlock"
      label="Extract Multi-Block Block">
      <Documentation
        long_help="This filter extracts a block (as multi-block dataset) from a multiblock dataset."
        short_help="Extract a multi-block block.">
        This filter extracts a block (as multi-block dataset) from a multiblock dataset.
      </Documentation>
      <InputProperty
        name="Input"
        command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type" composite_data_supported="1">
          <DataType value="vtkMultiBlockDataSet"/>
        </DataTypeDomain>
        <Documentation>
          This property specifies the input to the Extract Multi-Block Block filter.
        </Documentation>
      </InputProperty>

      <IntVectorProperty
        name="BlockIndex"
        command="SetBlockIndex"
        number_of_elements="1"
        label="Block Index"
        default_values="-1">
        <Documentation>
          The index of the block to extract from a multiblock dataset
        </Documentation>
      </IntVectorProperty>
      <!-- End ExtractMultiBlock -->
    </SourceProxy>

  <SourceProxy name="ExtractCellFromDataSet" class="vtkCMBExtractCellFromDataSet"
      label="Extract Cell from DataSet">
      <Documentation
        long_help="This filter extracts a block a single cell from a dataset and saves as a polydata"
        short_help="Extract a single cell.">
        This filter extracts a cell (as polydata) from a dataset.
      </Documentation>
      <InputProperty
        name="Input"
        command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type" composite_data_supported="1">
          <DataType value="vtkMultiBlockDataSet"/>
        </DataTypeDomain>
        <Documentation>
          This property specifies the input to the Extract Leaf Block filter.
        </Documentation>
      </InputProperty>

      <IntVectorProperty
        name="CellIndex"
        command="SetCellIndex"
        number_of_elements="1"
        label="Cell Index"
        default_values="0">
      </IntVectorProperty>
      <!-- End ExtractCellFromDataSet -->
    </SourceProxy>

    <SourceProxy name="ClosestPointFilter" class="vtkClosestPointFilter" label="ClosestPoint">
      <Documentation
        long_help="Calculate the closest point to an object."
        short_help="Get closest point.">
      </Documentation>
      <InputProperty
        name="Input"
        command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkPolyData"/>
        </DataTypeDomain>
      </InputProperty>

      <DoubleVectorProperty
        name="ClosestPoint"
        label="Closest Point"
        command="GetClosestPoint"
        number_of_elements="3"
        information_only="1"
        default_values="0.0 0.0 0.0" >
        <SimpleDoubleInformationHelper/>
        <Documentation>
          Result of the closest point calculation.
        </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
        name="TestPoint"
        label="Test Point"
        command="SetTestPoint"
        number_of_elements="3"
        default_values="0.0 0.0 0.0" >
        <Documentation>
          Point to be used in closest point calculation.
        </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
        name="Translation"
        label="Translation"
        command="SetTranslation"
        number_of_elements="3"
        default_values="0.0 0.0 0.0" >
        <Documentation>
          Defines the translation from data space to world space.
        </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
        name="Orientation"
        label="Orientation"
        command="SetOrientation"
        number_of_elements="3"
        default_values="0.0 0.0 0.0" >
        <Documentation>
          Defines the orientation from data space to world space.
        </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
        name="Scale"
        label="Scale"
        command="SetScale"
        number_of_elements="3"
        default_values="1.0 1.0 1.0" >
        <Documentation>
          Defines the scale from data space to world space.
        </Documentation>
      </DoubleVectorProperty>
      <!-- End ClosestPointFilter -->
    </SourceProxy>

    <SourceProxy name="TexturePointIntensityFilter" class="vtkTexturePointIntensityFilter" label="TextureIntensityAtPoint">
      <Documentation
        long_help="Calculate the intensity of the texture at the specified point."
        short_help="Get intensity at point.">
      </Documentation>
      <InputProperty
        name="Input"
        command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkPolyData"/>
        </DataTypeDomain>
      </InputProperty>

      <InputProperty
         name="TextureData"
         command="SetTextureDataConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkImageData"/>
        </DataTypeDomain>
        <Documentation>
          This property specifies the image being used as the texture
        </Documentation>
      </InputProperty>

      <DoubleVectorProperty
        name="Intensity"
        label="Intensity"
        command="GetIntensity"
        number_of_elements="1"
        information_only="1"
        default_values="0.0" >
        <SimpleDoubleInformationHelper/>
        <Documentation>
          Result of the texture intensity calculation.
        </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
        name="TestPoint"
        label="Test Point"
        command="SetTestPoint"
        number_of_elements="3"
        default_values="0.0 0.0 0.0" >
        <Documentation>
          Point used for intensity query.
        </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
        name="Translation"
        label="Translation"
        command="SetTranslation"
        number_of_elements="3"
        default_values="0.0 0.0 0.0" >
        <Documentation>
          Defines the translation from data space to world space.
        </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
        name="Orientation"
        label="Orientation"
        command="SetOrientation"
        number_of_elements="3"
        default_values="0.0 0.0 0.0" >
        <Documentation>
          Defines the orientation from data space to world space.
        </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
        name="Scale"
        label="Scale"
        command="SetScale"
        number_of_elements="3"
        default_values="1.0 1.0 1.0" >
        <Documentation>
          Defines the scale from data space to world space.
        </Documentation>
      </DoubleVectorProperty>
      <!-- End TexturePointIntensityFilter -->
    </SourceProxy>

    <SourceProxy name="PolyDataStatsFilter" class="vtkPolyDataStatsFilter" label="PolyDataStats">
     <Documentation
        long_help="Calculate the statistics of a PolyDataSet."
        short_help="Get PolyDataSet Statistics.">
     </Documentation>
     <InputProperty
        name="Input"
        command="SetInputConnection">
           <ProxyGroupDomain name="groups">
             <Group name="sources"/>
             <Group name="filters"/>
           </ProxyGroupDomain>
           <DataTypeDomain name="input_type">
             <DataType value="vtkPolyData"/>
           </DataTypeDomain>
      </InputProperty>

      <DoubleVectorProperty
         name="AreaStats"
         label="Area Statistics"
         command="GetAreaStats"
         number_of_elements="3"
         information_only="1"
         default_values="0.0 0.0 0.0" >
        <SimpleDoubleInformationHelper/>
        <Documentation>
          Area Result of the PolyDataSet Statistic calculation.
        </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
         name="GeometryBounds"
         label="Geometry Bounds"
         command="GetGeometryBounds"
         number_of_elements="6"
         information_only="1"
         default_values="0.0 0.0 0.0 0.0 0.0 0.0" >
        <SimpleDoubleInformationHelper/>
        <Documentation>
          Geometric Bounds Result of the PolyDataSet Statistic calculation.
        </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
         name="PolygonalSideStats"
         label="Polygonal Side Statistics"
         command="GetPolygonalSideStats"
         number_of_elements="3"
         information_only="1"
         default_values="0.0 0.0 0.0" >
        <SimpleDoubleInformationHelper/>
        <Documentation>
          Polygonal Side Result of the PolyDataSet Statistic calculation.
        </Documentation>
      </DoubleVectorProperty>

      <IdTypeVectorProperty
        name="NumberOfPoints"
        label="Number of Points"
        command="GetNumberOfPoints"
        number_of_elements="1"
        information_only="1"
        default_values="0">
        <SimpleIdTypeInformationHelper/>
      </IdTypeVectorProperty>

      <IdTypeVectorProperty
        name="NumberOfLines"
        label="Number of Lines"
        command="GetNumberOfLines"
        number_of_elements="1"
        information_only="1"
        default_values="0">
        <SimpleIdTypeInformationHelper/>
      </IdTypeVectorProperty>

      <IdTypeVectorProperty
        name="NumberOfPolygons"
        label="Number of Polygons"
        command="GetNumberOfPolygons"
        information_only="1"
        number_of_elements="1"
        default_values="0">
        <SimpleIdTypeInformationHelper/>
      </IdTypeVectorProperty>

      <DoubleVectorProperty
        name="TotalSurfaceArea"
        label="Total Surface Area"
        command="GetTotalSurfaceArea"
        information_only="1"
        number_of_elements="1"
        default_values="0.0">
        <SimpleDoubleInformationHelper/>
      </DoubleVectorProperty>

      <DoubleVectorProperty
         name="Translation"
         label="Translation"
         command="SetTranslation"
         number_of_elements="3"
         default_values="0.0 0.0 0.0" >
          <Documentation>
           Defines the translation from data space to world space.
         </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
         name="Orientation"
         label="Orientation"
         command="SetOrientation"
         number_of_elements="3"
         default_values="0.0 0.0 0.0" >
          <Documentation>
           Defines the orientation from data space to world space.
         </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
         name="Scale"
         label="Scale"
         command="SetScale"
         number_of_elements="3"
         default_values="1.0 1.0 1.0" >
          <Documentation>
           Defines the scale from data space to world space.
         </Documentation>
      </DoubleVectorProperty>
      <!-- End ClosestPointFilter -->
   </SourceProxy>

    <SourceProxy name="RuledSurfaceFilter" class="vtkRuledSurfaceFilter" label="RuledSurface">
      <Documentation
        long_help="Create a ruled surface between two polyline loops."
        short_help="Create a ruled surface.">
      </Documentation>
      <InputProperty
        name="Input"
        command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkPolyData"/>
        </DataTypeDomain>
      </InputProperty>

      <DoubleVectorProperty
        name="DistanceFactor"
        label="Distance Factor"
        command="SetDistanceFactor"
        number_of_elements="1"
        default_values="3.0" >
        <Documentation>
          Defines the max distance 2 lines can be before a tear is created.
        </Documentation>
      </DoubleVectorProperty>

      <IntVectorProperty
        name="OnRatio"
        label="ON Ratio"
        command="SetOnRatio"
        number_of_elements="1"
        default_values="1" >
        <Documentation>
          Control the striping of the ruled surface. If OnRatio is greater than 1, then every nth strip is turned on, beginning with the Offset strip.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
        name="Offset"
        label="Offset"
        command="SetOffset"
        number_of_elements="1"
        default_values="0" >
        <Documentation>
          Control the striping of the ruled surface. The offset sets the first stripe that is visible. Offset is generally used with OnRatio to create nifty striping effects.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
        name="CloseSurface"
        label="Close Surface"
        command="SetCloseSurface"
        number_of_elements="1"
        default_values="0" >
        <BooleanDomain name="bool"/>
        <Documentation>
          Indicate whether the surface is to be closed. If this boolean is on, then the first and last polyline are used to generate a stripe that closes the surface. (Note: to close the surface in the other direction, repeat the first point in the polyline as the last point in the polyline.)
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
        name="RuledMode"
        label="Do Not Resample"
        command="SetRuledMode"
        number_of_elements="1"
        default_values="0" >
        <BooleanDomain name="bool"/>
        <Documentation>
          Set the mode by which to create the ruled surface. (Dramatically different results are possible depending on the chosen mode.) The resample mode evenly resamples the polylines (based on length) and generates triangle strips. If set to true then the filter uses the existing points and walks around the polyline using existing points.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
        name="OrientLoops"
        label="Determine the Starting Points in each Loop"
        command="SetOrientLoops"
        number_of_elements="1"
        default_values="0" >
        <BooleanDomain name="bool"/>
        <Documentation>
          Indicate whether the starting points of the loops need to be determined. If set to 0, then its assumes that the 0th point of each loop should be always connected.  By defualt the loops are not oriented.
        </Documentation>
      </IntVectorProperty>

      <!-- End RuledSurfaceFilter -->
    </SourceProxy>

    <SourceProxy name="RegisterPlanarTextureMapFilter" class="vtkRegisterPlanarTextureMap" label="RegisterPlanarTextureMap">
      <Documentation
        long_help="Assign Texture Coordinates based on points registered in both the image and on the surface.  This filter ignores the z direction and assumes the surface is on the XY Plane."
        short_help="Assign Texture Coordinates based on registered points.">
      </Documentation>
      <InputProperty
        name="Input"
        command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkPolyData"/>
        </DataTypeDomain>
      </InputProperty>

      <DoubleVectorProperty
        name="TwoPointRegistration"
        label="Two Point Registration"
        command="SetTwoPointRegistration"
        argument_is_array="1"
        default_values='0 1 2 3 4 5 6 7'
        number_of_elements="8">
        <Documentation>
          Defines the registration to be based on 2 points. The format is x1 y1 s1 t1 x2 y2 s2 t2.
        </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
        name="ThreePointRegistration"
        label="Three Point Registration"
        argument_is_array="1"
        default_values='0 1 2 3 4 5 6 7 8 9 10 11'
        command="SetThreePointRegistration"
        number_of_elements="12">
        <Documentation>
          Defines the registration to be based on 3 points. The format is x1 y1 s1 t1 x2 y2 s2 t2 x3 y3 s3 t3.
        </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
        name="SRange"
        label="S Range"
        command="SetSRange"
        argument_is_array="1"
        default_values='0 1'
        number_of_elements="2">
        <Documentation>
          Defines the range of the S coordinate.
        </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
        name="TRange"
        label="T Range"
        command="SetTRange"
        argument_is_array="1"
        default_values='0 1'
        number_of_elements="2">
        <Documentation>
          Defines the range of the T coordinate.
        </Documentation>
      </DoubleVectorProperty>

      <IntVectorProperty
        name="GenerateCoordinates"
        label="Generate Texture Coordinates"
        command="SetGenerateCoordinates"
        number_of_elements="1"
        default_values="1" >
        <BooleanDomain name="bool"/>
        <Documentation>
          Indicates whether the filter should generate texture coordinates
          or simply pass-through the information.
        </Documentation>
      </IntVectorProperty>

      <!-- End RegisterPlanarTextureMapFilter -->
    </SourceProxy>

    <SourceProxy name="CreateNodalGroups" class="vtkCreateNodalGroupsFilter"
      label="Create Nodal groups">
      <InputProperty name="Input"
        command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkMultiBlockDataSet"/>
        </DataTypeDomain>
      </InputProperty>

      <InputProperty name="Selection"
        command="SetSelectionConnection"
        clean_command="RemoveAllSelectionsInputs">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkSelection"/>
        </DataTypeDomain>
        <Documentation>
          The input that provides the selection object.
        </Documentation>
      </InputProperty>

      <IdTypeVectorProperty name="NodalGroupPointId"
        command="AddNodalGroupPointId"
        clean_command="RemoveAllNodalGroupPointIds"
        repeat_command="1"
        number_of_elements_per_command="2">
      </IdTypeVectorProperty>
      <IntVectorProperty name="SetExistingBCS"
        command="SetExistingBCS" number_of_elements="1" default_values="-1">
      </IntVectorProperty>
      <IntVectorProperty name="SetCreateNewBCS"
        command="SetCreateNewBCS" number_of_elements="1" default_values="1">
      </IntVectorProperty>
      <IntVectorProperty name="GetSystemBCSId"
        command="GetNewBCSId"
        repeat_command="0"
        number_of_elements="1"
        information_only="1"
        default_values="-1">
        <SimpleIntInformationHelper/>
      </IntVectorProperty>

      <IntVectorProperty name="NumberOfNodalGroupsInBCS"
        command="GetNumberOfNodalGroupsInBCS"
        repeat_command="0"
        number_of_elements="1"
        information_only="1"
        argument_is_array="1"
        default_values="0">
        <SimpleIntInformationHelper/>
      </IntVectorProperty>

      <IntVectorProperty
        name="BCSNodalGroupIDs"
        label="BCS Nodal Groups"
        command="GetBCSNodalGroupIDs"
        number_of_elements="1"
        information_only="1"
        default_values="-1" >
        <IntArrayInformationHelper/>
      </IntVectorProperty>

      <!-- End of CreateNodalGroups -->
    </SourceProxy>

    <SourceProxy name="CreateNodalBCS" class="vtkCreateNodalBCSFilter"
      label="Create a nodal BCS">
      <InputProperty name="Input"
        command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
      </InputProperty>
      <DataTypeDomain name="input_type">
        <DataType value="vtkMultiBlockDataSet"/>
      </DataTypeDomain>

      <IntVectorProperty name="AddNodalGroup"
        command="AddNodalGroupId"
        clean_command="RemoveAllNodalGroupIds"
        repeat_command="1"
        number_of_elements_per_command="1">
      </IntVectorProperty>
      <IntVectorProperty name="SetBCSId"
        command="SetBCSId"
        repeat_command="0"
        number_of_elements="1"
        default_values="-1">
      </IntVectorProperty>
      <StringVectorProperty name="SetBCSName"
        command="SetBCSName"
        animatable="0"
        number_of_elements="1"
        default_values="generic Nodal BCS">
      </StringVectorProperty>
      <IntVectorProperty name="GetSystemBCSId"
        command="GetSystemBCSId"
        repeat_command="0"
        number_of_elements="1"
        information_only="1"
        default_values="-1">
        <SimpleIntInformationHelper/>
      </IntVectorProperty>
      <!-- End of CreateNodalBCS -->
    </SourceProxy>

    <SourceProxy name="ModifyNodalBCS" class="vtkModifyNodalBCSFilter"
      label="Modify nodal BCS properties">
      <InputProperty name="Input"
        command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
      </InputProperty>
      <DataTypeDomain name="input_type">
        <DataType value="vtkMultiBlockDataSet"/>
      </DataTypeDomain>

      <StringVectorProperty name="AddModifiedBCSColor"
        command="AddModifiedBCSColor"
        clean_command="RemoveAllModifiedBCSColors"
        repeat_command="1"
        number_of_elements_per_command="5"
        element_types="0 1 1 1 1">
      </StringVectorProperty>
      <IntVectorProperty name="AddModifiedBCSId"
        command="AddModifiedBCSId"
        clean_command="RemoveAllModifiedBCSIds"
        repeat_command="1"
        number_of_elements_per_command="2">
      </IntVectorProperty>
      <StringVectorProperty name="AddModifiedBCSName"
        command="AddModifiedBCSName"
        clean_command="RemoveAllModifiedBCSNames"
        repeat_command="1"
        number_of_elements_per_command="2"
        element_types="0 2">
      </StringVectorProperty>

      <IntVectorProperty name="AddNodalGroup"
        command="AddNodalGroupToBCS"
        clean_command="RemoveAllBCSNodalGroupPairs"
        repeat_command="1"
        number_of_elements_per_command="2">
      </IntVectorProperty>

      <IntVectorProperty name="RemoveNodalGroup"
        command="RemoveNodalGroupFromBCS"
        clean_command="RemoveAllBCSNodalGroupPairs"
        repeat_command="1"
        number_of_elements_per_command="2">
      </IntVectorProperty>
      <!-- End of ModifyNodalBCS -->
    </SourceProxy>

    <SourceProxy name="ModifyNodalGroup" class="vtkModifyNodalGroupFilter"
      label="Modify the GUI user data of a Nodal group.">
      <InputProperty name="Input"
        command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
      </InputProperty>
      <DataTypeDomain name="input_type">
        <DataType value="vtkMultiBlockDataSet"/>
      </DataTypeDomain>

      <StringVectorProperty name="AddModifiedColor"
        command="AddModifiedColor"
        clean_command="RemoveAllModifiedColors"
        repeat_command="1"
        number_of_elements_per_command="5"
        element_types="0 1 1 1 1">
      </StringVectorProperty>

      <StringVectorProperty name="AddModifiedName"
        command="AddModifiedName"
        clean_command="RemoveAllModifiedNames"
        repeat_command="1"
        number_of_elements_per_command="2"
        element_types="0 2">
      </StringVectorProperty>

      <!-- End of ModifyNodalGroup -->
    </SourceProxy>

    <SourceProxy name="RemoveBCS" class="vtkRemoveBCSFilter"
      label="Remove a BCS">
      <InputProperty name="Input"
        command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
      </InputProperty>
      <DataTypeDomain name="input_type">
        <DataType value="vtkMultiBlockDataSet"/>
      </DataTypeDomain>

      <IntVectorProperty name="SetBCS"
        command="SetBCSId"
        repeat_command="0"
        number_of_elements="1"
        default_values="-1">
      </IntVectorProperty>
      <!-- End of RemoveBCS -->
    </SourceProxy>


    <SourceProxy name="DataSetRegionSurfaceFilter" class="vtkDataSetRegionSurfaceFilter"
      label="Extract Region Surface">
      <Documentation
        long_help="Extract a 2D region surface using neighbor relations and a RegionArray to eliminate internal faces."
        short_help="Extract 2D region surface.">
        The Extract Surface filter extracts the polygons forming the outer surface of the input dataset as well as interior surfaces that are not from the same "region". This filter operates on only vtkUnstructuredGrid data (for now) and produces polygonal data as output.
      </Documentation>
      <InputProperty
        name="Input"
        command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkUnstructuredGrid"/>
        </DataTypeDomain>
        <Documentation>
          This property specifies the input to the filter.
        </Documentation>
      </InputProperty>

      <StringVectorProperty
        name="RegionArrayName"
        command="SetRegionArrayName"
        animateable="0"
        number_of_elements="1">
        <Documentation>
          The name of the CellData array used to determine interior (to be considered interior a cell's value in this array must be the same and another cell that is topolgically the same)
        </Documentation>
      </StringVectorProperty>

      <IntVectorProperty
        name="PieceInvariant"
        command="SetPieceInvariant"
        number_of_elements="1"
        default_values="1" >
        <BooleanDomain name="bool"/>
        <Documentation>
          If the value of this property is set to 1, internal surfaces along process boundaries will be removed. NOTE: Enabling this option might cause multiple executions of the data source because more information is needed to remove internal surfaces.
        </Documentation>
      </IntVectorProperty>
      <!-- End DataSetRegionSurfaceFilter -->
    </SourceProxy>

    <SourceProxy name="ExtractRegionEdges" class="vtkExtractRegionEdges"
      label="Extract Region Edges">
      <Documentation
        long_help="Extract 2D boundary edges around regions for a CMB model."
        short_help="Extract 2D region boundary edges.">
        The Extract Edge filter extracts the boundary edges around the regions of the input dataset.
      </Documentation>
      <InputProperty
        name="Input"
        command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataObject"/>
        </DataTypeDomain>
        <Documentation>
          This property specifies the input to the filter.
        </Documentation>
      </InputProperty>

      <StringVectorProperty
        name="RegionArrayName"
        command="SetRegionArrayName"
        animateable="0"
        number_of_elements="1">
        <Documentation>
          The name of the CellData array used to determine interior (to be considered interior a cell's value in this array must be the same and another cell that is topolgically the same)
        </Documentation>
      </StringVectorProperty>

      <IntVectorProperty
        name="RegionIdentifiersModified"
        command="GetRegionIdentifiersModified"
        number_of_elements="1"
        information_only="1"
        default_values="0" >
        <BooleanDomain name="bool"/>
      </IntVectorProperty>
      <!-- End ExtractRegionEdges -->
    </SourceProxy>

    <SourceProxy name="IdentifyNonManifoldPts" class="vtkIdentifyNonManifoldPts"
      label="Identify Non-Manifold Pts">
      <Documentation
        long_help="Identify points used by more than two lines."
        short_help="Identify non-manifold points.">
        Intended just for use with lines, identified (with vertex) any points used by more than two cells (lines)
      </Documentation>
      <InputProperty
         name="Input"
         command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkPolyData"/>
        </DataTypeDomain>
      </InputProperty>
    </SourceProxy>

    <SourceProxy name="CleanPolylines" class="vtkCleanPolylines"
      label="Clean Polylines">
      <Documentation
        long_help="Remove any lines (polylines) below a threshold length."
        short_help="Remove short polylines.">
        Remove any lines (polylines) below a threshold length.  Input is cleaned and stripped
        before remove shour polylines.
      </Documentation>
      <InputProperty
         name="Input"
         command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkPolyData"/>
        </DataTypeDomain>
        <Documentation>
          Set the input to the CleanPolylines filter.
        </Documentation>
      </InputProperty>

      <DoubleVectorProperty name="MinimumLineLength"
        command="SetMinimumLineLength"
        repeat_command="0"
        number_of_elements="1"
        default_values="5">
        <DoubleRangeDomain name="range" min="0"/>
        <Documentation>
          Sets the minimum line length for the filter
        </Documentation>
      </DoubleVectorProperty>

      <IntVectorProperty
        name="UseRelativeLineLength"
        command="SetUseRelativeLineLength"
        number_of_elements="1"
        default_values="1">
        <BooleanDomain name="bool"/>
        <Documentation>
          Set whether or not the test line length is a factor of the average line length
        </Documentation>
      </IntVectorProperty>

    </SourceProxy>

    <SourceProxy name="ExtractLine" class="vtkExtractLine"
      label="Extract Line">
      <Documentation
        long_help="Extarct a single line (polyline) from the input, using the same points as input."
        short_help="Extract a single line (polyline).">
      </Documentation>
      <InputProperty
         name="Input"
         command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkPolyData"/>
        </DataTypeDomain>
        <Documentation>
          Set the input to the ExtractLine filter.
        </Documentation>
      </InputProperty>

      <IntVectorProperty name="LineId"
        command="SetLineId"
        repeat_command="0"
        number_of_elements="1"
        default_values="0">
        <Documentation>
          Sets index of the line to extract
        </Documentation>
      </IntVectorProperty>

    </SourceProxy>

    <SourceProxy name="ArcPointGlyphingFilter"
                 class="vtkCMBArcPointGlyphingFilter"
                 label="Glyph Arc Points">
      <Documentation
        long_help="Glyph arc points">
        write me.
      </Documentation>
      <InputProperty
        name="Input"
        command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkPolyData"/>
        </DataTypeDomain>
        <InputArrayDomain name="input_array"
          attribute_type="point"
          optional="1"/>
        <Documentation>
          Set the input.
        </Documentation>
      </InputProperty>

      <IntVectorProperty name="setVisible" command="setVisible"
        number_of_elements="1" default_values="-1">
        <Documentation>
          set point as visiable
        </Documentation>
      </IntVectorProperty>

      <DoubleVectorProperty name="setScale"  command="setScale"
         number_of_elements="1" default_values="-1">
      </DoubleVectorProperty>

      <Property name="clearVisible" command="clearVisible" />

    </SourceProxy>

    <SourceProxy name="ArcDepressFilter" class="vtkArcDepressFilter"
      label="Depress PolyData">
      <Documentation
        long_help="Depresses the polydata based on arc">
          write me.
      </Documentation>
      <InputProperty
        name="Input"
        command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkPolyData"/>
        </DataTypeDomain>
        <Documentation>
          Set the input to the Arc Depress PolyData filter.
        </Documentation>
      </InputProperty>

      <DoubleVectorProperty
        name="AddPoint"
        label="Add Point"
        command="AddPointToArc"
        number_of_elements="3"
        default_values="-1.0 0.0 0.0" >
        <Documentation>
          Point to be used in closest point calculation.
        </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
        name="AmountRemoved"
        label="Get Amount Removed"
        command="GetAmountRemoved"
        number_of_elements="1"
        information_only="1"
        default_values="-1">
        <SimpleDoubleInformationHelper/>
      </DoubleVectorProperty>

      <DoubleVectorProperty
        name="AmountAdded"
        label="Get Amount Added"
        command="GetAmountAdded"
        number_of_elements="1"
        information_only="1"
        default_values="-1">
        <SimpleDoubleInformationHelper/>
      </DoubleVectorProperty>

      <IntVectorProperty
        name="AddArc"
        command="AddArc"
        number_of_elements="1"
        default_values="-1">
        <Documentation>
          Adds a new arc.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
        name="ArcEnable"
        command="SetArcEnable"
        number_of_elements="2"
        default_values="-1 1">
        <Documentation>
          Enable the line.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
        name="SetFunctionToPoint"
        command="SetFunctionToPoint"
        number_of_elements="3"
        default_values="-1 -1 -1">
        <Documentation>
          Set a profile function to a point
        </Documentation>
      </IntVectorProperty>

     <IntVectorProperty
        name="UseNormalDirection"
        command="setUseNormalDirection"
        number_of_elements="1"
        default_values="-1">
        <Documentation>
          use normal direction to displace points.
        </Documentation>
     </IntVectorProperty>

      <IntVectorProperty
        name="ClearArc"
        command="ClearActiveArcPoints"
        number_of_elements="1"
        default_values="-1">
        <Documentation>
          Clears the arc points
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
        name="SetArcAsClosed"
        command="SetArcAsClosed"
        number_of_elements="1"
        default_values="-1">
        <Documentation>
          closes the arc
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
        name="RemoveArc"
        command="RemoveArc"
        number_of_elements="1"
        default_values="-1">
        <Documentation>
          Removes the arc from server
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
         name="ResizeOrder"
         command="ResizeOrder"
         number_of_elements="1"
         default_values="-1">
         <Documentation>
           prepairs for modifing the order
         </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
        name="SetOrderValue"
        command="SetOrderValue"
        number_of_elements="2"
        default_values="-1 -1">
        <Documentation>
          Appends to the order a line id
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
          name="CreateManualFunction"
          command="CreateManualFunction"
          number_of_elements="6"
          default_values="-1 -1 0 0 0 0">
          <Documentation>
            Appends to the order a line id
          </Documentation>
      </IntVectorProperty>


      <DoubleVectorProperty
          name="CreateWedgeFunction"
          command="CreateWedgeFunction"
          number_of_elements="10"
          default_values="-1 -1 0 0 0 0 0 0 0 0">
          <Documentation>
            Appends to the order a line id
          </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
        name="AddWeightPoint"
        label="Add Weighting Point"
        command="AddWeightingFunPoint"
        number_of_elements="6"
        default_values="-1.0 -1.0 0.0 0.0 0.0 0.0" >
        <Documentation>
          Add point to wighting function.
        </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
        name="AddManualDespPoint"
        label="Add Desp Point"
        command="AddManualDispFunPoint"
        number_of_elements="6"
        default_values="-1.0 -1.0 0.0 0.0 0.0 0.0" >
        <Documentation>
          Point to be used in closest point calculation.
        </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
        name="SetManualControlVars"
        label="Set the control Varables"
        command="SetManualControlRanges"
        number_of_elements="6"
        default_values="-1.0 -1.0 0.0 0.0 0.0 0.0" >
        <Documentation>
          Point to be used in closest point calculation.
        </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
        name="computeDisplacementChange"
        command="computeDisplacementChangeOnPointsViaBathymetry"
        number_of_elements="2"
        default_values="-1.0 -1.0" >
      </DoubleVectorProperty>

      <!-- End of ArcDepressFilter -->
    </SourceProxy>

    <SourceProxy name="ClipPolygons" class="vtkClipPolygons"
      label="Clip PolyData">
      <Documentation
        long_help="Clip polygonal data with user-specified implicit function or input scalar data."
        short_help="Clip polygonal data.">
        vtkClipPolyData is a filter that clips polygonal data using either any subclass of vtkImplicitFunction, or the input scalar
        data. Clipping means that it actually "cuts" through the cells of the dataset, returning everything inside of the specified implicit
        function (or greater than the scalar value) including "pieces" of a cell. (Compare this with vtkExtractGeometry, which pulls out
        entire, uncut cells.) The output of this filter is polygonal data.
      </Documentation>
      <InputProperty
         name="Input"
         command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkPolyData"/>
        </DataTypeDomain>
        <Documentation>
          Set the input to the Clip PolyData filter.
        </Documentation>
      </InputProperty>
      <IntVectorProperty
        name="ActiveGroupIndex"
        label="Set Active Contour Group Index"
        command="SetActiveGroupIndex"
        number_of_elements="1"
        default_values="-1" >
        <Documentation>
          Sets which contour group will be modified by the other functions
        </Documentation>
      </IntVectorProperty>

      <ProxyProperty name="ClipPolygon"
        command="AddClipPolygon"
        repeatable="1"
        remove_command="RemoveClipPolygon"
        label="Clip Function">
        <ProxyGroupDomain name="groups">
          <Group name="implicit_functions"/>
        </ProxyGroupDomain>
        <Documentation>
          Set the parameters of the clip function.
        </Documentation>
      </ProxyProperty>

      <Property name="RemoveAllClipPolygons" command="RemoveAllClipPolygons" />

      <IntVectorProperty
        name="GroupInvert"
        label="Turn the Invert flag On/Off for the group"
        command="SetGroupInvert"
        number_of_elements="1"
        default_values="1" >
        <Documentation>
          Invert flag for the group
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
        name="InsideOut"
        label="Turn the Invert flag On/Off"
        command="SetClipInsideOut"
        number_of_elements="2"
        default_values="0 1" >
        <Documentation>
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
         name="InsideOutForAll"
         command="SetClipInsideOut"
        repeat_command="1"
        use_index="1"
        number_of_elements_per_command="1"
        default_values="1">
        <BooleanDomain name="bool"/>
        <Documentation>
          Choose which portion of the dataset should be clipped away.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
        name="ClipApplyPolygon"
        label="Turn the ClipApplyPolygon flag On/Off"
        command="SetClipApplyPolygon"
        number_of_elements="2"
        default_values="0 0" >
        <Documentation>
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
        name="ClipApplyPolygonForAll"
        command="SetClipApplyPolygon"
        repeat_command="1"
        use_index="1"
        number_of_elements_per_command="1"
        default_values="0">
        <BooleanDomain name="bool" />
      </IntVectorProperty>

      <IntVectorProperty
        name="ClipAsROI"
        label="Turn the ClipAsROI flag On/Off"
        command="SetClipAsROI"
        number_of_elements="2"
        default_values="0 0" >
        <Documentation>
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
        name="ClipAsROIForAll"
        command="SetClipAsROI"
        repeat_command="1"
        use_index="1"
        number_of_elements_per_command="1"
        default_values="0">
        <BooleanDomain name="bool" />
      </IntVectorProperty>

      <DoubleVectorProperty
        name="Transform"
        label="Piece Transformation"
        command="SetTransform"
        argument_is_array="1"
        default_values='1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1'
        number_of_elements="16">
        <Documentation>
          Transformation matrix for transforming points after they are read in.  Row major.
        </Documentation>
      </DoubleVectorProperty>

      <IntVectorProperty
        name="NumberOfActivePolygons"
        label="Number Of Active Polygons"
        command="GetNumberOfActivePolygons"
        number_of_elements="1"
        information_only="1"
        default_values="0">
        <SimpleIntInformationHelper/>
      </IntVectorProperty>


      <IntVectorProperty
         name="GenerateClippedOutput"
         command="SetGenerateClippedOutput"
         number_of_elements="1"
         default_values="0" >
        <BooleanDomain name="bool"/>
        <Documentation>
          Control whether a second output (the one clipped away) is generated.
        </Documentation>
      </IntVectorProperty>

      <DoubleVectorProperty
         name="Value"
         command="SetValue"
         number_of_elements="1"
         default_values="0.0" >
        <ArrayRangeDomain name="scalar_range">
          <RequiredProperties>
            <Property name="Input" function="Input"/>
          </RequiredProperties>
        </ArrayRangeDomain>
        <DoubleRangeDomain name="range"/>
        <Documentation>
          If clipping with a scalar array, choose the clipping value.
        </Documentation>
      </DoubleVectorProperty>
      <!-- End of vtkClipPolygons -->
    </SourceProxy>

    <SourceProxy name="GMSMeshSelectionRegion" class="vtkGMSMeshSelectionRegionFilter"
       label="Modify the region/material Ids of selected cells in a volume mesh">
      <Documentation
         short_help="Modify the region/material Ids of selected cells in a volume mesh."
         long_help="Modify the region/material Ids of selected cells in a volume mesh." >
        This filter modify the region/material Ids of selected cells in a volume mesh.
      </Documentation>

      <InputProperty name="Input"
          command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataSet"/>
        </DataTypeDomain>
        <Documentation>
          This property specifies the input upon which the filter and selection is applied.
        </Documentation>
      </InputProperty>

      <InputProperty name="Selection"
          command="SetSelectionConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkSelection"/>
        </DataTypeDomain>
        <Documentation>
          The input that provides the selection object.
        </Documentation>
        <Hints>
          <!-- This tag alerts the auto-generated panels and input selection
              that this input is a selection.  It should use the special
              selection GUI. -->
          <SelectionInput />
        </Hints>
      </InputProperty>
      <InputProperty name="Mesh"
          command="SetMeshConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataSet"/>
        </DataTypeDomain>
        <Documentation>
          The input that provides the mesh object.
        </Documentation>
      </InputProperty>

      <StringVectorProperty
         name="SelectInputScalars"
         command="SetInputArrayToProcess"
         number_of_elements="5"
         element_types="0 0 0 0 2"
         label="Scalars">
        <ArrayListDomain name="array_list"
                         attribute_type="Scalars">
          <RequiredProperties>
            <Property name="Input" function="Input"/>
          </RequiredProperties>
        </ArrayListDomain>
        <FieldDataDomain name="field_list">
          <RequiredProperties>
            <Property name="Input" function="Input"/>
          </RequiredProperties>
        </FieldDataDomain>
        <Documentation>
          The value of this property contains the name of the scalar array from which to write out material ID.
        </Documentation>
      </StringVectorProperty>

      <IntVectorProperty
         name="SelectionRegionId"
         command="SetSelectionRegionId"
         number_of_elements="1"
         default_values="-1" >
        <Documentation>
          This is the new region/material Id that will be set for those selected cells.
        </Documentation>
      </IntVectorProperty>

      <!-- End of GMSMeshSelectionRegion -->
    </SourceProxy>
    <SourceProxy name="CmbMeshSelectionConverter" class="vtkCMBMeshSelectionConverter"
       label="Convert a mesh subset selection to an Indices Selection on original mesh">
      <Documentation
         short_help="Convert a mesh subset selection to an Indices Selection on original mesh"
         long_help="Convert a mesh subset selection to an Indices Selection on original mesh" >
        This filter modify the region/material Ids of selected cells in a volume mesh.
      </Documentation>

      <InputProperty name="Input"
          command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataSet"/>
        </DataTypeDomain>
        <Documentation>
          This property specifies the input upon which the filter and selection is applied.
        </Documentation>
      </InputProperty>

      <InputProperty name="Selection"
          command="SetSelectionConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkSelection"/>
        </DataTypeDomain>
        <Documentation>
          The input that provides the selection object.
        </Documentation>
        <Hints>
          <SelectionInput />
        </Hints>
      </InputProperty>
      <InputProperty name="Mesh"
          command="SetMeshConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataSet"/>
        </DataTypeDomain>
        <Documentation>
          The input that provides the mesh object.
        </Documentation>
      </InputProperty>
      <!-- End of CmbMeshSelectionConverter -->
    </SourceProxy>
    <SourceProxy name="CmbMeshContourSelector" class="vtkCMBMeshContourSelector"
       label="Create selection based on contour function">
      <InputProperty name="Input"
          command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataSet"/>
        </DataTypeDomain>
        <Documentation>
          This property specifies the input upon which the filter and selection is applied.
        </Documentation>
      </InputProperty>

      <InputProperty name="Selection"
          command="SetSelectionConnection"
          clean_command="RemoveAllSelectionsInputs">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkSelection"/>
        </DataTypeDomain>
        <Documentation>
          The input that provides the selection object.
        </Documentation>
        <Hints>
          <SelectionInput />
        </Hints>
      </InputProperty>

      <InputProperty name="SurfaceInput"
          command="SetSurfaceConnection"
          clean_command="RemoveAllSurfaceInputs">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkPolyData"/>
        </DataTypeDomain>
        <Documentation>
          The input that provides the mesh surface object.
        </Documentation>
      </InputProperty>

      <ProxyProperty name="Contour"
        command="SetContour"
        label="contour Function">
        <ProxyGroupDomain name="groups">
          <Group name="implicit_functions"/>
        </ProxyGroupDomain>
        <Documentation>
          Set the parameters of the contour function.
        </Documentation>
      </ProxyProperty>

      <IntVectorProperty
        name="InsideOut"
        label="Turn the Invert flag On/Off"
        command="SetInsideOut"
        number_of_elements="1"
        default_values="0" >
        <Documentation>
        </Documentation>
      </IntVectorProperty>
      <IntVectorProperty
       name="IsSelectionEmpty"
       command="GetIsSelectionEmpty"
       number_of_elements="1"
       information_only="1"
       default_values="1">
        <SimpleIntInformationHelper/>
      </IntVectorProperty>

      <IntVectorProperty name="FieldType"
         command="SetSelectionFieldType"
         number_of_elements="1"
         default_values="0">
        <Documentation>
          The location of the array the selection came from (ex, point, cell).
        </Documentation>
        <EnumerationDomain name="enum">
          <Entry value="0" text="CELL" />
          <Entry value="1" text="POINT" />
        </EnumerationDomain>
      </IntVectorProperty>

      <IntVectorProperty
        name="SelectCellThrough"
        label="Turn the SelectCellThrough flag On/Off "
        command="SetSelectCellThrough"
        number_of_elements="1"
        default_values="0" >
        <Documentation>
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty name="SelectContourType"
         label="Select-cell type"
         command="SetSelectContourType"
         number_of_elements="1"
         default_values="0">
        <EnumerationDomain name="enum">
          <Entry value="0" text="ALL_IN"/>
          <Entry value="1" text="PARTIAL_OR_ALL_IN"/>
          <Entry value="2" text="INTERSECT_ONLY"/>
        </EnumerationDomain>
        <Documentation>
          This property set the select-cell type.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
        name="GenerateSelectedOutput"
        label="Turn the GenerateSelectedOutput flag On/Off "
        command="SetGenerateSelectedOutput"
        number_of_elements="1"
        default_values="0" >
        <Documentation>
        </Documentation>
      </IntVectorProperty>

      <DoubleVectorProperty
        name="OrientationOfSelectedNodes"
        label="The Orientation of the selected nodes"
        command="GetOrientationOfSelectedNodes"
        number_of_elements="3"
        information_only="1"
        default_values="0.0 0.0 0.0" >
        <SimpleDoubleInformationHelper/>
        <Documentation>
          Average of the normals for all selected nodes.
        </Documentation>
      </DoubleVectorProperty>

      <!-- End of CmbMeshContourSelector -->
    </SourceProxy>

    <SourceProxy name="CmbMeshConeSelector" class="vtkCMBMeshConeSelector"
       label="Create selection based on cone source">
      <InputProperty name="Input"
          command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataSet"/>
        </DataTypeDomain>
        <Documentation>
          This property specifies the input upon which the filter is applied.
        </Documentation>
      </InputProperty>

      <ProxyProperty name="ConeSource"
        command="SetConeSource"
        label="Cone Source">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
        </ProxyGroupDomain>
        <Documentation>
          Set the parameters of the cone source.
        </Documentation>
      </ProxyProperty>

      <IntVectorProperty
        name="InsideOut"
        label="Turn the Invert flag On/Off"
        command="SetInsideOut"
        number_of_elements="1"
        default_values="0" >
        <Documentation>
        </Documentation>
      </IntVectorProperty>
      <IntVectorProperty
       name="IsSelectionEmpty"
       command="GetIsSelectionEmpty"
       number_of_elements="1"
       information_only="1"
       default_values="1">
        <SimpleIntInformationHelper/>
      </IntVectorProperty>

      <IntVectorProperty name="FieldType"
         command="SetSelectionFieldType"
         number_of_elements="1"
         default_values="0">
        <Documentation>
          The location of the array the selection came from (ex, point, cell).
        </Documentation>
        <EnumerationDomain name="enum">
          <Entry value="0" text="CELL" />
          <Entry value="1" text="POINT" />
        </EnumerationDomain>
      </IntVectorProperty>

      <IntVectorProperty name="SelectConeType"
         label="Select-cell type"
         command="SetSelectConeType"
         number_of_elements="1"
         default_values="0">
        <EnumerationDomain name="enum">
          <Entry value="0" text="ALL_IN"/>
          <Entry value="1" text="PARTIAL_OR_ALL_IN"/>
          <Entry value="2" text="INTERSECT_ONLY"/>
        </EnumerationDomain>
        <Documentation>
          This property set the select-cell type.
        </Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty
        name="Transform"
        label="Cone Transformation"
        command="SetTransform"
        argument_is_array="1"
        default_values='1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1'
        number_of_elements="16">
        <Documentation>
          Cone Transformation matrix for transforming points
        </Documentation>
      </DoubleVectorProperty>
      <!-- End of CmbMeshConeSelector -->
    </SourceProxy>

    <SourceProxy name="GMSMeshQuality" class="vtkMeshQuality"
     label="Mesh Quality">
      <Documentation
         long_help="This filter creates a new cell array containing a geometric measure of each cell's fitness. Different quality measures can be chosen for different cell shapes."
         short_help="Evaluate geometric mesh quality.">
        This filter creates a new cell array containing a geometric measure of each cell's fitness. Different quality measures can be chosen for different cell shapes. Supported shapes include triangles, quadrilaterals, tetrahedra, and hexahedra. For other shapes, a value of 0 is assigned.
      </Documentation>
      <InputProperty
         name="Input"
         command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataSet"/>
        </DataTypeDomain>
        <Documentation>
          This property specifies the input to the Mesh Quality filter.
        </Documentation>
      </InputProperty>
      <IntVectorProperty
         name="TriangleQualityMeasure"
         command="SetTriangleQualityMeasure"
         number_of_elements="1"
         default_values="2">
        <EnumerationDomain name="enum">
          <Entry value="28" text="Area"/>
          <Entry value="1" text="Aspect Ratio"/>
          <Entry value="3" text="Aspect Frobenius"/>
          <Entry value="9" text="Condition"/>
          <Entry value="15" text="Distortion"/>
          <Entry value="0" text="Edge Ratio"/>
          <Entry value="8" text="Maximum Angle"/>
          <Entry value="6" text="Minimum Angle"/>
          <Entry value="10" text="Scaled Jacobian"/>
          <Entry value="2" text="Radius Ratio"/>
          <Entry value="12" text="Relative Size Squared"/>
          <Entry value="13" text="Shape"/>
          <Entry value="14" text="Shape and Size"/>
        </EnumerationDomain>
        <Documentation>
          This property indicates which quality measure will be used to evaluate triangle quality. The radius ratio is the size of a circle circumscribed by a triangle's 3 vertices divided by the size of a circle tangent to a triangle's 3 edges. The edge ratio is the ratio of the longest edge length to the shortest edge length.
        </Documentation>
      </IntVectorProperty>
      <IntVectorProperty
         name="TetQualityMeasure"
         command="SetTetQualityMeasure"
         number_of_elements="1"
         default_values="2">
        <EnumerationDomain name="enum">
          <Entry value="0" text="Edge Ratio"/>
          <Entry value="29" text="Aspect Beta"/>
          <Entry value="27" text="Aspect Gamma"/>
          <Entry value="3" text="Aspect Frobenius"/>
          <Entry value="1" text="Aspect Ratio"/>
          <Entry value="7" text="Collapse Ratio"/>
          <Entry value="9" text="Condition"/>
          <Entry value="15" text="Distortion"/>
          <Entry value="25" text="Jacobian"/>
          <Entry value="6" text="Minimum Dihedral Angle"/>
          <Entry value="2" text="Radius Ratio"/>
          <Entry value="12" text="Relative Size Squared"/>
          <Entry value="10" text="Scaled Jacobian"/>
          <Entry value="13" text="Shape"/>
          <Entry value="14" text="Shape and Size"/>
          <Entry value="19" text="Volume"/>
        </EnumerationDomain>
        <Documentation>
          This property indicates which quality measure will be used to evaluate tetrahedral quality. The radius ratio is the size of a sphere circumscribed by a tetrahedron's 4 vertices divided by the size of a circle tangent to a tetrahedron's 4 faces. The edge ratio is the ratio of the longest edge length to the shortest edge length. The collapse ratio is the minimum ratio of height of a vertex above the triangle opposite it divided by the longest edge of the opposing triangle across all vertex/triangle pairs.
        </Documentation>
      </IntVectorProperty>
      <!-- End GMSMeshQuality -->
    </SourceProxy>

    <SourceProxy name="CmbSceneGenPolygon"
      class="vtkCMBSceneGenPolygon"
      label="creates a scene gen polygon from the input provided">
      <Documentation
        long_help="Write out all contours in a scene.">
      </Documentation>

      <InputProperty
         name="Input"
         command="AddInputConnection"
         clean_command="RemoveAllInputs"
         multiple_input="1">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
         <DataTypeDomain name="input_type" composite_data_supported="1">
             <DataType value="vtkDataObject"/>
           </DataTypeDomain>
        <Documentation>
          This property specifies the input dataset to generate the polygon from
        </Documentation>
      </InputProperty>
    </SourceProxy>

    <SourceProxy name="CmbMeshTerrainWithArcs"
      class="vtkCMBMeshTerrainWithArcs"
      label="Create TINs From Contours">
      <InputProperty
         name="Input"
         port_index="0"
         command="AddInputConnection"
         clean_command="RemoveInputConnections"
         multiple_input="1">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
         <DataTypeDomain name="input_type">
             <DataType value="vtkPolyData"/>
           </DataTypeDomain>
        <Documentation>
          This property specifies the contours to extrude
        </Documentation>
      </InputProperty>

      <InputProperty
         name="Source"
         port_index="1"
         command="AddInputConnection"
         clean_command="RemoveSourceConnections"
         multiple_input="1">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
         <DataTypeDomain name="input_type">
             <DataType value="vtkPolyData"/>
           </DataTypeDomain>
        <Documentation>
          This property specifies point sets that represent terrain
        </Documentation>
      </InputProperty>

      <DoubleVectorProperty
        name="VOIBounds"
        command="SetVOIBounds"
        number_of_elements="6"
        default_values="0.0 1.0 0.0 1.0 0.0 1.0">
      </DoubleVectorProperty>

      <DoubleVectorProperty
        name="ElevationRadius"
        command="SetElevationRadius"
        number_of_elements="1"
        default_values="0.0" >
      </DoubleVectorProperty>

      <Property name="RemoveInputConnections" command="RemoveInputConnections">
        </Property>
      <Property name="RemoveSourceConnections" command="RemoveSourceConnections">
      </Property>

    </SourceProxy>
    <SourceProxy name="CmbApplyBathymetry"
        class="vtkCMBApplyBathymetryFilter"
        label="Apply bathymetry to input point sets">
      <InputProperty
         name="Input"
         port_index="0"
         command="AddInputConnection"
         clean_command="RemoveInputConnections">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataSet"/>
        </DataTypeDomain>
        <Documentation>
          This property specifies the input data to apply bathymetry
        </Documentation>
      </InputProperty>

      <InputProperty
         name="Source"
         port_index="1"
         command="AddInputConnection"
         clean_command="RemoveSourceConnections">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataSet"/>
        </DataTypeDomain>
        <Documentation>
          This property specifies point sets that represent bathymetry info
        </Documentation>
      </InputProperty>

      <DoubleVectorProperty
        name="ElevationRadius"
        command="SetElevationRadius"
        number_of_elements="1"
        default_values="1.0" >
      </DoubleVectorProperty>
      <DoubleVectorProperty
        name="HighestZValue"
        command="SetHighestZValue"
        number_of_elements="1"
        default_values="0.0" >
      </DoubleVectorProperty>
      <IntVectorProperty name="UseHighestZValue"
        command="SetUseHighestZValue"
        number_of_elements="1"
        default_values="0" >
        <BooleanDomain name="bool"/>
      </IntVectorProperty>
      <DoubleVectorProperty
        name="LowestZValue"
        command="SetLowestZValue"
        number_of_elements="1"
        default_values="0.0" >
      </DoubleVectorProperty>
      <IntVectorProperty name="UseLowestZValue"
        command="SetUseLowestZValue"
        number_of_elements="1"
        default_values="0" >
        <BooleanDomain name="bool"/>
      </IntVectorProperty>
      <IntVectorProperty name="NoOP"
        command="SetNoOP"
        number_of_elements="1"
        default_values="0" >
        <BooleanDomain name="bool"/>
      </IntVectorProperty>

      <Property name="RemoveInputConnections" command="RemoveInputConnections">
      </Property>
      <Property name="RemoveSourceConnections" command="RemoveSourceConnections">
      </Property>

      <!-- End of CmbApplyBathymetry -->
    </SourceProxy>
    <SourceProxy name="ShepardMethod" class="vtkShepardMethod"
      label="IDW Shepard Method">
      <Documentation
        long_help="Generate an image data with Inverse Distance Weighted shepard method."
        short_help="Inverse Distance Weighted shepard method.">
        vtkShepardMethod is a filter to output an image data with Inverse Distance Weighted shepard method
      </Documentation>
      <InputProperty name="Input" command="SetInputConnection">
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataSet"/>
        </DataTypeDomain>
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <Documentation>
          This property specifies the input data to IDWShepard
        </Documentation>
      </InputProperty>
      <DoubleVectorProperty
           name="ModelBounds"
           label="Model Bounds"
           command="SetModelBounds"
           number_of_elements="6"
           default_values="0.0 0.0 0.0 0.0 0.0 0.0" >
      </DoubleVectorProperty>

      <IntVectorProperty
        name="SampleDimensions"
        command="SetSampleDimensions"
        number_of_elements="3"
        default_values="50 50 50">
        <Documentation>
          Set the i-j-k dimensions on which to sample the distance function.
        </Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty
         name="MaximumDistance"
         command="SetMaximumDistance"
         number_of_elements="1"
         default_values="0.25" >
        <DoubleRangeDomain name="range" min="0.0" max="1.0"/>
        <Documentation>
          Specify influence distance of each input point. This distance is a
          fraction of the length of the diagonal of the sample space. Thus, values
          of 1.0 will cause each input point to influence all points in the
          structured point dataset. Values less than 1.0 can improve performance
          significantly.
        </Documentation>
      </DoubleVectorProperty>
      <!-- End of vtkShepardMethod -->
    </SourceProxy>

   <!-- ==================================================================== -->
   <SourceProxy name="BandedPolyDataContourFilter" class="vtkCMBBandedPolyDataContourFilter" label="Posterize Polydata">
    <Documentation
       long_help="Segment a polygonal mesh according to point scalar isovalues."
       short_help="Segment a polygonal mesh by scalars.">
The Posterize Polydata filter (via vtkBandedPolyDataContourFilter) computes isolines on a polygonal mesh and uses those isolines to subdivide cells into bands -- regions where scalar values are bounded above and below by a pair of consecutive, sorted isovalues from the list you specify. This filter operates on polydata and the input is required to have at least one point-centered scalar (single-component) array. The output of this filter is polygonal.
    </Documentation>
    <InputProperty
       name="Input"
       command="SetInputConnection">
          <ProxyGroupDomain name="groups">
            <Group name="sources"/>
            <Group name="filters"/>
          </ProxyGroupDomain>
          <DataTypeDomain name="input_type">
            <DataType value="vtkPolyData"/>
          </DataTypeDomain>
          <InputArrayDomain name="input_array"
                            number_of_components="1"
                            attribute_type="point"/>
          <Documentation>
            This property specifies the input dataset to be used by the banded polydata contour filter.
          </Documentation>
     </InputProperty>

     <StringVectorProperty
        name="SelectInputScalars"
        command="SetInputArrayToProcess"
        number_of_elements="5"
        element_types="0 0 0 0 2"
        animateable="0"
        label="Contour By">
          <ArrayListDomain name="array_list" attribute_type="Scalars">
            <RequiredProperties>
               <Property name="Input" function="Input"/>
            </RequiredProperties>
          </ArrayListDomain>
           <FieldDataDomain name="field_list">
             <RequiredProperties>
                <Property name="Input" function="Input"/>
             </RequiredProperties>
           </FieldDataDomain>
          <Documentation>
            This property specifies the name of the scalar array whose isocontours are used to segment the polygonal input surface.
          </Documentation>
          <Hints>
            <ShowInSummaryPanel/>
          </Hints>
     </StringVectorProperty>

     <DoubleVectorProperty
        name="ContourValues"
        command="SetValue"
        label="Isosurfaces"
        set_number_command="SetNumberOfContours"
        number_of_elements="0"
        repeat_command="1"
        number_of_elements_per_command="1"
        use_index="1"
        animateable="1">
          <ArrayRangeDomain name="scalar_range">
            <RequiredProperties>
               <Property name="Input" function="Input"/>
               <Property name="SelectInputScalars" function="ArraySelection"/>
            </RequiredProperties>
          </ArrayRangeDomain>
          <Documentation>
            This property specifies the values at which to compute isosurfaces/isolines and also the number of such values.
          </Documentation>
          <Hints>
            <ShowInSummaryPanel/>
          </Hints>
     </DoubleVectorProperty>

     <IntVectorProperty
       name="ScalarMode"
       command="SetScalarMode"
       number_of_elements="1"
       default_values="2" >
       <EnumerationDomain name="enum">
         <Entry value="0" text="Index"/>
         <Entry value="1" text="Value"/>
       </EnumerationDomain>
       <Documentation>
         The scalar mode determines whether output cells are marked with an index into the list of bands between isovalues,
         or with a representative scalar value contained in the band.
       </Documentation>
     </IntVectorProperty>

     <StringVectorProperty
       name="ScalarName"
       command="SetScalarName"
       animateable="0"
       number_of_elements="1">
     </StringVectorProperty>

     <IntVectorProperty
        name="OutputEdges"
        command="SetOutputEdges"
        number_of_elements="1"
        default_values="1"
        animateable="0">
       <EnumerationDomain name="enum">
         <Entry value="0" text="No edges"/>
         <Entry value="1" text="Band edges"/>
         <Entry value="2" text="Band and boundary edges"/>
       </EnumerationDomain>
       <Documentation>
         Which edges should be output in addition to polygons? May be none, those between polygonal bands, and possibly those on the mesh boundary bands.
       </Documentation>
     </IntVectorProperty>

     <IntVectorProperty
        name="Clipping"
        command="SetClipping"
        number_of_elements="1"
        default_values="0"
        animateable="0">
       <BooleanDomain name="bool"/>
       <Documentation>
         When true, the upper and lower bands are omitted, effectively clipping the output so its scalar range is bounded by the range of the specified isovalues. When false, the upper and lower bands are included in the output.

         The upper and lower bands are bounded by an isovalue on one side and an extremal scalar value on the other. If an isovalue above the maximal scalar value is requested, the upper band will never be omitted regardless of this setting. If an isovalue below the minimal scalar value is requested, the lower band will never be omitted regardless of this setting.
       </Documentation>
     </IntVectorProperty>

     <OutputPort name="Bands" index="0"/>
     <OutputPort name="Bandlines" index="1"/>
     <Hints>
       <Visibility replace_input="2" />
       <ShowInMenu category="CMB"/>
     </Hints>

   <!-- End BandedPolyDataContourFilter -->
   </SourceProxy>
   <!-- ==================================================================== -->
   <CompoundSourceProxy name="WaveHeightGenerator" label="Wave Height Generator">
     <Proxy group="filters" type="Calculator" id="2979" servers="1" compound_name="Calculator1">
       <Property name="AttributeMode" id="2979.AttributeMode" number_of_elements="1">
         <Element index="0" value="1"/>
         <Domain name="enum" id="2979.AttributeMode.enum">
           <Entry value="1" text="point_data"/>
           <Entry value="2" text="cell_data"/>
           <Entry value="5" text="field_data"/>
         </Domain>
       </Property>
       <Property name="CoordinateResults" id="2979.CoordinateResults" number_of_elements="1">
         <Element index="0" value="0"/>
         <Domain name="bool" id="2979.CoordinateResults.bool"/>
       </Property>
       <Property name="Function" id="2979.Function" number_of_elements="1">
         <Element index="0" value="10000"/>
       </Property>
       <Property name="Input" id="2979.Input" number_of_elements="1">
         <Domain name="groups" id="2979.Input.groups"/>
         <Domain name="input_type" id="2979.Input.input_type"/>
       </Property>
       <Property name="ReplaceInvalidValues" id="2979.ReplaceInvalidValues" number_of_elements="1">
         <Element index="0" value="1"/>
         <Domain name="bool" id="2979.ReplaceInvalidValues.bool"/>
       </Property>
       <Property name="ReplacementValue" id="2979.ReplacementValue" number_of_elements="1">
         <Element index="0" value="0"/>
         <Domain name="range" id="2979.ReplacementValue.range"/>
       </Property>
       <Property name="ResultArrayName" id="2979.ResultArrayName" number_of_elements="1">
         <Element index="0" value="FetchLength"/>
       </Property>
     </Proxy>
     <Proxy group="filters" type="Calculator" id="2990" servers="1" compound_name="Calculator2">
       <Property name="AttributeMode" id="2990.AttributeMode" number_of_elements="1">
         <Element index="0" value="1"/>
         <Domain name="enum" id="2990.AttributeMode.enum">
           <Entry value="1" text="point_data"/>
           <Entry value="2" text="cell_data"/>
           <Entry value="5" text="field_data"/>
         </Domain>
       </Property>
       <Property name="CoordinateResults" id="2990.CoordinateResults" number_of_elements="1">
         <Element index="0" value="0"/>
         <Domain name="bool" id="2990.CoordinateResults.bool"/>
       </Property>
       <Property name="Function" id="2990.Function" number_of_elements="1">
         <Element index="0" value="9.5"/>
       </Property>
       <Property name="Input" id="2990.Input" number_of_elements="1">
         <Proxy value="2979" output_port="0"/>
         <Domain name="groups" id="2990.Input.groups"/>
         <Domain name="input_type" id="2990.Input.input_type"/>
       </Property>
       <Property name="ReplaceInvalidValues" id="2990.ReplaceInvalidValues" number_of_elements="1">
         <Element index="0" value="1"/>
         <Domain name="bool" id="2990.ReplaceInvalidValues.bool"/>
       </Property>
       <Property name="ReplacementValue" id="2990.ReplacementValue" number_of_elements="1">
         <Element index="0" value="0"/>
         <Domain name="range" id="2990.ReplacementValue.range"/>
       </Property>
       <Property name="ResultArrayName" id="2990.ResultArrayName" number_of_elements="1">
         <Element index="0" value="WindSpeed"/>
       </Property>
     </Proxy>
     <Proxy group="filters" type="Calculator" id="3001" servers="1" compound_name="Calculator3">
       <Property name="AttributeMode" id="3001.AttributeMode" number_of_elements="1">
         <Element index="0" value="1"/>
         <Domain name="enum" id="3001.AttributeMode.enum">
           <Entry value="1" text="point_data"/>
           <Entry value="2" text="cell_data"/>
           <Entry value="5" text="field_data"/>
         </Domain>
       </Property>
       <Property name="CoordinateResults" id="3001.CoordinateResults" number_of_elements="1">
         <Element index="0" value="0"/>
         <Domain name="bool" id="3001.CoordinateResults.bool"/>
       </Property>
       <Property name="Function" id="3001.Function" number_of_elements="1">
         <Element index="0" value="if (Depth &#x3c; 0.001, 0.0, ((WindSpeed^2)/9.8)*0.283*tanh(0.53*((9.8*Depth)/(WindSpeed^2))^0.75)*tanh((0.0125*(9.8*FetchLength/(WindSpeed^2))^0.42)/tanh(0.53*(9.8*Depth/(WindSpeed^2))^0.75)))"/>
       </Property>
       <Property name="Input" id="3001.Input" number_of_elements="1">
         <Proxy value="2990" output_port="0"/>
         <Domain name="groups" id="3001.Input.groups"/>
         <Domain name="input_type" id="3001.Input.input_type"/>
       </Property>
       <Property name="ReplaceInvalidValues" id="3001.ReplaceInvalidValues" number_of_elements="1">
         <Element index="0" value="1"/>
         <Domain name="bool" id="3001.ReplaceInvalidValues.bool"/>
       </Property>
       <Property name="ReplacementValue" id="3001.ReplacementValue" number_of_elements="1">
         <Element index="0" value="0"/>
         <Domain name="range" id="3001.ReplacementValue.range"/>
       </Property>
       <Property name="ResultArrayName" id="3001.ResultArrayName" number_of_elements="1">
         <Element index="0" value="WaveHeight"/>
       </Property>
     </Proxy>
     <ExposedProperties>
       <Property name="Function" proxy_name="Calculator2" exposed_name="WindSpeed"/>
       <Property name="Input" proxy_name="Calculator1" exposed_name="Input"/>
       <Property name="Function" proxy_name="Calculator1" exposed_name="FetchLength"/>
       <Property name="Function" proxy_name="Calculator3" exposed_name="WaveHeight"/>
     </ExposedProperties>
     <OutputPort name="Output" proxy="Calculator3" port_index="0"/>
     <Hints>
      <ShowInMenu category="CMB"/>
     </Hints>
   </CompoundSourceProxy>
   <!-- ==================================================================== -->
    <CompoundSourceProxy name="LangrangeBasedObjFunc" label="Langrange-Based Objective Func">
      <Proxy group="filters" type="Calculator" id="5641" servers="1" compound_name="Langrane Obj">
        <Property name="AttributeMode" id="5641.AttributeMode" number_of_elements="1">
          <Element index="0" value="1"/>
          <Domain name="enum" id="5641.AttributeMode.enum">
            <Entry value="1" text="point_data"/>
            <Entry value="2" text="cell_data"/>
            <Entry value="5" text="field_data"/>
          </Domain>
        </Property>
        <Property name="CoordinateResults" id="5641.CoordinateResults" number_of_elements="1">
          <Element index="0" value="0"/>
          <Domain name="bool" id="5641.CoordinateResults.bool"/>
        </Property>
        <Property name="Function" id="5641.Function" number_of_elements="1">
          <Element index="0" value="max(WaveHeight/.6, mag(Overland Velocity)-.5)"/>
        </Property>
        <Property name="Input" id="5641.Input" number_of_elements="1">
          <Domain name="groups" id="5641.Input.groups"/>
          <Domain name="input_type" id="5641.Input.input_type"/>
        </Property>
        <Property name="ReplaceInvalidValues" id="5641.ReplaceInvalidValues" number_of_elements="1">
          <Element index="0" value="1"/>
          <Domain name="bool" id="5641.ReplaceInvalidValues.bool"/>
        </Property>
        <Property name="ReplacementValue" id="5641.ReplacementValue" number_of_elements="1">
          <Element index="0" value="0"/>
          <Domain name="range" id="5641.ReplacementValue.range"/>
        </Property>
        <Property name="ResultArrayName" id="5641.ResultArrayName" number_of_elements="1">
          <Element index="0" value="LagrangeObjFunc"/>
        </Property>
      </Proxy>
      <ExposedProperties>
        <Property name="Function" proxy_name="Langrane Obj" exposed_name="Function"/>
        <Property name="Input" proxy_name="Langrane Obj" exposed_name="Input"/>
      </ExposedProperties>
      <OutputPort name="Output" proxy="Langrane Obj" port_index="0"/>
      <Hints>
      <ShowInMenu category="CMB"/>
      </Hints>
    </CompoundSourceProxy>
   <!-- ==================================================================== -->

    <CompoundSourceProxy name="SampleFunction" label="Sample Function">
      <Proxy group="filters" type="Calculator" id="6118" servers="1" compound_name="Calculator5">
        <Property name="AttributeMode" id="6118.AttributeMode" number_of_elements="1">
          <Element index="0" value="1"/>
          <Domain name="enum" id="6118.AttributeMode.enum">
            <Entry value="1" text="point_data"/>
            <Entry value="2" text="cell_data"/>
            <Entry value="5" text="field_data"/>
          </Domain>
        </Property>
        <Property name="CoordinateResults" id="6118.CoordinateResults" number_of_elements="1">
          <Element index="0" value="0"/>
          <Domain name="bool" id="6118.CoordinateResults.bool"/>
        </Property>
        <Property name="Function" id="6118.Function" number_of_elements="1">
          <Element index="0" value="max(10^5*(WaveHeight-0.6), 0) + max(10^5 *(mag(Overland Velocity)-1.5), 0) + max(10*(WaveHeight-.3), 0) + max(10*(mag(Overland Velocity)-1), 0)"/>
        </Property>
        <Property name="Input" id="6118.Input" number_of_elements="1">
          <Domain name="groups" id="6118.Input.groups"/>
          <Domain name="input_type" id="6118.Input.input_type"/>
        </Property>
        <Property name="ReplaceInvalidValues" id="6118.ReplaceInvalidValues" number_of_elements="1">
          <Element index="0" value="1"/>
          <Domain name="bool" id="6118.ReplaceInvalidValues.bool"/>
        </Property>
        <Property name="ReplacementValue" id="6118.ReplacementValue" number_of_elements="1">
          <Element index="0" value="0"/>
          <Domain name="range" id="6118.ReplacementValue.range"/>
        </Property>
        <Property name="ResultArrayName" id="6118.ResultArrayName" number_of_elements="1">
          <Element index="0" value="StacyObjFunc"/>
        </Property>
      </Proxy>
      <ExposedProperties>
        <Property name="Input" proxy_name="Calculator5" exposed_name="Input"/>
        <Property name="Function" proxy_name="Calculator5" exposed_name="Objective Function"/>
      </ExposedProperties>
      <OutputPort name="Output" proxy="Calculator5" port_index="0"/>
      <Hints>
      <ShowInMenu category="CMB"/>
      </Hints>
    </CompoundSourceProxy>
  </ProxyGroup>
   <!-- ==================================================================== -->

  <ProxyGroup name="representations">
    <RepresentationProxy name="CmbPolylineRepresentation"
                          class="vtkCMBPolylineRepresentation"
                          processes="client|renderserver|dataserver"
                          base_proxygroup="internal_representations"
                          base_proxyname="SurfaceRepresentationBase" >
      <Documentation>
        Representation to show the polyline Representation in a vtkPVRenderView.
      </Documentation>

      <InputProperty name="Input" command="SetInputConnection">
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataSet"/>
        </DataTypeDomain>
        <Documentation>
          Set the input to the representation.
        </Documentation>
      </InputProperty>

      <!-- End of CmbPolylineRepresentation -->
    </RepresentationProxy>

  </ProxyGroup>

  <ProxyGroup name="writers">
    <WriterProxy name="CMBWriter"
      class="vtkCMBWriter"
      label="CMB data writer">
      <Documentation
        short_help="Write a CMB file."
        long_help="Write a CMB file.">
      </Documentation>
      <InputProperty name="Input" command="SetInputConnection">
        <DataTypeDomain name="input_type" composite_data_supported="1">
          <DataType value="vtkMultiBlockDataSet" />
        </DataTypeDomain>
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <Documentation>
          The input filter/source whose output dataset is to written to the
          file.
        </Documentation>
      </InputProperty>
      <StringVectorProperty
        name="FileName"
        command="SetFileName"
        animateable="0"
        number_of_elements="1">
        <Documentation>
          This property specifies the file name for the writer.
        </Documentation>
      </StringVectorProperty>

    </WriterProxy>
    <WriterProxy name="GAMBITWriter"
      class="vtkGAMBITWriter"
      label="GAMBIT geometry writer">
      <Documentation
        short_help="Write a GAMBIT file."
        long_help="Write a GAMBIT file of polydata or of an unstructured grid.">
      </Documentation>
      <InputProperty name="Input" command="SetInputConnection">
        <DataTypeDomain name="input_type" composite_data_supported="1">
          <DataType value="vtkDataObject" />
        </DataTypeDomain>
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <Documentation>
          The input filter/source whose output dataset is to written to the
          file.
        </Documentation>
      </InputProperty>
      <StringVectorProperty
        name="FileName"
        command="SetFileName"
        animateable="0"
        number_of_elements="1">
        <Documentation>
          This property specifies the file name for the writer.
        </Documentation>
      </StringVectorProperty>
      <Hints>
        <WriterFactory extensions="neu"
           file_description="GAMBIT Files"/>
      </Hints>

    </WriterProxy>

    <WriterProxy name="XMLBCSWriter"
      class="vtkXMLBCSWriter"
      label="XML BCS data writer">
      <Documentation
        short_help="Write a BCS file from CMB in XML format."
        long_help="Write a BCS file from CMB in XML format.">
      </Documentation>
      <InputProperty name="Input" command="SetInputConnection">
        <DataTypeDomain name="input_type" composite_data_supported="1">
          <DataType value="vtkMultiBlockDataSet" />
        </DataTypeDomain>
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <Documentation>
          The input filter/source whose output dataset is to written to the
          file.
        </Documentation>
      </InputProperty>
      <StringVectorProperty
        name="FileName"
        command="SetFileName"
        animateable="0"
        number_of_elements="1">
        <Documentation>
          This property specifies the file name for the writer.
        </Documentation>
      </StringVectorProperty>

    </WriterProxy>

    <WriterProxy name="LIDARWriter"
      class="vtkLIDARPtsWriter"
      label="LIDAR Pts Writer">
      <Documentation
        short_help="Write LIDAR pts file">
        long_help="Read a file of format (pts bin.pts or bin) for LIDAR object"
      </Documentation>
      <InputProperty
        name="Input"
        command="AddInputConnection"
        clean_command="RemoveAllInputs"
        multiple_input="1">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkPolyData"/>
        </DataTypeDomain>
        <Documentation>
          Add input to the LIDAR writer.
        </Documentation>
      </InputProperty>

      <IntVectorProperty name="WriteAsSinglePiece"
        command="SetWriteAsSinglePiece"
        number_of_elements="1"
        default_values="0" >
        <BooleanDomain name="bool"/>
      </IntVectorProperty>

      <StringVectorProperty
        name="FileName"
        command="SetFileName"
        animateable="0"
        number_of_elements="1">
        <FileListDomain name="files"/>
        <Documentation>
          This property specifies the output file name for the writer.
        </Documentation>
      </StringVectorProperty>

      <IntVectorProperty
        name="AbortExecute"
        command="SetAbortExecute"
        number_of_elements="1"
        default_values="0" >
        <BooleanDomain name="bool"/>
        <Documentation>
          vtkAlgorithm::SetAbortExecute()
        </Documentation>
      </IntVectorProperty>

    </WriterProxy>

    <WriterProxy name="XMLContourWriter"
      class="vtkXMLPMultiBlockDataWriter"
      label="Contour Group writer">
      <Documentation
        short_help="Write a multi-block contour group file."
        long_help="Write a multi-block contour group file.">
      </Documentation>
      <InputProperty name="Input" command="SetInputConnection">
        <DataTypeDomain name="input_type" composite_data_supported="1">
          <DataType value="vtkMultiBlockDataSet" />
        </DataTypeDomain>
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <Documentation>
          The input filter/source whose output dataset is to written to the
          file.
        </Documentation>
      </InputProperty>
      <StringVectorProperty
        name="FileName"
        command="SetFileName"
        animateable="0"
        number_of_elements="1">
        <Documentation>
          This property specifies the file name for the writer.
        </Documentation>
      </StringVectorProperty>

    </WriterProxy>

    <WriterProxy name="CMBMeshWriter"
       class="vtkCMBMeshWriter"
       label="CMB Mesh Writer">
      <Documentation short_help="Write geometry as an CMB ADH, PT123, WASH123D, or XMS mesh file.">
        Write unstructured grid compatiable geometery data as an CMB ADH, PT123, WASH123D, or XMS mesh file.
      </Documentation>

      <InputProperty name="Input"
         command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkPolyData"/>
          <DataType value="vtkStructuredGrid"/>
          <DataType value="vtkUnstructuredGrid"/>
        </DataTypeDomain>
        <InputArrayDomain name="input_array"
           attribute_type="cell"
           number_of_components="1"
           optional="1"/>
      </InputProperty>

      <StringVectorProperty name="FileName"
         command="SetFileName"
         number_of_elements="1">
        <FileListDomain name="files"/>
      </StringVectorProperty>

      <IntVectorProperty name="FileFormat"
         label="Mesh File Format"
         command="SetFileFormat"
         number_of_elements="1"
         default_values="0">
        <EnumerationDomain name="enum">
          <Entry value="0" text="ADH"/>
          <Entry value="1" text="PT123"/>
          <Entry value="2" text="WASH123D"/>
          <Entry value="3" text="XMS"/>
        </EnumerationDomain>
        <Documentation>
          Select the desired CMB mesh file format.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty name="MeshDimension"
         label="Mesh Dimension"
         command="SetMeshDimension"
         number_of_elements="1"
         default_values="3">
        <EnumerationDomain name="enum">
          <Entry value="1" text="1D"/>
          <Entry value="2" text="2D"/>
          <Entry value="3" text="3D"/>
        </EnumerationDomain>
        <Documentation>
          Select the desired mesh dimension.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty name="ValidateDimension"
         label="Validate Geometry Dimension"
         command="SetValidateDimension"
         number_of_elements="1"
         default_values="1">
        <BooleanDomain name="bool"/>
        <Documentation>
          Validate that mesh geometry elements match specified dimension.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty name="WriteMetaInfo"
         label="Write Geometry Meta Information"
         command="SetWriteMetaInfo"
         number_of_elements="1"
         default_values="1">
        <BooleanDomain name="bool"/>
        <Documentation>
          Write optional mesh geometry meta information.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty name="FloatPrecision"
         label="Floating-point Precision"
         command="SetFloatPrecision"
         number_of_elements="1"
         default_values="6">
        <IntRangeDomain name="Range" min="0" max="10"/>
        <Documentation>
          Set the floating point value precision.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty name="UseScientificNotation"
         label="Use Scientific Notation"
         command="SetUseScientificNotation"
         number_of_elements="1"
         default_values="1">
        <BooleanDomain name="bool"/>
        <Documentation>
          Write floating point values using scientific notation.
        </Documentation>
      </IntVectorProperty>

      <StringVectorProperty name="SelectInputScalars"
         command="SetInputArrayToProcess"
         number_of_elements="5"
         element_types="0 0 0 0 2"
         label="Material/Region IDs">
        <ArrayListDomain name="array_list"
           attribute_type="Scalars"
           data_type="VTK_DATA_ARRAY"
           none_string="None (default IDs to 1)">
          <RequiredProperties>
            <Property name="Input" function="Input"/>
          </RequiredProperties>
        </ArrayListDomain>
        <FieldDataDomain name="field_list">
          <RequiredProperties>
            <Property name="Input" function="Input"/>
          </RequiredProperties>
        </FieldDataDomain>
        <Documentation>
          Select the array which contains material/region values. The PT123 file format does not include material/region and will ignore this.
        </Documentation>
      </StringVectorProperty>

      <Hints>
        <WriterFactory extensions="1dm 2dm 3dm"
           file_description="CMB Mesh Files"/>
      </Hints>

    </WriterProxy>

    <!-- ==================================================================== -->
    <WriterProxy name="CmbPt123VelocityWriter"
       class="vtkCMBPt123VelocityWriter"
       label="PT123 Velocity Writer">
      <Documentation short_help="Write point velocity data in PT123 Format.">
        Write a DataSet's Data Array with 3 components in PT123 format.
        MWF try to allow to write element based as well
      </Documentation>

      <InputProperty name="Input"
         command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataSet"/>
        </DataTypeDomain>
        <InputArrayDomain name="input_array"
           attribute_type="point"
           optional="0"/>
      </InputProperty>

      <StringVectorProperty name="FileName"
         command="SetFileName"
         number_of_elements="1">
        <FileListDomain name="files"/>
      </StringVectorProperty>

      <IntVectorProperty name="FloatPrecision"
         label="Floating-point Precision"
         command="SetFloatPrecision"
         number_of_elements="1"
         default_values="6">
        <IntRangeDomain name="Range" min="0" max="10"/>
        <Documentation>
          Set the floating point value precision.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty name="UseScientificNotation"
         label="Use Scientific Notation"
         command="SetUseScientificNotation"
         number_of_elements="1"
         default_values="1">
        <BooleanDomain name="bool"/>
        <Documentation>
          Write floating point values using scientific notation.
        </Documentation>
      </IntVectorProperty>

      <StringVectorProperty name="SelectInputVectors"
         command="SetInputArrayToProcess"
         number_of_elements="5"
         element_types="0 0 0 0 2"
         label="Velocity">
        <ArrayListDomain name="array_list"
                         data_type="VTK_VOID"
                         attribute_type="Vectors">
          <RequiredProperties>
            <Property name="Input" function="Input"/>
          </RequiredProperties>
        </ArrayListDomain>
        <FieldDataDomain name="field_list">
          <RequiredProperties>
            <Property name="Input" function="Input"/>
          </RequiredProperties>
        </FieldDataDomain>
        <Documentation>
          Select the array which contains the velocity information.
        </Documentation>
      </StringVectorProperty>

      <IntVectorProperty name="WriteCellBased"
         label="Write Cell Based Velocity"
         command="SetWriteCellBased"
         number_of_elements="1"
         default_values="0">
        <BooleanDomain name="bool"/>
        <Documentation>
          Write Velocity in Cell Based Format
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty name="SpatialDimension"
         label="Spatial Dimension (for velocity)"
         command="SetSpatialDimension"
         number_of_elements="1"
         default_values="3">
        <IntRangeDomain name="Range" min="1" max="3"/>
        <Documentation>
          Set the spatial dimension for the velocity field
        </Documentation>
      </IntVectorProperty>

      <Hints>
        <WriterFactory extensions="vn ve"
           file_description="PT 123 Velocity Files"/>
      </Hints>

    </WriterProxy>
    <!-- ==================================================================== -->
    <WriterProxy name="CmbPt123VelocityConversionWriter"
       class="vtkCMBPt123VelocityConversionWriter"
       label="PT123 Velocity Conversion Writer">
      <Documentation short_help="Write point velocity conversion data in PT123 Format.">
        Write a DataSet's Data Array with 1 components in PT123 format.
      </Documentation>

      <InputProperty name="Input"
         command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataSet"/>
        </DataTypeDomain>
        <InputArrayDomain name="input_array"
           attribute_type="point"
           number_of_components="1"
           optional="0"/>
      </InputProperty>

      <StringVectorProperty name="FileName"
         command="SetFileName"
         number_of_elements="1">
        <FileListDomain name="files"/>
      </StringVectorProperty>

      <IntVectorProperty name="FloatPrecision"
         label="Floating-point Precision"
         command="SetFloatPrecision"
         number_of_elements="1"
         default_values="6">
        <IntRangeDomain name="Range" min="0" max="10"/>
        <Documentation>
          Set the floating point value precision.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty name="UseScientificNotation"
         label="Use Scientific Notation"
         command="SetUseScientificNotation"
         number_of_elements="1"
         default_values="1">
        <BooleanDomain name="bool"/>
        <Documentation>
          Write floating point values using scientific notation.
        </Documentation>
      </IntVectorProperty>

      <StringVectorProperty name="SelectInputVectors"
         command="SetInputArrayToProcess"
         number_of_elements="5"
         element_types="0 0 0 0 2"
         label="Velocity Conversion">
        <ArrayListDomain name="array_list"
                         data_type="VTK_VOID"
                         attribute_type="Scalars">
          <RequiredProperties>
            <Property name="Input" function="Input"/>
          </RequiredProperties>
        </ArrayListDomain>
        <FieldDataDomain name="field_list">
          <RequiredProperties>
            <Property name="Input" function="Input"/>
          </RequiredProperties>
        </FieldDataDomain>
        <Documentation>
          Select the array which contains the scalar information.
        </Documentation>
      </StringVectorProperty>

      <Hints>
        <WriterFactory extensions="nemc"
           file_description="PT 123 Velocity Conversion Files"/>
      </Hints>

    </WriterProxy>
    <!-- ==================================================================== -->
    <WriterProxy name="CmbPt123ElementVelocityConversionWriter"
       class="vtkCMBPt123ElementVelocityConversionWriter"
       label="PT123 Element-based Velocity Conversion Writer">
      <Documentation short_help="Write element-based velocity conversion data in PT123 Format.">
        Write a DataSet's Data Array with 1 components in PT123 format for elements.
      </Documentation>

      <InputProperty name="Input"
         command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataSet"/>
        </DataTypeDomain>
        <InputArrayDomain name="input_array"
           attribute_type="cell"
           number_of_components="1"
           optional="0"/>
      </InputProperty>

      <StringVectorProperty name="FileName"
         command="SetFileName"
         number_of_elements="1">
        <FileListDomain name="files"/>
      </StringVectorProperty>

      <IntVectorProperty name="FloatPrecision"
         label="Floating-point Precision"
         command="SetFloatPrecision"
         number_of_elements="1"
         default_values="6">
        <IntRangeDomain name="Range" min="0" max="10"/>
        <Documentation>
          Set the floating point value precision.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty name="UseScientificNotation"
         label="Use Scientific Notation"
         command="SetUseScientificNotation"
         number_of_elements="1"
         default_values="1">
        <BooleanDomain name="bool"/>
        <Documentation>
          Write floating point values using scientific notation.
        </Documentation>
      </IntVectorProperty>

      <StringVectorProperty name="SelectInputVectors"
         command="SetInputArrayToProcess"
         number_of_elements="5"
         element_types="0 0 0 0 2"
         label="Velocity Conversion">
        <ArrayListDomain name="array_list"
                         data_type="VTK_VOID"
                         attribute_type="Scalars">
          <RequiredProperties>
            <Property name="Input" function="Input"/>
          </RequiredProperties>
        </ArrayListDomain>
        <FieldDataDomain name="field_list">
          <RequiredProperties>
            <Property name="Input" function="Input"/>
          </RequiredProperties>
        </FieldDataDomain>
        <Documentation>
          Select the array which contains the scalar information.
        </Documentation>
      </StringVectorProperty>

      <Hints>
        <WriterFactory extensions="eemc"
           file_description="PT 123 Element Velocity Conversion Files"/>
      </Hints>

    </WriterProxy>
    <!-- ==================================================================== -->
    <WriterProxy name="CmbPt123PointsWriter"
       class="vtkCMBPt123PointsWriter"
       label="PT123 Particles Writer">
      <Documentation short_help="Write particle data in PT123 Format.">
        Write a DataSet's Points and Data Array with 1 components in PT123 format.
      </Documentation>

      <InputProperty name="Input"
         command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataSet"/>
        </DataTypeDomain>
        <InputArrayDomain name="input_array"
           attribute_type="point"
           number_of_components="1"
           optional="0"/>
      </InputProperty>

      <StringVectorProperty name="FileName"
         command="SetFileName"
         number_of_elements="1">
        <FileListDomain name="files"/>
      </StringVectorProperty>

      <StringVectorProperty name="Header"
         command="SetHeader"
         number_of_elements="1">
        <Documentation>
          Allows an optional header to be written at the top of the file.
        </Documentation>
      </StringVectorProperty>

      <IntVectorProperty name="FloatPrecision"
         label="Floating-point Precision"
         command="SetFloatPrecision"
         number_of_elements="1"
         default_values="6">
        <IntRangeDomain name="Range" min="0" max="10"/>
        <Documentation>
          Set the floating point value precision.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty name="UseScientificNotation"
         label="Use Scientific Notation"
         command="SetUseScientificNotation"
         number_of_elements="1"
         default_values="1">
        <BooleanDomain name="bool"/>
        <Documentation>
          Write floating point values using scientific notation.
        </Documentation>
      </IntVectorProperty>

      <StringVectorProperty name="SelectInputVectors"
         command="SetInputArrayToProcess"
         number_of_elements="5"
         element_types="0 0 0 0 2"
         label="Classification Array">
        <ArrayListDomain name="array_list"
                         data_type="VTK_ID_TYPE"
                         attribute_type="Scalars">
          <RequiredProperties>
            <Property name="Input" function="Input"/>
          </RequiredProperties>
        </ArrayListDomain>
        <FieldDataDomain name="field_list">
          <RequiredProperties>
            <Property name="Input" function="Input"/>
          </RequiredProperties>
        </FieldDataDomain>
        <Documentation>
          Select the array which contains the scalar information.
        </Documentation>
      </StringVectorProperty>

      <Hints>
        <WriterFactory extensions="pt"
           file_description="PT 123 Particle Files"/>
      </Hints>

    </WriterProxy>
    <!-- ==================================================================== -->
    <WriterProxy name="CmbPtsWriter"
       class="vtkCMBPtsWriter"
       label="CMB PTS Points Writer">
      <Documentation short_help="Write point data in PTS Format.">
        Write a DataSet's Points in PTS format.
      </Documentation>

      <InputProperty name="Input"
         command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataSet"/>
        </DataTypeDomain>
      </InputProperty>

      <StringVectorProperty name="FileName"
         command="SetFileName"
         number_of_elements="1">
        <FileListDomain name="files"/>
      </StringVectorProperty>
      <!--
      <StringVectorProperty name="Header"
                            command="SetHeader"
                            number_of_elements="1">
        <Documentation>
          Allows an optional header to be written at the top of the file.
        </Documentation>
      </StringVectorProperty>
      -->

      <IntVectorProperty name="FloatPrecision"
         label="Floating-point Precision"
         command="SetFloatPrecision"
         number_of_elements="1"
         default_values="6">
        <IntRangeDomain name="Range" min="0" max="10"/>
        <Documentation>
          Set the floating point value precision.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty name="UseScientificNotation"
         label="Use Scientific Notation"
         command="SetUseScientificNotation"
         number_of_elements="1"
         default_values="1">
        <BooleanDomain name="bool"/>
        <Documentation>
          Write floating point values using scientific notation.
        </Documentation>
      </IntVectorProperty>

      <Hints>
        <WriterFactory extensions="pts"
           file_description="CMB Point PTS Files"/>
      </Hints>

    </WriterProxy>
    <!-- ==================================================================== -->
    <WriterProxy name="CMBHotStartWriter"
      class="vtkADHHotStartWriter"
      label="CMB Hot Start File Writer">
      <Documentation
        short_help="Write an CMB Hot Start file."
        long_help="Write an CMB Hot Start file.">
      </Documentation>
      <InputProperty name="Input" command="SetInputConnection">
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataObject" />
        </DataTypeDomain>
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <InputArrayDomain name="input_array_point"
           attribute_type="point"
           optional="0"/>
        <Documentation>
          The input filter/source, the selected point arrays of whose output
          dataset are to be written to the file.
        </Documentation>
      </InputProperty>
      <StringVectorProperty
        name="FileName"
        command="SetFileName"
        animateable="0"
        number_of_elements="1">
        <Documentation>
          This property specifies the hot start file name for the writer.
        </Documentation>
      </StringVectorProperty>
      <StringVectorProperty
        name="SelectPointArrays"
        command="AddInputPointArrayToProcess"
        clean_command="ClearInputPointArrayToProcess"
        number_of_elements="1"
        repeat_command="1">
        <ArrayListDomain name="array_list"
          data_type="VTK_DATA_ARRAY"
          attribute_type="any"
          input_domain_name="input_array_point">
          <RequiredProperties>
            <Property name="Input" function="Input"/>
          </RequiredProperties>
        </ArrayListDomain>
        <Hints>
          <NoDefault />
        </Hints>
        <Documentation>
          This property specifies the point arrays the writer will use to
          write out the hot start file.
        </Documentation>
      </StringVectorProperty>
      <Hints>
        <WriterFactory extensions="hot"
           file_description="CMB Hot Start Files"/>
      </Hints>

    </WriterProxy>
    <!-- ==================================================================== -->

    <WriterProxy name="SceneGenV2ContourWriter"
      class="vtkSceneGenV2ContourWriter"
      label="Scene Contour Writer">
      <Documentation
        long_help="Write out all contours in a scene.">
      </Documentation>
      <StringVectorProperty
        name="FileName"
        command="SetFileName"
        animateable="0"
        number_of_elements="1">
        <FileListDomain name="files"/>
        <Documentation>
          This property specifies the file name for the reader.
        </Documentation>
      </StringVectorProperty>

      <InputProperty
         name="Input"
         command="AddInputConnection"
         clean_command="RemoveAllInputs"
         multiple_input="1">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
         <DataTypeDomain name="input_type" composite_data_supported="1">
             <DataType value="vtkDataObject"/>
           </DataTypeDomain>
        <Documentation>
          This property specifies the input dataset to write as a contour collection
        </Documentation>
      </InputProperty>
      <Hints>
        <WriterFactory extensions="vtp"
           file_description="Scene Builder Contour Files"/>
      </Hints>
    </WriterProxy>
    <!-- ==================================================================== -->

  </ProxyGroup>

  <ProxyGroup name="utilities">

    <Proxy name="MeshServerLauncher"
           class="vtkCMBMeshServerLauncher"
           processes="dataserver"
           >
      <Property name="LaunchServer" command="Launch">
      </Property>

      <Property name="Terminate" command="Terminate">
      </Property>

      <IntVectorProperty name="IsAlive"
        command="IsAlive"
        number_of_elements="1"
        default_values="0"
        information_only="1" >
        <SimpleIntInformationHelper/>
      </IntVectorProperty>

      <IntVectorProperty name="PortNumber"
        command="GetPortNumber"
        number_of_elements="1"
        default_values="0"
        information_only="1" >
        <SimpleIntInformationHelper/>
      </IntVectorProperty>

      <StringVectorProperty name="HostName"
        command="GetHostName"
        repeat_command="0"
        number_of_elements="1"
        information_only="1"
        default_values="0">
        <SimpleStringInformationHelper/>
      </StringVectorProperty>
    </Proxy>


    <Proxy name="ProjectManager" class="vtkCMBProjectManager">
      <IntVectorProperty name="Active"
        command="GetManagerActive"
        number_of_elements="1"
        default_values="1"
        information_only="1" >
        <SimpleIntInformationHelper/>
      </IntVectorProperty>

      <StringVectorProperty name="ProjectFile"
        command="GetProjectFilePath"
        repeat_command="0"
        number_of_elements="1"
        information_only="1"
        default_values="">
        <SimpleStringInformationHelper/>
      </StringVectorProperty>

      <!-- active program commands -->
      <IntVectorProperty
        name="ActiveProgram"
        command="SetActiveProgram"
        immediate_update="1"
        animateable="0"
        number_of_elements="1"
        default_values="0">
      </IntVectorProperty>

      <StringVectorProperty name="ActiveProgramDirectory"
        command="GetActiveProgramDirectory"
        repeat_command="0"
        number_of_elements="1"
        information_only="1"
        default_values="">
        <SimpleStringInformationHelper/>
      </StringVectorProperty>
      <StringVectorProperty name="ActiveDefaultProgramDirectory"
        command="GetActiveDefaultProgramDirectory"
        repeat_command="0"
        number_of_elements="1"
        information_only="1"
        default_values="">
        <SimpleStringInformationHelper/>
      </StringVectorProperty>
      <StringVectorProperty name="SetActiveProgramDirectory"
        command="SetActiveProgramDirectory"
        repeat_command="0"
        immediate_update="1"
        number_of_elements="1"
        default_values="">
      </StringVectorProperty>
     <Property name="ResetProject" command="ResetProjectManager">
     </Property>
    </Proxy>

    <Proxy name="ProjectManagerReader" class="vtkCMBProjectManagerReader">
      <Property name="ReadProjectFile" command="ReadProjectFile">
      </Property>

      <StringVectorProperty
        name="ProjectFile"
        command="SetProjectFileName"
        animateable="0"
        number_of_elements="1">
      </StringVectorProperty>
    </Proxy>

    <Proxy name="ProjectManagerWriter" class="vtkCMBProjectManagerWriter">
      <Property name="WriteProjectFile" command="WriteProjectFile">
      </Property>

      <StringVectorProperty
        name="ProjectFile"
        command="SetProjectFileName"
        animateable="0"
        number_of_elements="1">
      </StringVectorProperty>
    </Proxy>

  </ProxyGroup>

  <ProxyGroup name="props">

    <Proxy name="ContourRepresentationBase" class="not-used">
      <Documentation>
        Defines interface defined by vtkContourRepresentation. Don't instantiate directly.
      </Documentation>

      <IntVectorProperty name="Visibility"
        command="SetVisibility"
        number_of_elements="1"
        default_values="1"
        animateable="1">
        <BooleanDomain name="bool" />
      </IntVectorProperty>

      <DoubleVectorProperty name="PlaceWidget"
        command="PlaceWidget"
        number_of_elements="6"
        argument_is_array="1"
        default_values="none">
        <DoubleRangeDomain name="range"/>
      </DoubleVectorProperty>

      <DoubleVectorProperty name="PlaceFactor"
        command="SetPlaceFactor"
        number_of_elements="1"
        default_values="1.0">
        <DoubleRangeDomain name="range" min="0.01" />
      </DoubleVectorProperty>

      <IntVectorProperty name="ClosedLoop"
        command="SetClosedLoop"
        number_of_elements="1"
        default_values="0">
        <BooleanDomain name="bool" />
      </IntVectorProperty>

      <IntVectorProperty
         name="ClosedLoopInfo"
         command="GetClosedLoop"
         number_of_elements="1"
         information_only="1"
         default_values="0">
        <SimpleIntInformationHelper/>
      </IntVectorProperty>

      <ProxyProperty
        name="PointPlacer"
        command="SetPointPlacer">
        <ProxyGroupDomain name="groups">
          <Group name="point_placers" />
        </ProxyGroupDomain>
      </ProxyProperty>

      <ProxyProperty
        name="LineInterpolator"
        command="SetLineInterpolator">
        <ProxyGroupDomain name="groups">
          <Group name="contour_line_interpolators" />
        </ProxyGroupDomain>
      </ProxyProperty>

      <DoubleVectorProperty
        name="NodePositions"
        command="AddNodeAtWorldPosition"
        repeat_command="1"
        number_of_elements_per_command="3">
      </DoubleVectorProperty>

      <IntVectorProperty
        name="SelectNodes"
        command="SetNthNodeSelected"
        repeat_command="1"
        number_of_elements_per_command="1">
      </IntVectorProperty>

      <IntVectorProperty name="ShowSelectedNodes"
        command="SetShowSelectedNodes"
        number_of_elements="1"
        default_values="1">
        <BooleanDomain name="bool" />
      </IntVectorProperty>

      <Property name="ClearAllNodes" command="ClearAllNodes" />

      <!-- End of ContourRepresentationBase -->
    </Proxy>


    <ImplicitPlaneRepresentationProxy name="CmbImplicitPlaneRepresentation" class="vtkCMBImplicitPlaneRepresentation"
           base_proxygroup="3d_widget_representations" base_proxyname="ImplicitPlaneRepresentation">
      <IntVectorProperty name="NormalFixed"
        command="SetNormalFixed"
        number_of_elements="1"
        default_values="1">
        <BooleanDomain name="bool" />
      </IntVectorProperty>
    </ImplicitPlaneRepresentationProxy>

    <Proxy name="OrientedGlyphContourRepresentation2" class="vtkOrientedGlyphContourRepresentation2"
           base_proxygroup="props" base_proxyname="ContourRepresentationBase">
      <Documentation>
        Proxy for vtkOrientedGlyphContourRepresentation. Don't use directly since it's not
        coupled with the widget. Use "ContourWidgetRepresentation" instead which
        include this representation as well as the widget to modify the
        representation.
      </Documentation>

      <DoubleVectorProperty name="LineColor"
        command="SetLineColor"
        number_of_elements="3"
        default_values="1.0 1.0 1.0">
        <DoubleRangeDomain name="range" min="0 0 0" max="1 1 1" />
      </DoubleVectorProperty>

      <IntVectorProperty name="AlwaysOnTop"
        command="SetAlwaysOnTop"
	number_of_elements="1"
        default_values="0">
	<BooleanDomain name="bool" />
      </IntVectorProperty>

       <IntVectorProperty name="EnableLogging"
        command="SetLoggingEnabled"
        number_of_elements="1"
        default_values="0">
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <Hints>
        <!-- View can be used to specify the way to get the poly data for the representation -->
        <Output />
      </Hints>
      <!-- End of OrientedGlyphContourRepresentation -->
    </Proxy>

    <Proxy name="CmbArcWidgetRepresentation" class="vtkCMBArcWidgetRepresentation"
           base_proxygroup="props" base_proxyname="ContourRepresentationBase">
      <Documentation>
        Proxy for vtkCMBArcWidgetRepresentation. Don't use directly since it's not
        coupled with the widget. Use "ArcWidgetRepresentation" instead which
        include this representation as well as the widget to modify the
        representation.
      </Documentation>

      <DoubleVectorProperty name="LineColor"
        command="SetLineColor"
        number_of_elements="3"
        default_values="1.0 1.0 1.0">
        <DoubleRangeDomain name="range" min="0 0 0" max="1 1 1" />
      </DoubleVectorProperty>

      <IntVectorProperty name="AlwaysOnTop"
        command="SetAlwaysOnTop"
        number_of_elements="1"
        default_values="0">
        <BooleanDomain name="bool" />
      </IntVectorProperty>

       <IntVectorProperty name="EnableLogging"
        command="SetLoggingEnabled"
        number_of_elements="1"
        default_values="0">
        <BooleanDomain name="bool" />
      </IntVectorProperty>

       <IntVectorProperty name="CanEdit"
        command="GetCanEdit"
        number_of_elements="1"
        information_only="1"
        default_values="0">
        <SimpleIntInformationHelper/>
      </IntVectorProperty>

      <Property
        name="Rectangularize"
        command="Rectangularize">
      </Property>

      <Hints>
        <!-- View can be used to specify the way to get the poly data for the representation -->
        <Output />
      </Hints>
      <!-- End of CmbArcWidgetRepresentation -->
    </Proxy>

  </ProxyGroup>
  <ProxyGroup name="representations">
    <!-- ================================================================== -->
    <NewWidgetRepresentationProxy name="CmbPlaneWidgetRepresentation"
      class="vtk3DWidgetRepresentation" >

      <IntVectorProperty name="Enabled"
        command="SetEnabled"
        number_of_elements="1"
        default_values="0">
        <BooleanDomain name="bool"/>
        <Documentation>
          Enable/Disable widget interaction.
        </Documentation>
      </IntVectorProperty>

      <SubProxy>
        <Proxy name="Prop"
          proxygroup="props"
          proxyname="CmbImplicitPlaneRepresentation">
        </Proxy>
        <ExposedProperties>
          <Property name="NormalFixed" />
          <Property name="DrawPlane" />
          <Property name="OriginInfo" />
          <Property name="Origin" />
          <Property name="NormalInfo" />
          <Property name="Normal" />
          <Property name="PlaceWidget" />
          <Property name="Visibility" />
          <Property name="PlaceFactor" />
        </ExposedProperties>
      </SubProxy>

      <SubProxy>
        <Proxy name="Widget"
          proxygroup="3d_widgets" proxyname="ImplicitPlaneWidget2">
        </Proxy>
      </SubProxy>
    </NewWidgetRepresentationProxy>

    <NewWidgetRepresentationProxy name="ContourWidgetRepresentation2"
    class="vtk3DWidgetRepresentation">
      <Documentation>
        Representation proxy for the the Contour widget. This includes the
        widget/representation proxies for the sphere 3D widget.
      </Documentation>

      <IntVectorProperty name="Enabled"
        command="SetEnabled"
        number_of_elements="1"
        default_values="0">
        <BooleanDomain name="bool"/>
        <Documentation>
          Enable/Disable widget interaction.
        </Documentation>
      </IntVectorProperty>

      <SubProxy>
        <Proxy name="Prop"
          proxygroup="props" proxyname="OrientedGlyphContourRepresentation2">
        </Proxy>
        <ExposedProperties>
          <Property name="EnableLogging" />
          <Property name="PlaceWidget" />
          <Property name="Visibility" />
          <Property name="PointPlacer" />
          <Property name="LineInterpolator" />
          <Property name="ClearAllNodes" />
          <Property name="LineColor" />
          <Property name="AlwaysOnTop" />
          <Property name="NodePositions" />
          <Property name="ShowSelectedNodes" />
          <Property name="SelectNodes" />
          <Property name="ClosedLoop" />
        </ExposedProperties>
      </SubProxy>

      <SubProxy>
        <Proxy name="Widget"
          proxygroup="3d_widgets" proxyname="ContourWidget">
        </Proxy>
        <ExposedProperties>
  <!--        <Property name="Enabled" />  -->
          <Property name="CloseLoop" />
          <Property name="WidgetState" />
          <Property name="WidgetStateInfo" />
          <Property name="AllowNodePicking" />
          <Property name="Initialize" />
          <Property name="ProcessEvents"/>
        </ExposedProperties>
      </SubProxy>

      <!-- End of ContourWidgetRepresentation -->
    </NewWidgetRepresentationProxy>

    <NewWidgetRepresentationProxy name="ArcWidgetRepresentation"
    class="vtk3DWidgetRepresentation">
      <Documentation>
        Representation proxy for the the Contour widget. This includes the
        widget/representation proxies for the sphere 3D widget.
      </Documentation>

      <IntVectorProperty name="Enabled"
        command="SetEnabled"
        number_of_elements="1"
        default_values="0">
        <BooleanDomain name="bool"/>
        <Documentation>
          Enable/Disable widget interaction.
        </Documentation>
      </IntVectorProperty>

      <SubProxy>
        <Proxy name="Prop"
          proxygroup="props" proxyname="CmbArcWidgetRepresentation">
        </Proxy>
        <ExposedProperties>
          <Property name="EnableLogging" />
          <Property name="PlaceWidget" />
          <Property name="Visibility" />
          <Property name="PointPlacer" />
          <Property name="LineInterpolator" />
          <Property name="ClearAllNodes" />
          <Property name="LineColor" />
          <Property name="AlwaysOnTop" />
          <Property name="NodePositions" />
          <Property name="ShowSelectedNodes" />
          <Property name="SelectNodes" />
          <Property name="ClosedLoop" />
          <Property name="Rectangularize"/>
        </ExposedProperties>
      </SubProxy>

      <SubProxy>
        <Proxy name="Widget"
          proxygroup="3d_widgets" proxyname="ContourWidget">
        </Proxy>
        <ExposedProperties>
  <!--        <Property name="Enabled" />  -->
          <Property name="CloseLoop" />
          <Property name="WidgetState" />
          <Property name="WidgetStateInfo" />
          <Property name="AllowNodePicking" />
          <Property name="Initialize" />
          <Property name="ProcessEvents"/>
        </ExposedProperties>
      </SubProxy>

      <!-- End of ArcWidgetRepresentation -->
    </NewWidgetRepresentationProxy>

    <PVRepresentationProxy name="CmbArcRepresentation"
                          class="vtkPVCompositeRepresentation"
                          processes="client|renderserver|dataserver"
                          base_proxygroup="internal_representations"
                          base_proxyname="PVRepresentationBase" >
      <Documentation>
        Representation to show polyline.
      </Documentation>
      <!-- this adds to what is already defined in PVRepresentationBase -->
      <RepresentationType subproxy="ArcRepresentation" text="Arc"/>

      <InputProperty name="Input" command="SetInputConnection">
        <DataTypeDomain name="input_type" composite_data_supported="1">
          <DataType value="vtkDataSet"/>
        </DataTypeDomain>
        <Documentation>
          Set the input to the representation.
        </Documentation>
      </InputProperty>

      <SubProxy>
        <Proxy name="ArcRepresentation" proxygroup="representations" proxyname="CmbPolylineRepresentation" />
        <ShareProperties subproxy="SurfaceRepresentation">
          <Exception name="Input" />
          <Exception name="Visibility" />
        </ShareProperties>
      </SubProxy>

      <!-- End of CmbArcRepresentation -->
    </PVRepresentationProxy>

    <!-- ================================================================== -->
    <RepresentationProxy name="CmbLargeTextureSurfaceRepresentation"
                          class="vtkCMBLargeTextureSurfaceRepresentation"
                          processes="client|renderserver|dataserver"
                          base_proxygroup="internal_representations"
                          base_proxyname="SurfaceRepresentationBase">
      <Documentation>
        Representation to show any dataset in a 3D render view.
      </Documentation>

      <InputProperty name="Input" command="SetInputConnection">
       <DataTypeDomain name="input_type">
         <DataType value="vtkDataSet"/>
       </DataTypeDomain>
        <Documentation>
          Set the input to the representation.
        </Documentation>
      </InputProperty>

      <InputProperty name="LargeTextureInput" command="SetInputConnection"
        port_index="1" clean_command="RemoveLargeTextureInput"
        label="Large Texture Input">
        <Documentation>
          Specify the source objects.
        </Documentation>
        <DataTypeDomain name="input_type">
          <DataType value="vtkImageData" />
        </DataTypeDomain>
      </InputProperty>

      <IntVectorProperty name="BackfaceRepresentation"
        command="SetBackfaceRepresentation"
        number_of_elements="1"
        default_values="400">
        <Documentation>
          Choose the representation type for the backface.
        </Documentation>
        <EnumerationDomain name="enum">
          <Entry value="400" text="Follow Frontface" />
          <Entry value="401" text="Cull Backface" />
          <Entry value="402" text="Cull Frontface" />
          <Entry value="0" text="Points" />
          <Entry value="1" text="Wireframe" />
          <Entry value="2" text="Surface" />
          <Entry value="3" text="Surface With Edges" />
        </EnumerationDomain>
      </IntVectorProperty>

      <DoubleVectorProperty name="BackfaceOpacity"
        command="SetBackfaceOpacity"
        number_of_elements="1"
        default_values="1.0">
        <DoubleRangeDomain name="range" min="0" max="1" />
      </DoubleVectorProperty>

      <DoubleVectorProperty name="BackfaceAmbientColor"
        command="SetBackfaceAmbientColor"
        number_of_elements="3"
        default_values="1.0 1.0 1.0">
        <DoubleRangeDomain name="range" min="0 0 0" max="1 1 1" />
      </DoubleVectorProperty>

      <DoubleVectorProperty name="BackfaceDiffuseColor"
        command="SetBackfaceDiffuseColor"
        number_of_elements="3"
        default_values="1.0 1.0 1.0">
        <DoubleRangeDomain name="range" min="0 0 0" max="1 1 1" />
      </DoubleVectorProperty>
    </RepresentationProxy>

    <PVRepresentationProxy name="CmbLargeTextureRepresentation"
                               class="vtkPVCompositeRepresentation"
                               processes="client|renderserver|dataserver">
      <Documentation>
        CMB's default representation for showing large texture of dataset in the
        render view.
      </Documentation>

      <InputProperty name="Input" command="SetInputConnection">
        <DataTypeDomain name="input_type" composite_data_supported="1">
          <DataType value="vtkDataSet"/>
        </DataTypeDomain>
        <Documentation>
          Set the input to the representation.
        </Documentation>
      </InputProperty>

      <IntVectorProperty command="SetVisibility"
                         default_values="1"
                         name="Visibility"
                         number_of_elements="1"
                         panel_visibility="never">
        <BooleanDomain name="bool" />
        <Documentation>Set the visibility for this
        representation.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetForceUseCache"
                         default_values="0"
                         is_internal="1"
                         name="ForceUseCache"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Typically UseCache and CacheKey are updated by the View
        and representations cache based on what the view tells it. However in
        some cases we may want to force a representation to cache irrespective
        of the view (e.g. comparative views). In which case these ivars can up
        set. If ForcedCacheKey is true, it overrides UseCache and CacheKey.
        Instead, ForcedCacheKey is used.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetForcedCacheKey"
                            default_values="none"
                            is_internal="1"
                            name="ForcedCacheKey"
                            number_of_elements="1">
        <DoubleRangeDomain name="range" />
        <Documentation>Typically UseCache and CacheKey are updated by the View
        and representations cache based on what the view tells it. However in
        some cases we may want to force a representation to cache irrespective
        of the view (e.g. comparative views). In which case these ivars can up
        set. If ForcedCacheKey is true, it overrides UseCache and CacheKey.
        Instead, ForcedCacheKey is used.</Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetSelectionVisibility"
                         default_values="1"
                         name="SelectionVisibility"
                         number_of_elements="1"
                         panel_visibility="never">
        <BooleanDomain name="bool" />
        <Documentation>Set the visibility for the selection, if
        any.</Documentation>
      </IntVectorProperty>
      <RepresentationType
        subproxy="OutlineRepresentation" text="Outline"/>
      <RepresentationType
        subproxy="CmbSurfaceRepresentation" text="Points" subtype="Points" />
      <RepresentationType
        subproxy="CmbSurfaceRepresentation" text="Wireframe" subtype="Wireframe" />
      <RepresentationType
        subproxy="CmbSurfaceRepresentation" text="Surface" subtype="Surface" />
      <RepresentationType
        subproxy="CmbSurfaceRepresentation" text="Surface With Edges" subtype="Surface With Edges" />
      <RepresentationType
        subproxy="Glyph3DRepresentation" text="3D Glyphs" subtype="Surface" />

      <StringVectorProperty command="GetRepresentationTypes"
                            information_only="1"
                            name="RepresentationTypesInfo"
                            si_class="vtkSIDataArrayProperty">
        <Documentation>Property that lists the available representation types.
        This is used by the domain for "Representation" to setup the list of
        types available correctly.</Documentation>
      </StringVectorProperty>
      <StringVectorProperty command="SetActiveRepresentation"
                            default_values="Surface"
                            name="Representation"
                            number_of_elements="1"
                            panel_visibility="default"
                            panel_widget="display_representation_selector" >
        <Documentation>Choose the type for the representation.</Documentation>
        <RepresentationTypeDomain name="list">
          <RequiredProperties>
            <Property function="StringList"
                      name="RepresentationTypesInfo" />
            <Property function="Input"
                      name="Input" />
          </RequiredProperties>
        </RepresentationTypeDomain>
      </StringVectorProperty>
      <StringVectorProperty command="SetCellFieldDataArrayName"
                            default_values="vtkOriginalCellIds"
                            name="SelectionCellFieldDataArrayName"
                            number_of_elements="1"
                            panel_visibility="never">
        <ArrayListDomain input_domain_name="input_array_cell"
                         name="array_list">
          <RequiredProperties>
            <Property function="Input" name="Input" />
          </RequiredProperties>
        </ArrayListDomain>
      </StringVectorProperty>
      <StringVectorProperty command="SetPointFieldDataArrayName"
                            default_values="vtkOriginalPointIds"
                            name="SelectionPointFieldDataArrayName"
                            number_of_elements="1"
                            panel_visibility="never">
        <ArrayListDomain input_domain_name="input_array_point"
                         name="array_list">
          <RequiredProperties>
            <Property function="Input" name="Input" />
          </RequiredProperties>
        </ArrayListDomain>
      </StringVectorProperty>

      <SubProxy>
        <Proxy name="CmbSurfaceRepresentation"
          proxygroup="representations"
          proxyname="CmbLargeTextureSurfaceRepresentation">
        </Proxy>
        <ExposedProperties>
          <PropertyGroup panel_visibility="default"
                         panel_widget="ColorEditor"
                         label="Coloring" >
            <Property name="Ambient" />
            <Property name="AmbientColor" />
            <Property name="ColorArrayName" />
            <Property name="Diffuse" />
            <Property name="DiffuseColor" />
            <Property name="LookupTable" />
          </PropertyGroup>

          <PropertyGroup label="Scalar Coloring">
            <Property name="MapScalars"
                      panel_visibility="advanced" />
            <Property name="InterpolateScalarsBeforeMapping"
                      panel_visibility="advanced" />
          </PropertyGroup>

          <Property name="LargeTextureInput" />

          <PropertyGroup label="Styling">
            <Property name="Opacity"
                      panel_visibility="default" />
            <Property name="PointSize"
                      panel_visibility="advanced"
                      panel_visibility_default_for_representation="points" />
            <Property name="LineWidth"
                      panel_visibility="advanced"
                      panel_visibility_default_for_representation="wireframe" />
          </PropertyGroup>

          <PropertyGroup label="Lighting">
            <Property name="Interpolation"
                      panel_visibility="advanced" />
            <Property name="Specular"
                      panel_visibility="default" />
            <Property name="SpecularColor"
                      panel_widget="color_selector"
                      panel_visibility="advanced" />
            <Property name="SpecularPower"
                      panel_visibility="advanced" />
          </PropertyGroup>

          <PropertyGroup label="Edge Styling">
            <Property name="EdgeColor"
                      panel_widget="color_selector_with_palette"
                      panel_visibility="advanced"
                      panel_visibility_default_for_representation="Surface With Edges" />
          </PropertyGroup>

          <PropertyGroup label="Backface Styling">
            <Property name="BackfaceRepresentation"
                      panel_visibility="advanced" />
            <Property name="BackfaceAmbientColor"
                      panel_widget="color_selector"
                      panel_visibility="advanced" />
            <Property name="BackfaceDiffuseColor"
                      panel_widget="color_selector"
                      panel_visibility="advanced" />
            <Property name="BackfaceOpacity"
                      panel_visibility="advanced" />
          </PropertyGroup>

          <PropertyGroup label="Transforming">
            <Property name="Position"
                      panel_visibility="advanced" />
            <Property name="Scale"
                      panel_visibility="advanced" />
            <Property name="Orientation"
                      panel_visibility="advanced" />
            <Property name="Origin"
                      panel_visibility="advanced" />
          </PropertyGroup>

          <PropertyGroup label="Miscellaneous">
            <Property name="Pickable"
                      panel_visibility="advanced" />
            <Property name="StaticMode"
                      panel_visibility="never" />
            <Property name="SuppressLOD"
                      panel_visibility="never" />
            <Property name="Texture"
                      panel_visibility="advanced" />
            <Property name="UserTransform"
                      panel_visibility="never" />
            <Property name="NonlinearSubdivisionLevel"
                      panel_visibility="advanced" />
            <Property name="BlockVisibility"
                      panel_visibility="never" />
            <Property name="BlockColor"
                      panel_visibility="never" />
            <Property name="BlockOpacity"
                      panel_visibility="never" />
          </PropertyGroup>
        </ExposedProperties>
      </SubProxy>

      <SubProxy>
        <Proxy name="OutlineRepresentation"
          proxygroup="representations" proxyname="OutlineRepresentation">
        </Proxy>
        <ShareProperties subproxy="CmbSurfaceRepresentation">
          <Exception name="Input" />
          <Exception name="Visibility" />
        </ShareProperties>
      </SubProxy>

      <SubProxy>
        <Proxy name="Glyph3DRepresentation"
          proxygroup="representations" proxyname="Glyph3DRepresentation">
        </Proxy>
        <ExposedProperties>
          <Property name="Masking"
                    panel_visibility="never" />
          <Property name="MeshVisibility"
                    panel_visibility="never" />
          <Property name="Orient"
                    panel_visibility="never" />
          <Property name="OrientationMode"
                    panel_visibility="never" />
          <Property name="ScaleFactor"
                    panel_visibility="never" />
          <Property name="ScaleMode"
                    panel_visibility="never" />
          <Property name="Scaling"
                    panel_visibility="never" />
          <Property name="SelectMaskArray"
                    panel_visibility="never" />
          <Property name="SelectOrientationVectors"
                    panel_visibility="never" />
          <Property name="SelectScaleArray"
                    panel_visibility="never" />
          <Property name="GlyphType"
                    panel_visibility="never" />
        </ExposedProperties>
        <ShareProperties subproxy="CmbSurfaceRepresentation">
          <Exception name="Input" />
          <Exception name="Visibility" />
        </ShareProperties>
      </SubProxy>


      <SubProxy>
        <Proxy name="SelectionRepresentation"
          proxygroup="representations"
          proxyname="SelectionRepresentation" />
        <ShareProperties subproxy="CmbSurfaceRepresentation">
          <Exception name="Input" />
          <Exception name="Visibility" />
          <Exception name="Representation" />
          <Exception name="Color" />
          <Exception name="LineWidth" />
          <Exception name="Opacity" />
          <Exception name="PointSize" />
        </ShareProperties>
        <ExposedProperties>
          <Property exposed_name="SelectionColor" name="Color" panel_visibility="never" />
          <Property exposed_name="SelectionOpacity" name="Opacity" panel_visibility="never" />
          <Property exposed_name="SelectionUseOutline" name="UseOutline" panel_visibility="never" />
          <Property exposed_name="SelectionRepresentation" name="Representation" panel_visibility="never" />
          <Property exposed_name="SelectionPointSize" name="PointSize" panel_visibility="never" />
          <Property exposed_name="SelectionLineWidth" name="LineWidth" panel_visibility="never" />
          <Property exposed_name="SelectionCellLabelVisibility" name="CellLabelVisibility" panel_visibility="never"/>
          <PropertyGroup label="Cell Label Font" panel_visibility="never" panel_widget="FontEditor">
            <Property exposed_name="SelectionCellLabelBold" name="CellLabelBold" function="Bold"/>
            <Property exposed_name="SelectionCellLabelColor" name="CellLabelColor" function="Color"/>
            <Property exposed_name="SelectionCellLabelFontFamily" name="CellLabelFontFamily" function="Family"/>
            <Property exposed_name="SelectionCellLabelFontSize" name="CellLabelFontSize" function="Size"/>
            <Property exposed_name="SelectionCellLabelFormat" name="CellLabelFormat" />
            <Property exposed_name="SelectionCellLabelItalic" name="CellLabelItalic" function="Italics"/>
            <Property exposed_name="SelectionCellLabelJustification" name="CellLabelJustification" />
            <Property exposed_name="SelectionCellLabelOpacity" name="CellLabelOpacity" function="Opacity"/>
            <Property exposed_name="SelectionCellLabelShadow" name="CellLabelShadow" function="Shadow"/>
          </PropertyGroup>
          <Property exposed_name="SelectionPointLabelVisibility" name="PointLabelVisibility" panel_visibility="never"/>
          <PropertyGroup label="Point Label Font" panel_visibility="never" panel_widget="FontEditor">
            <Property exposed_name="SelectionPointLabelBold" name="PointLabelBold" function="Bold"/>
            <Property exposed_name="SelectionPointLabelColor" name="PointLabelColor" function="Color"/>
            <Property exposed_name="SelectionPointLabelFontFamily" name="PointLabelFontFamily" function="Family"/>
            <Property exposed_name="SelectionPointLabelFontSize" name="PointLabelFontSize" function="Size"/>
            <Property exposed_name="SelectionPointLabelFormat" name="PointLabelFormat"/>
            <Property exposed_name="SelectionPointLabelItalic" name="PointLabelItalic" function="Italics"/>
            <Property exposed_name="SelectionPointLabelJustification" name="PointLabelJustification"/>
            <Property exposed_name="SelectionPointLabelOpacity" name="PointLabelOpacity" function="Opacity"/>
            <Property exposed_name="SelectionPointLabelShadow" name="PointLabelShadow" function="Shadow"/>
          </PropertyGroup>
        </ExposedProperties>
      </SubProxy>
    </PVRepresentationProxy>

  </ProxyGroup>

  <ProxyGroup name="textures">
    <SourceProxy name="CMBTexture" class="vtkTexture">
      <Documentation>
        This is a proxy for a vtkTexture which also exposes
        RestrictPowerOf2ImageSmaller.
      </Documentation>

      <InputProperty name="Input" command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkImageData"/>
        </DataTypeDomain>
      </InputProperty>

      <IntVectorProperty
        name="RestrictPowerOf2ImageSmaller"
        command="SetRestrictPowerOf2ImageSmaller"
        number_of_elements="1"
        default_values="0"
        animateable="1">
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <Hints>
        <WriterFactory extensions="neu"
                       file_description="GAMBIT Files" />
      </Hints>
    </SourceProxy>
  </ProxyGroup>

  <ProxyGroup name="CmbArcGroup">
    <SourceProxy name="ArcProvider" class="vtkCMBArcProvider">
     <IdTypeVectorProperty
        name="ArcId"
        command="SetArcId"
        number_of_elements="1"
        default_values="none" >
       <Documentation>
         Set the Id of the arc to be accessed.
       </Documentation>
     </IdTypeVectorProperty>
      <IdTypeVectorProperty
         name="StartPointId"
         command="SetStartPointId"
         number_of_elements="1"
         default_values="none" >
        <Documentation>
          Set the start point Id of the arc to be accessed.
        </Documentation>
      </IdTypeVectorProperty>
      <IdTypeVectorProperty
         name="EndPointId"
         command="SetEndPointId"
         number_of_elements="1"
         default_values="none" >
        <Documentation>
          Set the End point Id of the arc to be accessed.
        </Documentation>
      </IdTypeVectorProperty>
    </SourceProxy>

    <SourceProxy name="PolygonProvider" class="vtkCMBArcPolygonProvider">
     <Documentation>
        Representation of the polygon on the client.
     </Documentation>
    </SourceProxy>

    <ArcOperatorProxy name="PolygonFromArcsOperator" class="vtkCMBPolygonFromArcsOperator">
     <Documentation>
        This class is empty as we have converted the proxy to the object in vtkCMBArcPolygonCreateClientOperator
     </Documentation>
    </ArcOperatorProxy>


    <ArcOperatorProxy name="CreateOperator" class="vtkCMBArcCreateOperator">
      <IdTypeVectorProperty
        name="CreatedArcId"
        command="GetCreatedArcId"
        number_of_elements="1"
        information_only="1"
        default_values="0" >
       <SimpleIdTypeInformationHelper/>
       <Documentation>
         Returns the created arc id
       </Documentation>
       </IdTypeVectorProperty>
      <!-- End of CreateOperator -->
    </ArcOperatorProxy>

    <ArcOperatorProxy name="DeleteOperator" class="vtkCMBArcDeleteOperator">
      <IntVectorProperty
         name="DeleteMode"
         command="SetDeleteMode"
         number_of_elements="1"
         default_values="0" >
        <Documentation>
          Set the mode of operation of the delete operator. The delete modes
          are 0 == delete, 1 == marked for delete, 2 == unmark set for delete
        </Documentation>
      </IntVectorProperty>
      <!-- End of DeleteOperator -->
    </ArcOperatorProxy>

    <ArcOperatorProxy name="UpdateOperator" class="vtkCMBArcUpdateOperator">
      <IdTypeVectorProperty
         name="ArcId"
         command="SetArcId"
         number_of_elements="1"
         default_values="-1" >
        <Documentation>
          Set the arc to operate on
        </Documentation>
      </IdTypeVectorProperty>

      <IntVectorProperty
         name="RecreateArcBehavior"
         command="SetRecreateArcBehavior"
         number_of_elements="1"
         default_values="1" >
        <Documentation>
          Set the default behavior of the operator to be (move or recreate)
          Default is set to recreate here
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
         name="EndNodeToMove"
         command="SetEndNodeToMove"
         number_of_elements="1"
         default_values="-1" >
        <Documentation>
          Set the end node to have be moved only while being edited
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
         name="EndNodeToRecreate"
         command="SetEndNodeToRecreate"
         number_of_elements="1"
         default_values="-1" >
        <Documentation>
          Set the end node to have be deleted or inserted and needs to be recreated
        </Documentation>
      </IntVectorProperty>
      <IdTypeVectorProperty
         name="StartPointId"
         command="SetStartPointId"
         number_of_elements="1"
         default_values="none" >
        <Documentation>
          Set the start point Id of the arc to be accessed.
        </Documentation>
      </IdTypeVectorProperty>
      <IdTypeVectorProperty
         name="EndPointId"
         command="SetEndPointId"
         number_of_elements="1"
         default_values="none" >
        <Documentation>
          Set the End point Id of the arc to be accessed.
        </Documentation>
      </IdTypeVectorProperty>

      <!-- End of UpdateOperator -->
    </ArcOperatorProxy>
    <ArcOperatorProxy name="ArcModifyOperator" class="vtkCMBSubArcModifyOperator">
      <IdTypeVectorProperty
         name="ArcId"
         command="SetArcId"
         number_of_elements="1"
         default_values="-1" >
        <Documentation>
          Set the arc to operate on
        </Documentation>
      </IdTypeVectorProperty>

      <IntVectorProperty
         name="OperationType"
         command="SetOperationType"
         number_of_elements="1"
         default_values="0" >
        <Documentation>
          Set the OperationType, default is OpNone
        </Documentation>
      </IntVectorProperty>

      <!-- End of ArcModifyOperator -->
    </ArcOperatorProxy>

    <ArcOperatorProxy name="SplitOnIndexOperator" class="vtkCMBArcSplitOnIndexOperator">
      <IntVectorProperty
         name="SplitIndex"
         command="SetIndex"
         number_of_elements="1"
         default_values="-1" >
        <Documentation>
          Set the index to split on
        </Documentation>
      </IntVectorProperty>

      <IdTypeVectorProperty
        name="CreatedArcId"
        command="GetCreatedArcId"
        number_of_elements="1"
        information_only="1"
        default_values="0" >
       <SimpleIdTypeInformationHelper/>
       <Documentation>
         Returns the created arc id after splitting
       </Documentation>
       </IdTypeVectorProperty>

      <!-- End of SplitOnIndexOperator -->
    </ArcOperatorProxy>

    <ArcOperatorProxy name="AutoConnectOperator" class="vtkCMBArcAutoConnectOperator">
      <IdTypeVectorProperty
        name="CreatedArcId"
        command="GetCreatedArcId"
        number_of_elements="1"
        information_only="1"
        default_values="0" >
       <SimpleIdTypeInformationHelper/>
       <Documentation>
         Returns the created arc id
       </Documentation>
       </IdTypeVectorProperty>
      <!-- End of AutoConnectOperator -->
    </ArcOperatorProxy>

    <ArcOperatorProxy name="MergeArcsOperator" class="vtkCMBArcMergeArcsOperator">
      <IdTypeVectorProperty
        name="CreatedArcId"
        command="GetCreatedArcId"
        number_of_elements="1"
        information_only="1"
        default_values="0" >
       <SimpleIdTypeInformationHelper/>
       <Documentation>
         Returns the created arc id
       </Documentation>
       </IdTypeVectorProperty>
       <IdTypeVectorProperty
         name="ArcIdToDelete"
         command="GetArcIdToDelete"
         number_of_elements="1"
         information_only="1"
         default_values="0" >
        <SimpleIdTypeInformationHelper/>
        <Documentation>
          Returns the deleted arc id
        </Documentation>
        </IdTypeVectorProperty>
      <!-- End of MergeArcsOperator -->
    </ArcOperatorProxy>

    <ArcOperatorProxy name="GrowOperator" class="vtkCMBArcGrowOperator">

      <IntVectorProperty
         name="AddArc"
         command="AddArc"
         number_of_elements="1"
         default_values="-1" >
        <Documentation>
          Add an Arc to grow from
        </Documentation>
      </IntVectorProperty>

      <IdTypeVectorProperty
       name="GrownArcSetIds"
       command="GetGrownArcSetIds"
       number_of_elements="1"
       information_only="1"
       default_values="-1">
       <IdTypeArrayInformationHelper/>
     </IdTypeVectorProperty>
      <!-- End of GrowOperator -->
    </ArcOperatorProxy>

    <ArcOperatorProxy name="PickPointOperator" class="vtkCMBArcPickPointOperator">
      <IdTypeVectorProperty
         name="ArcId"
         command="SetArcId"
         number_of_elements="1"
         default_values="-1" >
        <Documentation>
          Set the arc to operate on
        </Documentation>
      </IdTypeVectorProperty>

      <IdTypeVectorProperty
       name="PickedPointId"
       command="GetPickedPointId"
       number_of_elements="1"
       information_only="1"
       default_values="-1">
        <SimpleIdTypeInformationHelper/>
      </IdTypeVectorProperty>

    </ArcOperatorProxy>
  </ProxyGroup>

</ServerManagerConfiguration>
